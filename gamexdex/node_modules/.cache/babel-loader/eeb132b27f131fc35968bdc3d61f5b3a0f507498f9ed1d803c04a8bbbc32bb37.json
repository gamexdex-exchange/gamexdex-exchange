{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.normalizeTxParams = void 0;\nconst util_1 = require(\"@ethereumjs/util\");\nconst normalizeTxParams = _txParams => {\n  const txParams = Object.assign({}, _txParams);\n  txParams.gasLimit = (0, util_1.toType)(txParams.gasLimit ?? txParams.gas, util_1.TypeOutput.BigInt);\n  txParams.data = txParams.data === undefined ? txParams.input : txParams.data;\n  // check and convert gasPrice and value params\n  txParams.gasPrice = txParams.gasPrice !== undefined ? BigInt(txParams.gasPrice) : undefined;\n  txParams.value = txParams.value !== undefined ? BigInt(txParams.value) : undefined;\n  // strict byte length checking\n  txParams.to = txParams.to !== null && txParams.to !== undefined ? (0, util_1.setLengthLeft)((0, util_1.toBuffer)(txParams.to), 20) : null;\n  // Normalize the v/r/s values. If RPC returns '0x0', ensure v/r/s are set to `undefined` in the tx.\n  // If this is not done, then the transaction creation will throw, because `v` is `0`.\n  // Note: this still means that `isSigned` will return `false`.\n  // v/r/s values are `0x0` on networks like Optimism, where the tx is a system tx.\n  // For instance: https://optimistic.etherscan.io/tx/0xf4304cb09b3f58a8e5d20fec5f393c96ccffe0269aaf632cb2be7a8a0f0c91cc\n  txParams.v = txParams.v === '0x0' ? '0x' : txParams.v;\n  txParams.r = txParams.r === '0x0' ? '0x' : txParams.r;\n  txParams.s = txParams.s === '0x0' ? '0x' : txParams.s;\n  if (txParams.v !== '0x') {\n    txParams.v = (0, util_1.toType)(txParams.v, util_1.TypeOutput.BigInt);\n  }\n  return txParams;\n};\nexports.normalizeTxParams = normalizeTxParams;","map":{"version":3,"names":["util_1","require","normalizeTxParams","_txParams","txParams","Object","assign","gasLimit","toType","gas","TypeOutput","BigInt","data","undefined","input","gasPrice","value","to","setLengthLeft","toBuffer","v","r","s","exports"],"sources":["/Users/Einpunk Community/Documents/Brownie/brownie_gamex_vault/node_modules/@ethereumjs/tx/src/fromRpc.ts"],"sourcesContent":["import { TypeOutput, setLengthLeft, toBuffer, toType } from '@ethereumjs/util'\n\nimport type { TxData } from './types'\n\nexport const normalizeTxParams = (_txParams: any): TxData => {\n  const txParams = Object.assign({}, _txParams)\n\n  txParams.gasLimit = toType(txParams.gasLimit ?? txParams.gas, TypeOutput.BigInt)\n  txParams.data = txParams.data === undefined ? txParams.input : txParams.data\n\n  // check and convert gasPrice and value params\n  txParams.gasPrice = txParams.gasPrice !== undefined ? BigInt(txParams.gasPrice) : undefined\n  txParams.value = txParams.value !== undefined ? BigInt(txParams.value) : undefined\n\n  // strict byte length checking\n  txParams.to =\n    txParams.to !== null && txParams.to !== undefined\n      ? setLengthLeft(toBuffer(txParams.to), 20)\n      : null\n\n  // Normalize the v/r/s values. If RPC returns '0x0', ensure v/r/s are set to `undefined` in the tx.\n  // If this is not done, then the transaction creation will throw, because `v` is `0`.\n  // Note: this still means that `isSigned` will return `false`.\n  // v/r/s values are `0x0` on networks like Optimism, where the tx is a system tx.\n  // For instance: https://optimistic.etherscan.io/tx/0xf4304cb09b3f58a8e5d20fec5f393c96ccffe0269aaf632cb2be7a8a0f0c91cc\n\n  txParams.v = txParams.v === '0x0' ? '0x' : txParams.v\n  txParams.r = txParams.r === '0x0' ? '0x' : txParams.r\n  txParams.s = txParams.s === '0x0' ? '0x' : txParams.s\n\n  if (txParams.v !== '0x') {\n    txParams.v = toType(txParams.v, TypeOutput.BigInt)\n  }\n\n  return txParams\n}\n"],"mappings":";;;;;;AAAA,MAAAA,MAAA,GAAAC,OAAA;AAIO,MAAMC,iBAAiB,GAAIC,SAAc,IAAY;EAC1D,MAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEH,SAAS,CAAC;EAE7CC,QAAQ,CAACG,QAAQ,GAAG,IAAAP,MAAA,CAAAQ,MAAM,EAACJ,QAAQ,CAACG,QAAQ,IAAIH,QAAQ,CAACK,GAAG,EAAET,MAAA,CAAAU,UAAU,CAACC,MAAM,CAAC;EAChFP,QAAQ,CAACQ,IAAI,GAAGR,QAAQ,CAACQ,IAAI,KAAKC,SAAS,GAAGT,QAAQ,CAACU,KAAK,GAAGV,QAAQ,CAACQ,IAAI;EAE5E;EACAR,QAAQ,CAACW,QAAQ,GAAGX,QAAQ,CAACW,QAAQ,KAAKF,SAAS,GAAGF,MAAM,CAACP,QAAQ,CAACW,QAAQ,CAAC,GAAGF,SAAS;EAC3FT,QAAQ,CAACY,KAAK,GAAGZ,QAAQ,CAACY,KAAK,KAAKH,SAAS,GAAGF,MAAM,CAACP,QAAQ,CAACY,KAAK,CAAC,GAAGH,SAAS;EAElF;EACAT,QAAQ,CAACa,EAAE,GACTb,QAAQ,CAACa,EAAE,KAAK,IAAI,IAAIb,QAAQ,CAACa,EAAE,KAAKJ,SAAS,GAC7C,IAAAb,MAAA,CAAAkB,aAAa,EAAC,IAAAlB,MAAA,CAAAmB,QAAQ,EAACf,QAAQ,CAACa,EAAE,CAAC,EAAE,EAAE,CAAC,GACxC,IAAI;EAEV;EACA;EACA;EACA;EACA;EAEAb,QAAQ,CAACgB,CAAC,GAAGhB,QAAQ,CAACgB,CAAC,KAAK,KAAK,GAAG,IAAI,GAAGhB,QAAQ,CAACgB,CAAC;EACrDhB,QAAQ,CAACiB,CAAC,GAAGjB,QAAQ,CAACiB,CAAC,KAAK,KAAK,GAAG,IAAI,GAAGjB,QAAQ,CAACiB,CAAC;EACrDjB,QAAQ,CAACkB,CAAC,GAAGlB,QAAQ,CAACkB,CAAC,KAAK,KAAK,GAAG,IAAI,GAAGlB,QAAQ,CAACkB,CAAC;EAErD,IAAIlB,QAAQ,CAACgB,CAAC,KAAK,IAAI,EAAE;IACvBhB,QAAQ,CAACgB,CAAC,GAAG,IAAApB,MAAA,CAAAQ,MAAM,EAACJ,QAAQ,CAACgB,CAAC,EAAEpB,MAAA,CAAAU,UAAU,CAACC,MAAM,CAAC;;EAGpD,OAAOP,QAAQ;AACjB,CAAC;AA/BYmB,OAAA,CAAArB,iBAAiB,GAAAA,iBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}