{"ast":null,"code":"import _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { get, setAPIKey } from '@toruslabs/http-helpers';\nimport { SafeEventEmitter, ObjectMultiplex, createStreamMiddleware, JRPCEngine, createIdRemapMiddleware, BasePostMessageStream, setupMultiplex } from '@toruslabs/openlogin-jrpc';\nimport deepmerge from 'lodash.merge';\nimport { rpcErrors, EthereumProviderError } from '@metamask/rpc-errors';\nimport dequal from 'fast-deep-equal';\nimport { duplex } from 'is-stream';\nimport pump from 'pump';\nimport loglevel from 'loglevel';\nimport { Duplex } from 'readable-stream';\nimport { EventEmitter } from 'events';\nconst WALLET_VERIFIERS = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  TWITCH: \"twitch\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  EMAIL_PASSWORDLESS: \"torus-auth0-email-passwordless\"\n};\nconst WALLET_OPENLOGIN_VERIFIER_MAP = {\n  [WALLET_VERIFIERS.GOOGLE]: \"tkey-google\",\n  [WALLET_VERIFIERS.FACEBOOK]: \"tkey-facebook\",\n  [WALLET_VERIFIERS.TWITCH]: \"tkey-twitch\",\n  [WALLET_VERIFIERS.REDDIT]: \"tkey-reddit\",\n  [WALLET_VERIFIERS.DISCORD]: \"tkey-discord\",\n  [WALLET_VERIFIERS.EMAIL_PASSWORDLESS]: \"tkey-auth0-email-passwordless\"\n};\nconst PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\",\n  BANXA: \"banxa\"\n};\nconst SUPPORTED_PAYMENT_NETWORK = {\n  MAINNET: \"mainnet\",\n  MATIC: \"matic\",\n  BSC_MAINNET: \"bsc_mainnet\",\n  AVALANCHE_MAINNET: \"avalanche_mainnet\",\n  XDAI: \"xdai\",\n  ARBITRUM_MAINNET: \"arbitrum_mainnet\",\n  OPTIMISM_MAINNET: \"optimism_mainnet\"\n};\nconst TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  BINANCE: \"binance\",\n  TESTING: \"testing\",\n  LRC: \"lrc\",\n  BETA: \"beta\",\n  BNB: \"bnb\",\n  POLYGON: \"polygon\",\n  ALPHA: \"alpha\"\n};\nconst BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\"\n};\n\n/**\n * From https://min-api.cryptocompare.com/data/v2/pair/mapping/fsym?fsym=BTC&extraParams=YourSite\n * GET https://min-api.cryptocompare.com/data/v2/pair/mapping/fsym?fsym=BTC\n * Then map over returned entries, picking tsym\n *\n * Last updated: Date of commit\n */\nconst CRYPTO_COMPARE_CURRENCIES = [\"ETH\", \"USDT\", \"USDC\", \"TUSD\", \"EOSDT\", \"USD\", \"DAI\", \"GUSD\", \"DKKT\", \"PAX\", \"ILS\", \"RUB\", \"BYN\", \"EUR\", \"GBP\", \"JPY\", \"KRW\", \"PLN\", \"MXN\", \"AUD\", \"BRL\", \"CAD\", \"CHF\", \"KPW\", \"LAK\", \"LBP\", \"LKR\", \"XOF\", \"CNHT\", \"DOGE\", \"UAH\", \"TRY\", \"HKD\", \"XJP\", \"SGD\", \"USC\", \"NZD\", \"NGN\", \"RUR\", \"COP\", \"GHS\", \"EGP\", \"IDR\", \"BHD\", \"CRC\", \"PEN\", \"AED\", \"DOP\", \"PKR\", \"HUF\", \"VND\", \"XAR\", \"LTC\", \"RON\", \"OMR\", \"MYR\", \"DKK\", \"UGX\", \"ZMW\", \"SAR\", \"SEK\", \"GEL\", \"RWF\", \"IRR\", \"TZS\", \"CNY\", \"VEF\", \"BDT\", \"HRK\", \"CLP\", \"THB\", \"XAF\", \"ARS\", \"UYU\", \"SZL\", \"KZT\", \"NOK\", \"KES\", \"PAB\", \"INR\", \"CZK\", \"MAD\", \"TWD\", \"PHP\", \"ZAR\", \"BOB\", \"CDF\", \"DASH\", \"VES\", \"ISK\", \"MWK\", \"BAM\", \"TTD\", \"XRP\", \"JOD\", \"RSD\", \"HNL\", \"BGN\", \"GTQ\", \"BWP\", \"XMR\", \"MMK\", \"QAR\", \"AOA\", \"KWD\", \"MUR\", \"WUSD\", \"WEUR\", \"WAVES\", \"WTRY\", \"LRD\", \"LSL\", \"LYD\", \"AWG\", \"MDL\", \"BTO\", \"EURS\", \"CHFT\", \"MKD\", \"MNT\", \"MOP\", \"MRO\", \"MVR\", \"VOLLAR\", \"CKUSD\", \"KHR\", \"VUV\", \"BITCNY\", \"QC\", \"BBD\", \"NAD\", \"NPR\", \"PGK\", \"PYG\", \"BIF\", \"BMD\", \"BND\", \"XLM\", \"BNB\", \"SCR\", \"BAT\", \"CRO\", \"HT\", \"KCS\", \"LEO\", \"LINK\", \"MKR\", \"NPXS\", \"OMG\", \"REP\", \"ZB\", \"ZIL\", \"ZRX\", \"BCH\", \"BZD\", \"CUP\", \"CVE\", \"DJF\", \"DZD\", \"ERN\", \"ETB\", \"FJD\", \"FKP\", \"BUSD\", \"ANCT\", \"ALL\", \"AMD\", \"ANG\", \"CNYX\", \"IQD\", \"UZS\", \"TND\", \"GGP\", \"XAU\", \"KGS\", \"GIP\", \"JMD\", \"ZEC\", \"USDP\", \"BSV\", \"EMC2\", \"SNT\", \"GTO\", \"POWR\", \"EUSD\", \"EURT\", \"BCY\", \"BTS\", \"ATM\", \"BLOCKPAY\", \"ARDR\", \"AMP\", \"B2X\", \"BITGOLD\", \"BITEUR\", \"ATB\", \"BITUSD\", \"AGRS\", \"DFXT\", \"HIKEN\", \"BIX\", \"KNC\", \"EOS\", \"COB\", \"COSS\", \"BMH\", \"NANO\", \"BDG\", \"BNT\", \"XVG\", \"LKK1Y\", \"LKK\", \"USDK\", \"EURN\", \"NZDT\", \"JSE\", \"GMD\", \"GNF\", \"GYD\", \"YER\", \"XPF\", \"HTG\", \"SLL\", \"SOS\", \"WST\", \"SVC\", \"SYP\", \"NEO\", \"KMF\", \"JUMP\", \"AYA\", \"BLAST\", \"WGR\", \"BCN\", \"BTG\", \"URALS\", \"INN\", \"USDQ\", \"CNH\", \"HUSD\", \"BKRW\", \"NZDX\", \"EURX\", \"CADX\", \"USDEX\", \"JPYX\", \"AUDX\", \"VNDC\", \"EON\", \"GBPX\", \"CHFX\", \"USDJ\", \"IDRT\", \"USDS\", \"USDN\", \"BIDR\", \"IDK\", \"BSD\", \"BTN\", \"KYD\", \"NIO\", \"SBD\", \"SDG\", \"SHP\", \"TOP\", \"XCD\", \"XCHF\", \"CNYT\", \"GYEN\", \"ZUSD\", \"GOLD\", \"TRX\", \"TRYB\", \"PLATC\", \"STRAX\", \"UST\", \"GLM\", \"VAI\", \"BRZ\", \"DDRST\", \"XAUT\", \"MIM\"];\n/**\n * currencies supported by the payment provider\n * Last updated: Date of commit\n */\nconst PROVIDER_SUPPORTED_FIAT_CURRENCIES = {\n  // https://integrations.simplex.com/supported_currencies\n  // https://support.moonpay.com/hc/en-gb/articles/360011931457-Which-fiat-currencies-are-supported-\n  [PAYMENT_PROVIDER.MOONPAY]: [\"AUD\", \"BGN\", \"BRL\", \"CAD\", \"CHF\", \"CNY\", \"COP\", \"CZK\", \"DKK\", \"DOP\", \"EGP\", \"EUR\", \"GBP\", \"HKD\", \"HRK\", \"IDR\", \"ILS\", \"JPY\", \"JOD\", \"KES\", \"KRW\", \"KWD\", \"LKR\", \"MAD\", \"MXN\", \"MYR\", \"NGN\", \"NOK\", \"NZD\", \"OMR\", \"PEN\", \"PKR\", \"PLN\", \"RON\", \"RUB\", \"SEK\", \"SGD\", \"THB\", \"TRY\", \"TWD\", \"USD\", \"VND\", \"ZAR\"],\n  /**\n   * https://docs.sendwyre.com/docs/supported-currencies#fiat\n   * The ones where credit card is supported\n   */\n  [PAYMENT_PROVIDER.WYRE]: [\"USD\", \"EUR\", \"GBP\", \"AUD\", \"CAD\", \"NZD\", \"CNY\", \"ARS\", \"BRL\", \"CHF\", \"CLP\", \"COP\", \"CZK\", \"DKK\", \"HKD\", \"ILS\", \"INR\", \"ISK\", \"JPY\", \"KRW\", \"MXN\", \"MYR\", \"NOK\", \"PHP\", \"PLN\", \"SEK\", \"SGD\", \"THB\", \"VND\", \"ZAR\"],\n  // https://support.ramp.network/en/articles/471-supported-fiat-currencies\n  [PAYMENT_PROVIDER.RAMPNETWORK]: [\"USD\", \"EUR\", \"GBP\", \"BMD\", \"BAM\", \"BWP\", \"BRL\", \"BGN\", \"COP\", \"CRC\", \"CZK\", \"DKK\", \"DOP\", \"GEL\", \"GTQ\", \"HNL\", \"HUF\", \"ISK\", \"INR\", \"ILS\", \"KZT\", \"KES\", \"KWD\", \"LAK\", \"MKD\", \"MYR\", \"MXN\", \"MDL\", \"MZN\", \"NZD\", \"NGN\", \"PYG\", \"PEN\", \"PLN\", \"RON\", \"RSD\", \"SGD\", \"ZAR\", \"LKR\", \"SEK\", \"CHF\", \"TJS\", \"THB\", \"UYU\"],\n  // From https://xanpool.com/ fiat select dropdown\n  [PAYMENT_PROVIDER.XANPOOL]: [\"SGD\", \"HKD\", \"THB\", \"PHP\", \"INR\", \"IDR\", \"MYR\", \"AUD\", \"NZD\", \"KRW\"],\n  // https://help.mercuryo.io/en/articles/6121246-which-fiat-currencies-are-supported\n  // RUB / UAH currently not supported\n  [PAYMENT_PROVIDER.MERCURYO]: [\"EUR\", \"USD\", \"GBP\", \"TRY\", \"JPY\", \"BRL\", \"NGN\", \"VND\", \"MXN\", \"KRW\", \"PLN\", \"SEK\", \"CHF\", \"CAD\", \"CZK\", \"DKK\", \"BGN\", \"HKD\", \"AUD\", \"INR\"],\n  /**\n   * https://support.transak.com/hc/en-us/articles/360020615578-Credit-and-Debit-Card-Payments-through-Transak\n   * or\n   * https://transak.stoplight.io/docs/transak-docs/b3A6OTk1ODQ0-2-get-fiat-currencies\n   */\n  [PAYMENT_PROVIDER.TRANSAK]: [\"ARS\", \"AUD\", \"BBD\", \"BGN\", \"BMD\", \"BRL\", \"CAD\", \"CHF\", \"CLP\", \"CRC\", \"CZK\", \"DKK\", \"DOP\", \"EUR\", \"FJD\", \"FKP\", \"GBP\", \"GIP\", \"HRK\", \"HUF\", \"IDR\", \"ILS\", \"ISK\", \"JMD\", \"JPY\", \"KES\", \"KRW\", \"MDL\", \"MXN\", \"MYR\", \"NOK\", \"NZD\", \"PEN\", \"PHP\", \"PLN\", \"PYG\", \"RON\", \"SEK\", \"SGD\", \"THB\", \"TRY\", \"TZS\", \"USD\", \"ZAR\"],\n  [PAYMENT_PROVIDER.BANXA]: [\"AUD\", \"CAD\", \"CZK\", \"DKK\", \"EUR\", \"GBP\", \"HKD\", \"JPY\", \"NOK\", \"NZD\", \"NZD\", \"PLN\", \"RUB\", \"SEK\", \"SGD\", \"TRY\", \"USD\"]\n};\nconst cryptoCompareCurrenciesSet = new Set(CRYPTO_COMPARE_CURRENCIES);\n/**\n * Fiat currencies that we support\n */\nfunction supportedFiatCurrencies(provider) {\n  const providerSupportedFiatCurrencies = PROVIDER_SUPPORTED_FIAT_CURRENCIES[provider];\n  return providerSupportedFiatCurrencies.filter(currency => cryptoCompareCurrenciesSet.has(currency));\n}\nconst paymentProviders$1 = {\n  [PAYMENT_PROVIDER.MOONPAY]: {\n    line1: \"Credit/ Debit Card/ Apple Pay\",\n    line2: \"4.5% or 5 USD\",\n    line3: \"2,000€/day, 10,000€/mo\",\n    supportPage: \"https://help.moonpay.io/en/\",\n    minOrderValue: 24.99,\n    maxOrderValue: 50000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.MOONPAY),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"aave\",\n        display: \"AAVE\"\n      }, {\n        value: \"bat\",\n        display: \"BAT\"\n      }, {\n        value: \"dai\",\n        display: \"DAI\"\n      }, {\n        value: \"eth\",\n        display: \"ETH\"\n      }, {\n        value: \"mkr\",\n        display: \"MKR\"\n      }, {\n        value: \"matic\",\n        display: \"MATIC\"\n      }, {\n        value: \"usdt\",\n        display: \"USDT\"\n      }, {\n        value: \"uni\",\n        display: \"UNI\"\n      }, {\n        value: \"usdc\",\n        display: \"USDC\"\n      }, {\n        value: \"weth\",\n        display: \"WETH\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"eth_polygon\",\n        display: \"ETH\"\n      }, {\n        value: \"matic_polygon\",\n        display: \"MATIC\"\n      }, {\n        value: \"usdc_polygon\",\n        display: \"USDC\"\n      }, {\n        value: \"usdt_polygon\",\n        display: \"USDT\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [{\n        value: \"bnb_bsc\",\n        display: \"BNB\"\n      }, {\n        value: \"busd_bsc\",\n        display: \"BUSD\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{\n        value: \"avax_cchain\",\n        display: \"AVAX\"\n      }, {\n        value: \"usdc_cchain\",\n        display: \"USDC\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.ARBITRUM_MAINNET]: [{\n        value: \"eth_arbitrum\",\n        display: \"ETH\"\n      }, {\n        value: \"usdc_arbitrum\",\n        display: \"USDC\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.OPTIMISM_MAINNET]: [{\n        value: \"eth_optimism\",\n        display: \"ETH\"\n      }, {\n        value: \"usdc_optimism\",\n        display: \"USDC\"\n      }]\n    },\n    includeFees: true,\n    api: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.WYRE]: {\n    line1: \"Apple Pay/ Debit/ Credit Card\",\n    line2: \"4.9% + 30¢ or 5 USD\",\n    line3: \"$250/day\",\n    supportPage: \"https://support.sendwyre.com/en/\",\n    minOrderValue: 5,\n    maxOrderValue: 500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.WYRE),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"AAVE\",\n        display: \"AAVE\"\n      }, {\n        value: \"COMP\",\n        display: \"COMP\"\n      }, {\n        value: \"BAT\",\n        display: \"BAT\"\n      }, {\n        value: \"BUSD\",\n        display: \"BUSD\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"WBTC\",\n        display: \"WBTC\"\n      }, {\n        value: \"MKR\",\n        display: \"MKR\"\n      }, {\n        value: \"UNI\",\n        display: \"UNI\"\n      }, {\n        value: \"WETH\",\n        display: \"WETH\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"mUSDC\",\n        display: \"USDC\"\n      }, {\n        value: \"MATIC\",\n        display: \"MATIC\"\n      }, {\n        value: \"MWETH\",\n        display: \"WETH\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{\n        value: \"AVAXC\",\n        display: \"AVAX\"\n      }, {\n        value: \"AVAXCUSDC\",\n        display: \"USDC\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [{\n        value: \"BNB\",\n        display: \"BNB\"\n      }, {\n        value: \"BBUSD\",\n        display: \"BUSD\"\n      }]\n    },\n    includeFees: false,\n    api: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.RAMPNETWORK]: {\n    line1: \"Debit Card/ <br>Apple Pay/ Bank transfer\",\n    line2: \"0.49% - 2.9%\",\n    line3: \"5,000€/purchase, 20,000€/mo\",\n    supportPage: \"https://instant.ramp.network/\",\n    minOrderValue: 50,\n    maxOrderValue: 20000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.RAMPNETWORK),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"BAT\",\n        display: \"BAT\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"MATIC_BAT\",\n        display: \"BAT\"\n      }, {\n        value: \"MATIC_DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"MATIC_MATIC\",\n        display: \"MATIC\"\n      }, {\n        value: \"MATIC_USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"MATIC_USDT\",\n        display: \"USDT\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{\n        value: \"AVAX_AVAX\",\n        display: \"AVAX\"\n      }, {\n        value: \"AVAX_USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"AVAX_USDT\",\n        display: \"USDT\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.ARBITRUM_MAINNET]: [{\n        value: \"ARBITRUM_ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"ARBITRUM_USDC.e\t\",\n        display: \"USDC\"\n      }, {\n        value: \"ARBITRUM_USDT\",\n        display: \"USDT\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.OPTIMISM_MAINNET]: [{\n        value: \"OPTIMISM_DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"OPTIMISM_OPTIMISM\",\n        display: \"OPTIMISM\"\n      }, {\n        value: \"OPTIMISM_USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"OPTIMISM_USDT\",\n        display: \"USDT\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [{\n        value: \"BSC_BNB\",\n        display: \"BNB\"\n      }, {\n        value: \"BSC_BUSD\",\n        display: \"BUSD\"\n      }]\n    },\n    includeFees: true,\n    api: true,\n    receiveHint: \"walletTopUp.receiveHintRamp\",\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.XANPOOL]: {\n    line1: \"PayNow/ InstaPay/ FPS/ GoJekPay/ UPI/ PromptPay/ <br>ViettelPay/ DuitNow\",\n    line2: \"2.5% buying, 3% selling\",\n    line3: \"$2,500 / day\",\n    supportPage: \"mailto:support@xanpool.com\",\n    minOrderValue: 100,\n    maxOrderValue: 2500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.XANPOOL),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }]\n    },\n    includeFees: true,\n    api: true,\n    sell: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.MERCURYO]: {\n    line1: \"Credit/ Debit Card/ Apple Pay\",\n    line2: \"3.95% or 4 USD\",\n    line3: \"10,000€/day, 25,000€/mo\",\n    supportPage: \"mailto:support@mercuryo.io\",\n    minOrderValue: 30,\n    maxOrderValue: 5000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.MERCURYO),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"BAT\",\n        display: \"BAT\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [{\n        value: \"BNB\",\n        display: \"BNB\"\n      }, {\n        value: \"BUSD\",\n        display: \"BUSD\"\n      }, {\n        value: \"1INCH\",\n        display: \"1INCH\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{\n        value: \"AVAX\",\n        display: \"AVAX\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"MATIC\",\n        display: \"MATIC\"\n      }]\n    },\n    includeFees: true,\n    api: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.TRANSAK]: {\n    line1: \"Apple & Google Pay / Credit/Debit Card<br/>Bangkok Bank Mobile & iPay<br/>Bank Transfer (sepa/gbp) / SCB Mobile & Easy\",\n    line2: \"0.99% - 5.5% or 5 USD\",\n    line3: \"$5,000/day, $28,000/mo\",\n    supportPage: \"https://support.transak.com/hc/en-US\",\n    minOrderValue: 30,\n    maxOrderValue: 500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.TRANSAK),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"1INCH\",\n        display: \"1INCH\"\n      }, {\n        value: \"BAT\",\n        display: \"BAT\"\n      }, {\n        value: \"AAVE\",\n        display: \"AAVE\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"BAT\",\n        display: \"BAT\"\n      }, {\n        value: \"AAVE\",\n        display: \"AAVE\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"MATIC\",\n        display: \"MATIC\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }, {\n        value: \"WETH\",\n        display: \"WETH\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [{\n        value: \"BAT\",\n        display: \"BAT\"\n      }, {\n        value: \"BNB\",\n        display: \"BNB\"\n      }, {\n        value: \"BUSD\",\n        display: \"BUSD\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{\n        value: \"AVAX\",\n        display: \"AVAX\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.OPTIMISM_MAINNET]: [{\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.ARBITRUM_MAINNET]: [{\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"ETH\",\n        display: \"ETH\"\n      }]\n    },\n    includeFees: true,\n    enforceMax: true\n  },\n  [PAYMENT_PROVIDER.BANXA]: {\n    line1: \"Debit Card/ <br>Apple Pay/ Bank transfer\",\n    line2: \"0.49% - 2.9%\",\n    line3: \"5,000€/purchase, 20,000€/mo\",\n    supportPage: \"https://support.banxa.com\",\n    minOrderValue: 20,\n    maxOrderValue: 15000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.BANXA),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"MKR\",\n        display: \"MKR\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }, {\n        value: \"BUSD\",\n        display: \"BUSD\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"BAT\",\n        display: \"BAT\"\n      }, {\n        value: \"AAVE\",\n        display: \"AAVE\"\n      }, {\n        value: \"COMP\",\n        display: \"COMP\"\n      }, {\n        value: \"UNI\",\n        display: \"UNI\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"MATIC\",\n        display: \"MATIC\"\n      }]\n      // [BSC_MAINNET]: [{ value: 'BNB', display: 'BNB' }],\n    },\n\n    includeFees: true,\n    enforceMax: true\n  }\n};\nconst translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\"\n    }\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\"\n    }\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\"\n    }\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\"\n    }\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\"\n    }\n  }\n};\nvar configuration = {\n  supportedVerifierList: Object.values(WALLET_VERIFIERS),\n  paymentProviders: paymentProviders$1,\n  api: \"https://api.tor.us\",\n  translations,\n  prodTorusUrl: \"\",\n  localStorageKeyPrefix: `torus-`\n};\nconst htmlToElement = html => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\nconst handleStream = (handle, eventName, handler) => {\n  const handlerWrapper = chunk => {\n    handler(chunk);\n    handle.removeListener(eventName, handlerWrapper);\n  };\n  handle.on(eventName, handlerWrapper);\n};\nvar log = loglevel.getLogger(\"torus-embed\");\nvar messages = {\n  errors: {\n    disconnected: () => \"Torus: Lost connection to Torus.\",\n    permanentlyDisconnected: () => \"Torus: Disconnected from iframe. Page reload required.\",\n    sendSiteMetadata: () => \"Torus: Failed to send site metadata. This is an internal error, please report this bug.\",\n    unsupportedSync: method => `Torus: The Torus Ethereum provider does not support synchronous methods like ${method} without a callback parameter.`,\n    invalidDuplexStream: () => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: (maxEventListeners, shouldSendMetadata) => `Invalid options. Received: { maxEventListeners: ${maxEventListeners}, shouldSendMetadata: ${shouldSendMetadata} }`,\n    invalidRequestArgs: () => `Expected a single, non-array, object argument.`,\n    invalidRequestMethod: () => `'args.method' must be a non-empty string.`,\n    invalidRequestParams: () => `'args.params' must be an object or array if provided.`,\n    invalidLoggerObject: () => `'args.logger' must be an object if provided.`,\n    invalidLoggerMethod: method => `'args.logger' must include required method '${method}'.`\n  },\n  info: {\n    connected: chainId => `Torus: Connected to chain with ID \"${chainId}\".`\n  },\n  warnings: {\n    // deprecated methods\n    enableDeprecation: 'Torus: \"\"ethereum.enable()\" is deprecated and may be removed in the future. ' + 'Please use \"ethereum.send(\"eth_requestAccounts\")\" instead. For more information, see: https://eips.ethereum.org/EIPS/eip-1102',\n    sendDeprecation: 'Torus: \"ethereum.send(...)\" is deprecated and may be removed in the future.' + ' Please use \"ethereum.sendAsync(...)\" or \"ethereum.request(...)\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n    events: {\n      close: 'Torus: The event \"close\" is deprecated and may be removed in the future. Please use \"disconnect\" instead.' + \"\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193\",\n      data: 'Torus: The event \"data\" is deprecated and will be removed in the future.' + 'Use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193#message',\n      networkChanged: 'Torus: The event \"networkChanged\" is deprecated and may be removed in the future.' + ' Please use \"chainChanged\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n      notification: 'Torus: The event \"notification\" is deprecated and may be removed in the future. ' + 'Please use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193'\n    },\n    publicConfigStore: 'Torus: The property \"publicConfigStore\" is deprecated and WILL be removed in the future.'\n  }\n};\nfunction ownKeys$3(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread$3(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$3(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$3(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nclass ObservableStore extends SafeEventEmitter {\n  constructor(initState) {\n    super();\n    _defineProperty(this, \"_state\", void 0);\n    if (initState === undefined) {\n      this._state = {};\n    } else {\n      this._state = initState;\n    }\n  }\n  getState() {\n    return this._getState();\n  }\n  putState(newState) {\n    this._putState(newState);\n    this.emit(\"update\", newState);\n  }\n  updateState(partialState) {\n    // if non-null object, merge\n    if (partialState && typeof partialState === \"object\") {\n      const state = this.getState();\n      this.putState(_objectSpread$3(_objectSpread$3({}, state), partialState));\n      // if not object, use new value\n    } else {\n      this.putState(partialState);\n    }\n  }\n  subscribe(handler) {\n    this.on(\"update\", handler);\n  }\n  unsubscribe(handler) {\n    this.removeListener(\"update\", handler);\n  }\n  _getState() {\n    return this._state;\n  }\n  _putState(newState) {\n    this._state = newState;\n  }\n}\nclass ObservableStoreStream extends Duplex {\n  constructor(obsStore) {\n    super({\n      // pass values, not serializations\n      objectMode: true\n    });\n    // dont buffer outgoing updates\n    _defineProperty(this, \"handler\", void 0);\n    _defineProperty(this, \"obsStore\", void 0);\n    this.resume();\n    // save handler so we can unsubscribe later\n    this.handler = state => this.push(state);\n    // subscribe to obsStore changes\n    this.obsStore = obsStore;\n    this.obsStore.subscribe(this.handler);\n  }\n  // emit current state on new destination\n  pipe(dest, options) {\n    const result = super.pipe(dest, options);\n    dest.write(this.obsStore.getState());\n    return result;\n  }\n  // write from incoming stream to state\n  _write(chunk, _encoding, callback) {\n    this.obsStore.putState(chunk);\n    callback();\n  }\n  // noop - outgoing stream is asking us if we have data we arent giving it\n  _read(_size) {\n    return undefined;\n  }\n  // unsubscribe from event emitter\n  _destroy(err, callback) {\n    this.obsStore.unsubscribe(this.handler);\n    super._destroy(err, callback);\n  }\n}\nfunction storeAsStream(obsStore) {\n  return new ObservableStoreStream(obsStore);\n}\nfunction ownKeys$2(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread$2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nconst {\n  paymentProviders\n} = configuration;\nconst validatePaymentProvider = (provider, params) => {\n  const errors = {};\n  if (!provider) {\n    return {\n      errors,\n      isValid: true\n    };\n  }\n  if (provider && !paymentProviders[provider]) {\n    errors.provider = \"Invalid Provider\";\n    return {\n      errors,\n      isValid: Object.keys(errors).length === 0\n    };\n  }\n  const selectedProvider = paymentProviders[provider];\n  const selectedParams = params || {};\n  // set default values\n  // if (!selectedParams.selectedCurrency) [selectedParams.selectedCurrency] = selectedProvider.validCurrencies\n  // if (!selectedParams.fiatValue) selectedParams.fiatValue = selectedProvider.minOrderValue\n  // if (!selectedParams.selectedCryptoCurrency) [selectedParams.selectedCryptoCurrency] = selectedProvider.validCryptoCurrencies\n  // validations\n  if (selectedParams.fiatValue) {\n    const requestedOrderAmount = +parseFloat(selectedParams.fiatValue.toString()) || 0;\n    if (requestedOrderAmount < selectedProvider.minOrderValue) errors.fiatValue = \"Requested amount is lower than supported\";\n    if (requestedOrderAmount > selectedProvider.maxOrderValue && selectedProvider.enforceMax) errors.fiatValue = \"Requested amount is higher than supported\";\n  }\n  if (selectedParams.selectedCurrency && !selectedProvider.validCurrencies.includes(selectedParams.selectedCurrency)) {\n    errors.selectedCurrency = \"Unsupported currency\";\n  }\n  if (selectedParams.selectedCryptoCurrency) {\n    const validCryptoCurrenciesByChain = Object.values(selectedProvider.validCryptoCurrenciesByChain).flat().map(currency => currency.value);\n    const finalCryptoCurrency = provider === PAYMENT_PROVIDER.MOONPAY ? selectedParams.selectedCryptoCurrency.toLowerCase() : selectedParams.selectedCryptoCurrency;\n    if (validCryptoCurrenciesByChain && !validCryptoCurrenciesByChain.includes(finalCryptoCurrency)) errors.selectedCryptoCurrency = \"Unsupported cryptoCurrency\";\n  }\n  return {\n    errors,\n    isValid: Object.keys(errors).length === 0\n  };\n};\n// utility functions\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\nfunction createErrorMiddleware() {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = rpcErrors.invalidRequest({\n        message: `The request 'method' must be a non-empty string.`,\n        data: _objectSpread$2(_objectSpread$2({}, req || {}), {}, {\n          cause: \"The request 'method' must be a non-empty string.\"\n        })\n      });\n    }\n    next(done => {\n      const {\n        error\n      } = res;\n      if (!error) {\n        return done();\n      }\n      log.error(`MetaMask - RPC Error: ${error.message}`, error);\n      return done();\n    });\n  };\n}\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\nfunction logStreamDisconnectWarning(remoteLabel, error, emitter) {\n  let warningMsg = `MetaMask: Lost connection to \"${remoteLabel}\".`;\n  if (error !== null && error !== void 0 && error.stack) {\n    warningMsg += `\\n${error.stack}`;\n  }\n  log.warn(warningMsg);\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\nconst getPreopenInstanceId = () => Math.random().toString(36).slice(2);\nconst getTorusUrl = async (buildEnv, integrity) => {\n  let torusUrl;\n  let logLevel;\n  // Do not change this line\n  const version = \"2.2.5\";\n  let versionUsed = integrity.version || version;\n  try {\n    if ((buildEnv === \"binance\" || buildEnv === \"production\") && !integrity.version) {\n      let response;\n      if (!configuration.prodTorusUrl) response = await get(`${configuration.api}/latestversion?name=@toruslabs/torus-embed&version=${version}`, {}, {\n        useAPIKey: true\n      });else response = {\n        data: configuration.prodTorusUrl\n      };\n      versionUsed = response.data;\n      // eslint-disable-next-line require-atomic-updates\n      configuration.prodTorusUrl = response.data;\n    }\n  } catch (error) {\n    log.error(error, \"unable to fetch latest version\");\n  }\n  log.info(\"version used: \", versionUsed);\n  switch (buildEnv) {\n    case \"binance\":\n      torusUrl = `https://binance.tor.us/v${versionUsed}`;\n      logLevel = \"info\";\n      break;\n    case \"testing\":\n      torusUrl = \"https://testing.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"bnb\":\n      torusUrl = \"https://bnb.tor.us\";\n      logLevel = \"error\";\n      break;\n    case \"polygon\":\n      torusUrl = \"https://polygon.tor.us\";\n      logLevel = \"error\";\n      break;\n    case \"lrc\":\n      torusUrl = \"https://lrc.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"beta\":\n      torusUrl = \"https://beta.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"development\":\n      torusUrl = \"http://localhost:4050\";\n      logLevel = \"debug\";\n      break;\n    case \"alpha\":\n      torusUrl = \"https://alpha.tor.us\";\n      logLevel = \"debug\";\n      break;\n    default:\n      torusUrl = `https://app.tor.us/v${versionUsed}`;\n      logLevel = \"error\";\n      break;\n  }\n  return {\n    torusUrl,\n    logLevel\n  };\n};\nconst getUserLanguage = () => {\n  let userLanguage = window.navigator.language || \"en-US\";\n  const userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(configuration.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\nconst EMITTED_NOTIFICATIONS = [\"eth_subscription\" // per eth-json-rpc-filters/subscriptionManager\n];\n\nconst NOOP = () => {\n  // empty function\n};\nconst FEATURES_PROVIDER_CHANGE_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=660,width=375\";\nconst FEATURES_DEFAULT_WALLET_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=740,width=1315\";\nconst FEATURES_CONFIRM_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=700,width=450\";\nfunction getPopupFeatures() {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  const w = 1200;\n  const h = 700;\n  const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  const systemZoom = 1; // No reliable estimate\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nSafeEventEmitter.defaultMaxListeners = 100;\n// resolve response.result, reject errors\nconst getRpcPromiseCallback = function (resolve, reject) {\n  let unwrapResult = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return (error, response) => {\n    if (error || response.error) {\n      return reject(error || response.error);\n    }\n    return !unwrapResult || Array.isArray(response) ? resolve(response) : resolve(response.result);\n  };\n};\nclass TorusInpageProvider extends SafeEventEmitter {\n  constructor(connectionStream) {\n    let {\n      maxEventListeners = 100,\n      shouldSendMetadata = true,\n      jsonRpcStreamName = \"provider\"\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n    /**\n     * The chain ID of the currently connected Ethereum chain.\n     * See [chainId.network]{@link https://chainid.network} for more information.\n     */\n    _defineProperty(this, \"chainId\", void 0);\n    /**\n     * The user's currently selected Ethereum address.\n     * If null, MetaMask is either locked or the user has not permitted any\n     * addresses to be viewed.\n     */\n    _defineProperty(this, \"selectedAddress\", void 0);\n    _defineProperty(this, \"_rpcEngine\", void 0);\n    _defineProperty(this, \"networkVersion\", void 0);\n    _defineProperty(this, \"shouldSendMetadata\", void 0);\n    /**\n     * Indicating that this provider is a MetaMask provider.\n     */\n    _defineProperty(this, \"isTorus\", void 0);\n    _defineProperty(this, \"_publicConfigStore\", void 0);\n    _defineProperty(this, \"tryPreopenHandle\", void 0);\n    _defineProperty(this, \"enable\", void 0);\n    _defineProperty(this, \"_state\", void 0);\n    _defineProperty(this, \"_jsonRpcConnection\", void 0);\n    _defineProperty(this, \"_sentWarnings\", {\n      // methods\n      enable: false,\n      experimentalMethods: false,\n      send: false,\n      publicConfigStore: false,\n      // events\n      events: {\n        close: false,\n        data: false,\n        networkChanged: false,\n        notification: false\n      }\n    });\n    if (!duplex(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n    this.isTorus = true;\n    this.setMaxListeners(maxEventListeners);\n    // private state\n    this._state = _objectSpread$1({}, TorusInpageProvider._defaultState);\n    // public state\n    this.selectedAddress = null;\n    this.networkVersion = null;\n    this.chainId = null;\n    this.shouldSendMetadata = shouldSendMetadata;\n    // bind functions (to prevent e.g. web3@1.x from making unbound calls)\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this);\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n    this._sendSync = this._sendSync.bind(this);\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this._warnOfDeprecation = this._warnOfDeprecation.bind(this);\n    this._initializeState = this._initializeState.bind(this);\n    this.request = this.request.bind(this);\n    this.send = this.send.bind(this);\n    this.sendAsync = this.sendAsync.bind(this);\n    // this.enable = this.enable.bind(this);\n    // setup connectionStream multiplexing\n    const mux = new ObjectMultiplex();\n    pump(connectionStream, mux, connectionStream, this._handleStreamDisconnect.bind(this, \"MetaMask\"));\n    // subscribe to metamask public config (one-way)\n    this._publicConfigStore = new ObservableStore({\n      storageKey: \"Metamask-Config\"\n    });\n    // handle isUnlocked changes, and chainChanged and networkChanged events\n    // this._publicConfigStore.subscribe((stringifiedState) => {\n    //   // This is because we are using store as string\n    //   const state = JSON.parse(stringifiedState as unknown as string);\n    //   if (\"isUnlocked\" in state && state.isUnlocked !== this._state.isUnlocked) {\n    //     this._state.isUnlocked = state.isUnlocked;\n    //     if (!this._state.isUnlocked) {\n    //       // accounts are never exposed when the extension is locked\n    //       this._handleAccountsChanged([]);\n    //     } else {\n    //       // this will get the exposed accounts, if any\n    //       try {\n    //         this._rpcRequest(\n    //           { method: \"eth_accounts\", params: [] },\n    //           NOOP,\n    //           true // indicating that eth_accounts _should_ update accounts\n    //         );\n    //       } catch (_) {\n    //         // Swallow error\n    //       }\n    //     }\n    //   }\n    //   if (\"selectedAddress\" in state && this.selectedAddress !== state.selectedAddress) {\n    //     try {\n    //       this._rpcRequest(\n    //         { method: \"eth_accounts\", params: [] },\n    //         NOOP,\n    //         true // indicating that eth_accounts _should_ update accounts\n    //       );\n    //     } catch (_) {\n    //       // Swallow error\n    //     }\n    //   }\n    //   // Emit chainChanged event on chain change\n    //   if (\"chainId\" in state && state.chainId !== this.chainId) {\n    //     this.chainId = state.chainId || null;\n    //     this.emit(\"chainChanged\", this.chainId);\n    //     // indicate that we've connected, for EIP-1193 compliance\n    //     // we do this here so that iframe can initialize\n    //     if (!this._state.hasEmittedConnection) {\n    //       this._handleConnect(this.chainId);\n    //       this._state.hasEmittedConnection = true;\n    //     }\n    //   }\n    //   // Emit networkChanged event on network change\n    //   if (\"networkVersion\" in state && state.networkVersion !== this.networkVersion) {\n    //     this.networkVersion = state.networkVersion || null;\n    //     this.emit(\"networkChanged\", this.networkVersion);\n    //   }\n    // });\n    pump(mux.createStream(\"publicConfig\"), storeAsStream(this._publicConfigStore),\n    // RPC requests should still work if only this stream fails\n    logStreamDisconnectWarning.bind(this, \"MetaMask PublicConfigStore\"));\n    // ignore phishing warning message (handled elsewhere)\n    mux.ignoreStream(\"phishing\");\n    // setup own event listeners\n    // EIP-1193 connect\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n    // connect to async provider\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(jsonRpcConnection.stream, mux.createStream(jsonRpcStreamName), jsonRpcConnection.stream, this._handleStreamDisconnect.bind(this, \"MetaMask RpcProvider\"));\n    // handle RPC requests via dapp-side rpc engine\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this._rpcEngine = rpcEngine;\n    // json rpc notification listener\n    jsonRpcConnection.events.on(\"notification\", payload => {\n      const {\n        method,\n        params\n      } = payload;\n      if (method === \"wallet_accountsChanged\") {\n        this._handleAccountsChanged(params);\n      } else if (method === \"wallet_unlockStateChanged\") {\n        this._handleUnlockStateChanged(params);\n      } else if (method === \"wallet_chainChanged\") {\n        this._handleChainChanged(params);\n      } else if (EMITTED_NOTIFICATIONS.includes(payload.method)) {\n        // EIP 1193 subscriptions, per eth-json-rpc-filters/subscriptionManager\n        this.emit(\"data\", payload); // deprecated\n        this.emit(\"notification\", params.result);\n        this.emit(\"message\", {\n          type: method,\n          data: params\n        });\n      }\n      // Backward compatibility for older non EIP 1193 subscriptions\n      // this.emit('data', null, payload)\n    });\n  }\n\n  get publicConfigStore() {\n    if (!this._sentWarnings.publicConfigStore) {\n      log.warn(messages.warnings.publicConfigStore);\n      this._sentWarnings.publicConfigStore = true;\n    }\n    return this._publicConfigStore;\n  }\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n  isConnected() {\n    return this._state.isConnected;\n  }\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   *\n   * @param args - The RPC request arguments.\n   * @returns A Promise that resolves with the result of the RPC method,\n   * or rejects if an error is encountered.\n   */\n  async request(args) {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: _objectSpread$1(_objectSpread$1({}, args || {}), {}, {\n          cause: messages.errors.invalidRequestArgs()\n        })\n      });\n    }\n    const {\n      method,\n      params\n    } = args;\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: _objectSpread$1(_objectSpread$1({}, args || {}), {}, {\n          cause: messages.errors.invalidRequestArgs()\n        })\n      });\n    }\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: _objectSpread$1(_objectSpread$1({}, args || {}), {}, {\n          cause: messages.errors.invalidRequestArgs()\n        })\n      });\n    }\n    return new Promise((resolve, reject) => {\n      this._rpcRequest({\n        method,\n        params\n      }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @param payload - The RPC request object.\n   * @param cb - The callback function.\n   */\n  sendAsync(payload, callback) {\n    this._rpcRequest(payload, callback);\n  }\n  /**\n   * We override the following event methods so that we can warn consumers\n   * about deprecated events:\n   *   addListener, on, once, prependListener, prependOnceListener\n   */\n  addListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n    return super.addListener(eventName, listener);\n  }\n  on(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n    return super.on(eventName, listener);\n  }\n  once(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n    return super.once(eventName, listener);\n  }\n  prependListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n    return super.prependListener(eventName, listener);\n  }\n  prependOnceListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n    return super.prependOnceListener(eventName, listener);\n  }\n  // Private Methods\n  //= ===================\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n  async _initializeState() {\n    try {\n      const {\n        accounts,\n        chainId,\n        isUnlocked,\n        networkVersion\n      } = await this.request({\n        method: \"wallet_getProviderState\"\n      });\n      // indicate that we've connected, for EIP-1193 compliance\n      this.emit(\"connect\", {\n        chainId\n      });\n      this._handleChainChanged({\n        chainId,\n        networkVersion\n      });\n      this._handleUnlockStateChanged({\n        accounts,\n        isUnlocked\n      });\n      this._handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"MetaMask: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound.\n   *\n   * @param payload - The RPC request object.\n   * @param callback - The consumer's callback.\n   * @param isInternal - false - Whether the request is internal.\n   */\n  _rpcRequest(payload, callback) {\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n      if (_payload.method === \"eth_accounts\" || _payload.method === \"eth_requestAccounts\") {\n        // handle accounts changing\n        cb = (err, res) => {\n          this._handleAccountsChanged(res.result || [], _payload.method === \"eth_accounts\", isInternal);\n          callback(err, res);\n        };\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this._rpcEngine.handle(payload, cb);\n        return;\n      }\n    }\n    this.tryPreopenHandle(_payload, cb);\n  }\n  send(methodOrPayload, callbackOrArgs) {\n    if (!this._sentWarnings.send) {\n      log.warn(messages.warnings.sendDeprecation);\n      this._sentWarnings.send = true;\n    }\n    if (typeof methodOrPayload === \"string\" && (!callbackOrArgs || Array.isArray(callbackOrArgs))) {\n      return new Promise((resolve, reject) => {\n        try {\n          this._rpcRequest({\n            method: methodOrPayload,\n            params: callbackOrArgs\n          }, getRpcPromiseCallback(resolve, reject, false));\n        } catch (error) {\n          reject(error);\n        }\n      });\n    }\n    if (methodOrPayload && typeof methodOrPayload === \"object\" && typeof callbackOrArgs === \"function\") {\n      return this._rpcRequest(methodOrPayload, callbackOrArgs);\n    }\n    return this._sendSync(methodOrPayload);\n  }\n  /**\n   * DEPRECATED.\n   * Internal backwards compatibility method, used in send.\n   */\n  _sendSync(payload) {\n    let result;\n    switch (payload.method) {\n      case \"eth_accounts\":\n        result = this.selectedAddress ? [this.selectedAddress] : [];\n        break;\n      case \"eth_coinbase\":\n        result = this.selectedAddress || null;\n        break;\n      case \"eth_uninstallFilter\":\n        this._rpcRequest(payload, NOOP);\n        result = true;\n        break;\n      case \"net_version\":\n        result = this.networkVersion || null;\n        break;\n      default:\n        throw new Error(messages.errors.unsupportedSync(payload.method));\n    }\n    return {\n      id: payload.id,\n      jsonrpc: payload.jsonrpc,\n      result\n    };\n  }\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits MetaMaskInpageProvider#connect\n   */\n  _handleConnect(chainId) {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", {\n        chainId\n      });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits MetaMaskInpageProvider#disconnect\n   */\n  _handleDisconnect(isRecoverable, errorMessage) {\n    if (this._state.isConnected || !this._state.isPermanentlyDisconnected && !isRecoverable) {\n      this._state.isConnected = false;\n      let error;\n      if (isRecoverable) {\n        error = new EthereumProviderError(1013,\n        // Try again later\n        errorMessage || messages.errors.disconnected());\n        log.debug(error);\n      } else {\n        error = new EthereumProviderError(1011,\n        // Internal error\n        errorMessage || messages.errors.permanentlyDisconnected());\n        log.error(error);\n        this.chainId = null;\n        this._state.accounts = null;\n        this.selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n      this.emit(\"disconnect\", error);\n    }\n  }\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits MetamaskInpageProvider#disconnect\n   */\n  _handleStreamDisconnect(streamName, error) {\n    logStreamDisconnectWarning(streamName, error, this);\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n  /**\n   * Called when accounts may have changed.\n   */\n  _handleAccountsChanged(accounts) {\n    let isEthAccounts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    // defensive programming\n    let finalAccounts = accounts;\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"MetaMask: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"MetaMask: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    }\n    // emit accountsChanged if anything about the accounts array has changed\n    if (!dequal(this._state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before eth_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n        log.error('MetaMask: \"eth_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n      this._state.accounts = finalAccounts;\n      this.emit(\"accountsChanged\", finalAccounts);\n    }\n    // handle selectedAddress\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = finalAccounts[0] || null;\n    }\n  }\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits MetamaskInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n  _handleChainChanged() {\n    let {\n      chainId,\n      networkVersion\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!chainId || !networkVersion) {\n      log.error(\"MetaMask: Received invalid network parameters. Please report this bug.\", {\n        chainId,\n        networkVersion\n      });\n      return;\n    }\n    if (networkVersion === \"loading\") {\n      this._handleDisconnect(true);\n    } else {\n      this._handleConnect(chainId);\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n        if (this._state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n  _handleUnlockStateChanged() {\n    let {\n      accounts,\n      isUnlocked\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"MetaMask: Received invalid isUnlocked parameter. Please report this bug.\", {\n        isUnlocked\n      });\n      return;\n    }\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n      this._handleAccountsChanged(accounts || []);\n    }\n  }\n  /**\n   * Warns of deprecation for the given event, if applicable.\n   */\n  _warnOfDeprecation(eventName) {\n    if (this._sentWarnings.events[eventName] === false) {\n      log.warn(messages.warnings.events[eventName]);\n      this._sentWarnings.events[eventName] = true;\n    }\n  }\n}\n_defineProperty(TorusInpageProvider, \"_defaultState\", {\n  accounts: null,\n  isConnected: false,\n  isUnlocked: false,\n  initialized: false,\n  isPermanentlyDisconnected: false,\n  hasEmittedConnection: false\n});\nclass PopupHandler extends EventEmitter {\n  constructor(_ref) {\n    let {\n      url,\n      target,\n      features\n    } = _ref;\n    super();\n    _defineProperty(this, \"url\", void 0);\n    _defineProperty(this, \"target\", void 0);\n    _defineProperty(this, \"features\", void 0);\n    _defineProperty(this, \"window\", void 0);\n    _defineProperty(this, \"windowTimer\", void 0);\n    _defineProperty(this, \"iClosedWindow\", void 0);\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures();\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n    this._setupTimer();\n  }\n  _setupTimer() {\n    this.windowTimer = Number(setInterval(() => {\n      if (this.window && this.window.closed) {\n        clearInterval(this.windowTimer);\n        if (!this.iClosedWindow) {\n          this.emit(\"close\");\n        }\n        this.iClosedWindow = false;\n        this.window = undefined;\n      }\n      if (this.window === undefined) clearInterval(this.windowTimer);\n    }, 500));\n  }\n  open() {\n    var _this$window;\n    this.window = window.open(this.url.href, this.target, this.features);\n    if ((_this$window = this.window) !== null && _this$window !== void 0 && _this$window.focus) this.window.focus();\n  }\n  close() {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n  redirect(locationReplaceOnRedirect) {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n}\n\n/**\n * Returns whether the given image URL exists\n * @param url - the url of the image\n * @returns - whether the image exists\n */\nfunction imgExists(url) {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n      img.onload = () => resolve(true);\n      img.onerror = () => resolve(false);\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n/**\n * Extracts a name for the site from the DOM\n */\nconst getSiteName = window => {\n  const {\n    document\n  } = window;\n  const siteName = document.querySelector('head > meta[property=\"og:site_name\"]');\n  if (siteName) {\n    return siteName.content;\n  }\n  const metaTitle = document.querySelector('head > meta[name=\"title\"]');\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n  return window.location.hostname;\n};\n/**\n * Extracts an icon for the site from the DOM\n */\nasync function getSiteIcon(window) {\n  const {\n    document\n  } = window;\n  // Use the site's favicon if it exists\n  let icon = document.querySelector('head > link[rel=\"shortcut icon\"]');\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  }\n  // Search through available icons in no particular order\n  icon = Array.from(document.querySelectorAll('head > link[rel=\"icon\"]')).find(_icon => Boolean(_icon.href));\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  }\n  return null;\n}\n/**\n * Gets site metadata and returns it\n *\n */\nconst getSiteMetadata = async () => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window)\n});\n/**\n * Sends site metadata over an RPC request.\n */\nasync function sendSiteMetadata(engine) {\n  try {\n    const domainMetadata = await getSiteMetadata();\n    // call engine.handle directly to avoid normal RPC request handling\n    engine.handle({\n      jsonrpc: \"2.0\",\n      id: getPreopenInstanceId(),\n      method: \"wallet_sendDomainMetadata\",\n      params: domainMetadata\n    }, NOOP);\n  } catch (error) {\n    log.error({\n      message: messages.errors.sendSiteMetadata(),\n      originalError: error\n    });\n  }\n}\nconst _excluded = [\"host\", \"chainId\", \"networkName\"];\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nconst UNSAFE_METHODS = [\"eth_sendTransaction\", \"eth_signTypedData\", \"eth_signTypedData_v3\", \"eth_signTypedData_v4\", \"personal_sign\", \"eth_getEncryptionPublicKey\", \"eth_decrypt\", \"wallet_addEthereumChain\", \"wallet_switchEthereumChain\"];\n// preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const torusIframeHtml = document.createElement(\"link\");\n    const {\n      torusUrl\n    } = await getTorusUrl(\"production\", {\n      version: \"\"\n    });\n    torusIframeHtml.href = `${torusUrl}/popup`;\n    torusIframeHtml.crossOrigin = \"anonymous\";\n    torusIframeHtml.type = \"text/html\";\n    torusIframeHtml.rel = \"prefetch\";\n    if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n      if (torusIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(torusIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\nclass Torus {\n  constructor() {\n    let {\n      buttonPosition = BUTTON_POSITION.BOTTOM_LEFT,\n      buttonSize = 56,\n      modalZIndex = 99999,\n      apiKey = \"torus-default\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _defineProperty(this, \"buttonPosition\", BUTTON_POSITION.BOTTOM_LEFT);\n    _defineProperty(this, \"buttonSize\", void 0);\n    _defineProperty(this, \"torusUrl\", void 0);\n    _defineProperty(this, \"torusIframe\", void 0);\n    _defineProperty(this, \"styleLink\", void 0);\n    _defineProperty(this, \"isLoggedIn\", void 0);\n    _defineProperty(this, \"isInitialized\", void 0);\n    _defineProperty(this, \"torusWidgetVisibility\", void 0);\n    _defineProperty(this, \"torusAlert\", void 0);\n    _defineProperty(this, \"apiKey\", void 0);\n    _defineProperty(this, \"modalZIndex\", void 0);\n    _defineProperty(this, \"alertZIndex\", void 0);\n    _defineProperty(this, \"torusAlertContainer\", void 0);\n    _defineProperty(this, \"isIframeFullScreen\", void 0);\n    _defineProperty(this, \"whiteLabel\", void 0);\n    _defineProperty(this, \"requestedVerifier\", void 0);\n    _defineProperty(this, \"currentVerifier\", void 0);\n    _defineProperty(this, \"embedTranslations\", void 0);\n    _defineProperty(this, \"ethereum\", void 0);\n    _defineProperty(this, \"provider\", void 0);\n    _defineProperty(this, \"communicationMux\", void 0);\n    _defineProperty(this, \"isLoginCallback\", void 0);\n    _defineProperty(this, \"paymentProviders\", configuration.paymentProviders);\n    _defineProperty(this, \"loginHint\", \"\");\n    _defineProperty(this, \"useWalletConnect\", void 0);\n    _defineProperty(this, \"isCustomLogin\", false);\n    this.buttonPosition = buttonPosition;\n    this.buttonSize = buttonSize;\n    this.torusUrl = \"\";\n    this.isLoggedIn = false; // ethereum.enable working\n    this.isInitialized = false; // init done\n    this.torusWidgetVisibility = true;\n    this.requestedVerifier = \"\";\n    this.currentVerifier = \"\";\n    this.apiKey = apiKey;\n    setAPIKey(apiKey);\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.isIframeFullScreen = false;\n  }\n  async init() {\n    let {\n      buildEnv = TORUS_BUILD_ENV.PRODUCTION,\n      enableLogging = false,\n      network = {\n        host: \"mainnet\",\n        chainId: null,\n        networkName: \"\",\n        blockExplorer: \"\",\n        ticker: \"\",\n        tickerName: \"\"\n      },\n      loginConfig = {},\n      showTorusButton = true,\n      integrity = {\n        version: \"\"\n      },\n      whiteLabel,\n      useWalletConnect = false,\n      mfaLevel = \"default\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n    const {\n      torusUrl,\n      logLevel\n    } = await getTorusUrl(buildEnv, integrity);\n    log.info(torusUrl, \"url loaded\");\n    this.torusUrl = torusUrl;\n    this.whiteLabel = whiteLabel;\n    this.useWalletConnect = useWalletConnect;\n    this.isCustomLogin = !!(loginConfig && Object.keys(loginConfig).length > 0) || !!(whiteLabel && Object.keys(whiteLabel).length > 0);\n    log.setDefaultLevel(logLevel);\n    if (enableLogging) log.enableAll();else log.disableAll();\n    this.torusWidgetVisibility = showTorusButton;\n    const torusIframeUrl = new URL(torusUrl);\n    if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"popup\";else torusIframeUrl.pathname += \"/popup\";\n    torusIframeUrl.hash = `#isCustomLogin=${this.isCustomLogin}`;\n    // Iframe code\n    this.torusIframe = htmlToElement(`<iframe\n        id=\"torusIframe\"\n        allow=${useWalletConnect ? \"camera\" : \"\"}\n        class=\"torusIframe\"\n        src=\"${torusIframeUrl.href}\"\n        style=\"display: none; position: fixed; top: 0; right: 0; width: 100%; color-scheme: none;\n        height: 100%; border: none; border-radius: 0; z-index: ${this.modalZIndex}\"\n      ></iframe>`);\n    this.torusAlertContainer = htmlToElement('<div id=\"torusAlertContainer\"></div>');\n    this.torusAlertContainer.style.display = \"none\";\n    this.torusAlertContainer.style.setProperty(\"z-index\", this.alertZIndex.toString());\n    const link = window.document.createElement(\"link\");\n    link.setAttribute(\"rel\", \"stylesheet\");\n    link.setAttribute(\"type\", \"text/css\");\n    link.setAttribute(\"href\", `${torusUrl}/css/widget.css`);\n    this.styleLink = link;\n    const {\n      defaultLanguage = getUserLanguage(),\n      customTranslations = {}\n    } = this.whiteLabel || {};\n    const mergedTranslations = deepmerge(configuration.translations, customTranslations);\n    const languageTranslations = mergedTranslations[defaultLanguage] || configuration.translations[getUserLanguage()];\n    this.embedTranslations = languageTranslations.embed;\n    return new Promise((resolve, reject) => {\n      this.torusIframe.onload = async () => {\n        // only do this if iframe is not full screen\n        this._setupWeb3();\n        const initStream = this.communicationMux.getStream(\"init_stream\");\n        initStream.on(\"data\", chunk => {\n          const {\n            name,\n            data,\n            error\n          } = chunk;\n          if (name === \"init_complete\" && data.success) {\n            // resolve promise\n            this.isInitialized = true;\n            this._displayIframe(this.isIframeFullScreen);\n            resolve(undefined);\n          } else if (error) {\n            reject(new Error(error));\n          }\n        });\n        initStream.write({\n          name: \"init_stream\",\n          data: {\n            loginConfig,\n            whiteLabel: this.whiteLabel,\n            buttonPosition: this.buttonPosition,\n            buttonSize: this.buttonSize,\n            torusWidgetVisibility: this.torusWidgetVisibility,\n            apiKey: this.apiKey,\n            network,\n            mfaLevel\n          }\n        });\n      };\n      window.document.head.appendChild(this.styleLink);\n      window.document.body.appendChild(this.torusIframe);\n      window.document.body.appendChild(this.torusAlertContainer);\n    });\n  }\n  login() {\n    let {\n      verifier = \"\",\n      login_hint: loginHint = \"\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    this.requestedVerifier = verifier;\n    this.loginHint = loginHint;\n    return this.ethereum.enable();\n  }\n  logout() {\n    return new Promise((resolve, reject) => {\n      if (!this.isLoggedIn) {\n        reject(new Error(\"User has not logged in yet\"));\n        return;\n      }\n      const logOutStream = this.communicationMux.getStream(\"logout\");\n      logOutStream.write({\n        name: \"logOut\"\n      });\n      const statusStream = this.communicationMux.getStream(\"status\");\n      const statusStreamHandler = status => {\n        if (!status.loggedIn) {\n          this.isLoggedIn = false;\n          this.currentVerifier = \"\";\n          this.requestedVerifier = \"\";\n          resolve();\n        } else reject(new Error(\"Some Error Occured\"));\n      };\n      handleStream(statusStream, \"data\", statusStreamHandler);\n    });\n  }\n  async cleanUp() {\n    if (this.isLoggedIn) {\n      await this.logout();\n    }\n    this.clearInit();\n  }\n  clearInit() {\n    function isElement(element) {\n      return element instanceof Element || element instanceof HTMLDocument;\n    }\n    if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n      this.styleLink.remove();\n      this.styleLink = undefined;\n    }\n    if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n      this.torusIframe.remove();\n      this.torusIframe = undefined;\n    }\n    if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n      this.torusAlert = undefined;\n      this.torusAlertContainer.remove();\n      this.torusAlertContainer = undefined;\n    }\n    this.isInitialized = false;\n  }\n  hideTorusButton() {\n    this.torusWidgetVisibility = false;\n    this._sendWidgetVisibilityStatus(false);\n    this._displayIframe();\n  }\n  showTorusButton() {\n    this.torusWidgetVisibility = true;\n    this._sendWidgetVisibilityStatus(true);\n    this._displayIframe();\n  }\n  setProvider(_ref) {\n    let {\n        host = \"mainnet\",\n        chainId = null,\n        networkName = \"\"\n      } = _ref,\n      rest = _objectWithoutProperties(_ref, _excluded);\n    return new Promise((resolve, reject) => {\n      const providerChangeStream = this.communicationMux.getStream(\"provider_change\");\n      const handler = chunk => {\n        const {\n          err,\n          success\n        } = chunk.data;\n        log.info(chunk);\n        if (err) {\n          reject(err);\n        } else if (success) {\n          resolve();\n        } else reject(new Error(\"some error occurred\"));\n      };\n      handleStream(providerChangeStream, \"data\", handler);\n      const preopenInstanceId = getPreopenInstanceId();\n      this._handleWindow(preopenInstanceId, {\n        target: \"_blank\",\n        features: FEATURES_PROVIDER_CHANGE_WINDOW\n      });\n      providerChangeStream.write({\n        name: \"show_provider_change\",\n        data: {\n          network: _objectSpread({\n            host,\n            chainId,\n            networkName\n          }, rest),\n          preopenInstanceId,\n          override: false\n        }\n      });\n    });\n  }\n  showWallet(path) {\n    let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const showWalletStream = this.communicationMux.getStream(\"show_wallet\");\n    const finalPath = path ? `/${path}` : \"\";\n    showWalletStream.write({\n      name: \"show_wallet\",\n      data: {\n        path: finalPath\n      }\n    });\n    const showWalletHandler = chunk => {\n      if (chunk.name === \"show_wallet_instance\") {\n        // Let the error propogate up (hence, no try catch)\n        const {\n          instanceId\n        } = chunk.data;\n        const finalUrl = new URL(`${this.torusUrl}/wallet${finalPath}`);\n        // Using URL constructor to prevent js injection and allow parameter validation.!\n        finalUrl.searchParams.append(\"integrity\", \"true\");\n        finalUrl.searchParams.append(\"instanceId\", instanceId);\n        Object.keys(params).forEach(x => {\n          finalUrl.searchParams.append(x, params[x]);\n        });\n        finalUrl.hash = `#isCustomLogin=${this.isCustomLogin}`;\n        const walletWindow = new PopupHandler({\n          url: finalUrl,\n          features: FEATURES_DEFAULT_WALLET_WINDOW\n        });\n        walletWindow.open();\n      }\n    };\n    handleStream(showWalletStream, \"data\", showWalletHandler);\n  }\n  async getPublicAddress(_ref2) {\n    let {\n      verifier,\n      verifierId,\n      isExtended = false\n    } = _ref2;\n    if (!configuration.supportedVerifierList.includes(verifier) || !WALLET_OPENLOGIN_VERIFIER_MAP[verifier]) throw new Error(\"Unsupported verifier\");\n    const walletVerifier = verifier;\n    const openloginVerifier = WALLET_OPENLOGIN_VERIFIER_MAP[verifier];\n    const url = new URL(`https://api.tor.us/lookup/torus`);\n    url.searchParams.append(\"verifier\", openloginVerifier);\n    url.searchParams.append(\"verifierId\", verifierId);\n    url.searchParams.append(\"walletVerifier\", walletVerifier);\n    url.searchParams.append(\"network\", \"mainnet\");\n    url.searchParams.append(\"isExtended\", isExtended.toString());\n    return get(url.href, {\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\"\n      }\n    }, {\n      useAPIKey: true\n    });\n  }\n  getUserInfo(message) {\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const userInfoAccessStream = this.communicationMux.getStream(\"user_info_access\");\n        userInfoAccessStream.write({\n          name: \"user_info_access_request\"\n        });\n        const userInfoAccessHandler = chunk => {\n          const {\n            name,\n            data: {\n              approved,\n              payload,\n              rejected,\n              newRequest\n            }\n          } = chunk;\n          if (name === \"user_info_access_response\") {\n            if (approved) {\n              resolve(payload);\n            } else if (rejected) {\n              reject(new Error(\"User rejected the request\"));\n            } else if (newRequest) {\n              const userInfoStream = this.communicationMux.getStream(\"user_info\");\n              const userInfoHandler = handlerChunk => {\n                if (handlerChunk.name === \"user_info_response\") {\n                  if (handlerChunk.data.approved) {\n                    resolve(handlerChunk.data.payload);\n                  } else {\n                    reject(new Error(\"User rejected the request\"));\n                  }\n                }\n              };\n              handleStream(userInfoStream, \"data\", userInfoHandler);\n              const preopenInstanceId = getPreopenInstanceId();\n              this._handleWindow(preopenInstanceId, {\n                target: \"_blank\",\n                features: FEATURES_PROVIDER_CHANGE_WINDOW\n              });\n              userInfoStream.write({\n                name: \"user_info_request\",\n                data: {\n                  message,\n                  preopenInstanceId\n                }\n              });\n            }\n          }\n        };\n        handleStream(userInfoAccessStream, \"data\", userInfoAccessHandler);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n  initiateTopup(provider, params) {\n    return new Promise((resolve, reject) => {\n      if (this.isInitialized) {\n        const {\n          errors,\n          isValid\n        } = validatePaymentProvider(provider, params);\n        if (!isValid) {\n          reject(new Error(JSON.stringify(errors)));\n          return;\n        }\n        const topupStream = this.communicationMux.getStream(\"topup\");\n        const topupHandler = chunk => {\n          if (chunk.name === \"topup_response\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n          }\n        };\n        handleStream(topupStream, \"data\", topupHandler);\n        const preopenInstanceId = getPreopenInstanceId();\n        this._handleWindow(preopenInstanceId);\n        topupStream.write({\n          name: \"topup_request\",\n          data: {\n            provider,\n            params,\n            preopenInstanceId\n          }\n        });\n      } else reject(new Error(\"Torus is not initialized yet\"));\n    });\n  }\n  async loginWithPrivateKey(loginParams) {\n    const {\n      privateKey,\n      userInfo\n    } = loginParams;\n    return new Promise((resolve, reject) => {\n      if (this.isInitialized) {\n        if (Buffer.from(privateKey, \"hex\").length !== 32) {\n          reject(new Error(\"Invalid private key, Please provide a 32 byte valid secp25k1 private key\"));\n          return;\n        }\n        const loginPrivKeyStream = this.communicationMux.getStream(\"login_with_private_key\");\n        const loginHandler = chunk => {\n          if (chunk.name === \"login_with_private_key_response\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n          }\n        };\n        handleStream(loginPrivKeyStream, \"data\", loginHandler);\n        loginPrivKeyStream.write({\n          name: \"login_with_private_key_request\",\n          data: {\n            privateKey,\n            userInfo\n          }\n        });\n      } else reject(new Error(\"Torus is not initialized yet\"));\n    });\n  }\n  async showWalletConnectScanner() {\n    if (!this.useWalletConnect) throw new Error(\"Set `useWalletConnect` as true in init function options to use wallet connect scanner\");\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const walletConnectStream = this.communicationMux.getStream(\"wallet_connect_stream\");\n        const walletConnectHandler = chunk => {\n          if (chunk.name === \"wallet_connect_stream_res\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n            this._displayIframe();\n          }\n        };\n        handleStream(walletConnectStream, \"data\", walletConnectHandler);\n        walletConnectStream.write({\n          name: \"wallet_connect_stream_req\"\n        });\n        this._displayIframe(true);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n  _handleWindow(preopenInstanceId) {\n    let {\n      url,\n      target,\n      features\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (preopenInstanceId) {\n      const windowStream = this.communicationMux.getStream(\"window\");\n      const finalUrl = new URL(url || `${this.torusUrl}/redirect?preopenInstanceId=${preopenInstanceId}`);\n      if (finalUrl.hash) finalUrl.hash += `&isCustomLogin=${this.isCustomLogin}`;else finalUrl.hash = `#isCustomLogin=${this.isCustomLogin}`;\n      const handledWindow = new PopupHandler({\n        url: finalUrl,\n        target,\n        features\n      });\n      handledWindow.open();\n      if (!handledWindow.window) {\n        this._createPopupBlockAlert(preopenInstanceId, finalUrl.href);\n        return;\n      }\n      windowStream.write({\n        name: \"opened_window\",\n        data: {\n          preopenInstanceId\n        }\n      });\n      const closeHandler = _ref3 => {\n        let {\n          preopenInstanceId: receivedId,\n          close\n        } = _ref3;\n        if (receivedId === preopenInstanceId && close) {\n          handledWindow.close();\n          windowStream.removeListener(\"data\", closeHandler);\n        }\n      };\n      windowStream.on(\"data\", closeHandler);\n      handledWindow.once(\"close\", () => {\n        windowStream.write({\n          data: {\n            preopenInstanceId,\n            closed: true\n          }\n        });\n        windowStream.removeListener(\"data\", closeHandler);\n      });\n    }\n  }\n  _setEmbedWhiteLabel(element) {\n    // Set whitelabel\n    const {\n      theme\n    } = this.whiteLabel || {};\n    if (theme) {\n      const {\n        isDark = false,\n        colors = {}\n      } = theme;\n      if (isDark) element.classList.add(\"torus-dark\");\n      if (colors.torusBrand1) element.style.setProperty(\"--torus-brand-1\", colors.torusBrand1);\n      if (colors.torusGray2) element.style.setProperty(\"--torus-gray-2\", colors.torusGray2);\n    }\n  }\n  _getLogoUrl() {\n    var _this$whiteLabel, _this$whiteLabel$them;\n    let logoUrl = `${this.torusUrl}/images/torus_icon-blue.svg`;\n    if ((_this$whiteLabel = this.whiteLabel) !== null && _this$whiteLabel !== void 0 && (_this$whiteLabel$them = _this$whiteLabel.theme) !== null && _this$whiteLabel$them !== void 0 && _this$whiteLabel$them.isDark) {\n      var _this$whiteLabel2;\n      logoUrl = ((_this$whiteLabel2 = this.whiteLabel) === null || _this$whiteLabel2 === void 0 ? void 0 : _this$whiteLabel2.logoLight) || logoUrl;\n    } else {\n      var _this$whiteLabel3;\n      logoUrl = ((_this$whiteLabel3 = this.whiteLabel) === null || _this$whiteLabel3 === void 0 ? void 0 : _this$whiteLabel3.logoDark) || logoUrl;\n    }\n    return logoUrl;\n  }\n  _sendWidgetVisibilityStatus(status) {\n    const torusWidgetVisibilityStream = this.communicationMux.getStream(\"torus-widget-visibility\");\n    torusWidgetVisibilityStream.write({\n      data: status\n    });\n  }\n  _displayIframe() {\n    let isFull = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    const style = {};\n    const size = this.buttonSize + 14; // 15px padding\n    // set phase\n    if (!isFull) {\n      style.display = this.torusWidgetVisibility ? \"block\" : \"none\";\n      style.height = `${size}px`;\n      style.width = `${size}px`;\n      switch (this.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n    Object.assign(this.torusIframe.style, style);\n    this.isIframeFullScreen = isFull;\n  }\n  _setupWeb3() {\n    log.info(\"setupWeb3 running\");\n    // setup background connection\n    const metamaskStream = new BasePostMessageStream({\n      name: \"embed_metamask\",\n      target: \"iframe_metamask\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin\n    });\n    // Due to compatibility reasons, we should not set up multiplexing on window.metamaskstream\n    // because the MetamaskInpageProvider also attempts to do so.\n    // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_comm\",\n      target: \"iframe_comm\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin\n    });\n    // Backward compatibility with Gotchi :)\n    // window.metamaskStream = this.communicationStream\n    // compose the inpage provider\n    const inpageProvider = new TorusInpageProvider(metamaskStream);\n    // detect eth_requestAccounts and pipe to enable for now\n    const detectAccountRequestPrototypeModifier = m => {\n      const originalMethod = inpageProvider[m];\n      inpageProvider[m] = function providerFunc(method) {\n        if (method && method === \"eth_requestAccounts\") {\n          return inpageProvider.enable();\n        }\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        return originalMethod.apply(this, [method, ...args]);\n      };\n    };\n    detectAccountRequestPrototypeModifier(\"send\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n    inpageProvider.enable = () => {\n      return new Promise((resolve, reject) => {\n        // If user is already logged in, we assume they have given access to the website\n        inpageProvider.sendAsync({\n          jsonrpc: \"2.0\",\n          id: getPreopenInstanceId(),\n          method: \"eth_requestAccounts\",\n          params: []\n        }, (err, response) => {\n          const {\n            result: res\n          } = response || {};\n          if (err) {\n            setTimeout(() => {\n              reject(err);\n            }, 50);\n          } else if (Array.isArray(res) && res.length > 0) {\n            // If user is already rehydrated, resolve this\n            // else wait for something to be written to status stream\n            const handleLoginCb = () => {\n              if (this.requestedVerifier !== \"\" && this.currentVerifier !== this.requestedVerifier) {\n                const {\n                  requestedVerifier\n                } = this;\n                // eslint-disable-next-line promise/no-promise-in-callback\n                this.logout()\n                // eslint-disable-next-line promise/always-return\n                .then(_ => {\n                  this.requestedVerifier = requestedVerifier;\n                  this._showLoginPopup(true, resolve, reject);\n                }).catch(error => reject(error));\n              } else {\n                resolve(res);\n              }\n            };\n            if (this.isLoggedIn) {\n              handleLoginCb();\n            } else {\n              this.isLoginCallback = handleLoginCb;\n            }\n          } else {\n            // set up listener for login\n            this._showLoginPopup(true, resolve, reject);\n          }\n        });\n      });\n    };\n    inpageProvider.tryPreopenHandle = (payload, cb) => {\n      const _payload = payload;\n      if (!Array.isArray(_payload) && UNSAFE_METHODS.includes(_payload.method)) {\n        const preopenInstanceId = getPreopenInstanceId();\n        this._handleWindow(preopenInstanceId, {\n          target: \"_blank\",\n          features: FEATURES_CONFIRM_WINDOW\n        });\n        _payload.preopenInstanceId = preopenInstanceId;\n      }\n      inpageProvider._rpcEngine.handle(_payload, cb);\n    };\n    // Work around for web3@1.0 deleting the bound `sendAsync` but not the unbound\n    // `sendAsync` method on the prototype, causing `this` reference issues with drizzle\n    const proxiedInpageProvider = new Proxy(inpageProvider, {\n      // straight up lie that we deleted the property so that it doesnt\n      // throw an error in strict mode\n      deleteProperty: () => true\n    });\n    this.ethereum = proxiedInpageProvider;\n    const communicationMux = setupMultiplex(communicationStream);\n    this.communicationMux = communicationMux;\n    const windowStream = communicationMux.getStream(\"window\");\n    windowStream.on(\"data\", chunk => {\n      if (chunk.name === \"create_window\") {\n        // url is the url we need to open\n        // we can pass the final url upfront so that it removes the step of redirecting to /redirect and waiting for finalUrl\n        this._createPopupBlockAlert(chunk.data.preopenInstanceId, chunk.data.url);\n      }\n    });\n    // show torus widget if button clicked\n    const widgetStream = communicationMux.getStream(\"widget\");\n    widgetStream.on(\"data\", chunk => {\n      const {\n        data\n      } = chunk;\n      this._displayIframe(data);\n    });\n    // Show torus button if wallet has been hydrated/detected\n    const statusStream = communicationMux.getStream(\"status\");\n    statusStream.on(\"data\", status => {\n      // login\n      if (status.loggedIn) {\n        this.isLoggedIn = status.loggedIn;\n        this.currentVerifier = status.verifier;\n      } // logout\n      else this._displayIframe();\n      if (this.isLoginCallback) {\n        this.isLoginCallback();\n        delete this.isLoginCallback;\n      }\n    });\n    this.provider = proxiedInpageProvider;\n    if (this.provider.shouldSendMetadata) sendSiteMetadata(this.provider._rpcEngine);\n    inpageProvider._initializeState();\n    log.debug(\"Torus - injected provider\");\n  }\n  _showLoginPopup(calledFromEmbed, resolve, reject) {\n    const loginHandler = data => {\n      const {\n        err,\n        selectedAddress\n      } = data;\n      if (err) {\n        log.error(err);\n        if (reject) reject(err);\n      }\n      // returns an array (cause accounts expects it)\n      else if (resolve) resolve([selectedAddress]);\n      if (this.isIframeFullScreen) this._displayIframe();\n    };\n    const oauthStream = this.communicationMux.getStream(\"oauth\");\n    if (!this.requestedVerifier) {\n      this._displayIframe(true);\n      handleStream(oauthStream, \"data\", loginHandler);\n      oauthStream.write({\n        name: \"oauth_modal\",\n        data: {\n          calledFromEmbed\n        }\n      });\n    } else {\n      handleStream(oauthStream, \"data\", loginHandler);\n      const preopenInstanceId = getPreopenInstanceId();\n      this._handleWindow(preopenInstanceId);\n      oauthStream.write({\n        name: \"oauth\",\n        data: {\n          calledFromEmbed,\n          verifier: this.requestedVerifier,\n          preopenInstanceId,\n          login_hint: this.loginHint\n        }\n      });\n    }\n  }\n  _createPopupBlockAlert(preopenInstanceId, url) {\n    const logoUrl = this._getLogoUrl();\n    const torusAlert = htmlToElement('<div id=\"torusAlert\" class=\"torus-alert--v2\">' + `<div id=\"torusAlert__logo\"><img src=\"${logoUrl}\" /></div>` + \"<div>\" + `<h1 id=\"torusAlert__title\">${this.embedTranslations.actionRequired}</h1>` + `<p id=\"torusAlert__desc\">${this.embedTranslations.pendingAction}</p>` + \"</div>\" + \"</div>\");\n    const successAlert = htmlToElement(`<div><a id=\"torusAlert__btn\">${this.embedTranslations.continue}</a></div>`);\n    const btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n    btnContainer.appendChild(successAlert);\n    torusAlert.appendChild(btnContainer);\n    this._setEmbedWhiteLabel(torusAlert);\n    this.torusAlertContainer.style.display = \"block\";\n    this.torusAlertContainer.appendChild(torusAlert);\n    successAlert.addEventListener(\"click\", () => {\n      this._handleWindow(preopenInstanceId, {\n        url,\n        target: \"_blank\",\n        features: FEATURES_CONFIRM_WINDOW\n      });\n      torusAlert.remove();\n      if (this.torusAlertContainer.children.length === 0) this.torusAlertContainer.style.display = \"none\";\n    });\n  }\n}\nexport { BUTTON_POSITION, PAYMENT_PROVIDER, SUPPORTED_PAYMENT_NETWORK, TORUS_BUILD_ENV, TorusInpageProvider, WALLET_OPENLOGIN_VERIFIER_MAP, WALLET_VERIFIERS, Torus as default };","map":{"version":3,"names":["WALLET_VERIFIERS","GOOGLE","FACEBOOK","TWITCH","REDDIT","DISCORD","EMAIL_PASSWORDLESS","WALLET_OPENLOGIN_VERIFIER_MAP","PAYMENT_PROVIDER","MOONPAY","WYRE","RAMPNETWORK","XANPOOL","MERCURYO","TRANSAK","BANXA","SUPPORTED_PAYMENT_NETWORK","MAINNET","MATIC","BSC_MAINNET","AVALANCHE_MAINNET","XDAI","ARBITRUM_MAINNET","OPTIMISM_MAINNET","TORUS_BUILD_ENV","PRODUCTION","DEVELOPMENT","BINANCE","TESTING","LRC","BETA","BNB","POLYGON","ALPHA","BUTTON_POSITION","BOTTOM_LEFT","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","CRYPTO_COMPARE_CURRENCIES","PROVIDER_SUPPORTED_FIAT_CURRENCIES","cryptoCompareCurrenciesSet","Set","supportedFiatCurrencies","provider","providerSupportedFiatCurrencies","filter","currency","has","paymentProviders$1","line1","line2","line3","supportPage","minOrderValue","maxOrderValue","validCurrencies","validCryptoCurrenciesByChain","value","display","includeFees","api","enforceMax","receiveHint","sell","translations","en","embed","continue","actionRequired","pendingAction","cookiesRequired","enableCookies","clickHere","de","ja","ko","zh","configuration","supportedVerifierList","Object","values","prodTorusUrl","localStorageKeyPrefix","htmlToElement","html","template","window","document","createElement","trimmedHtml","trim","innerHTML","content","firstChild","handleStream","handle","eventName","handler","handlerWrapper","chunk","removeListener","on","log","loglevel","getLogger","messages","errors","disconnected","permanentlyDisconnected","sendSiteMetadata","unsupportedSync","method","invalidDuplexStream","invalidOptions","maxEventListeners","shouldSendMetadata","invalidRequestArgs","invalidRequestMethod","invalidRequestParams","invalidLoggerObject","invalidLoggerMethod","info","connected","chainId","warnings","enableDeprecation","sendDeprecation","events","close","data","networkChanged","notification","publicConfigStore","ObservableStore","SafeEventEmitter","constructor","initState","_defineProperty","undefined","_state","getState","_getState","putState","newState","_putState","emit","updateState","partialState","state","_objectSpread$3","subscribe","unsubscribe","ObservableStoreStream","Duplex","obsStore","objectMode","resume","push","pipe","dest","options","result","write","_write","_encoding","callback","_read","_size","_destroy","err","storeAsStream","paymentProviders","validatePaymentProvider","params","isValid","keys","length","selectedProvider","selectedParams","fiatValue","requestedOrderAmount","parseFloat","toString","selectedCurrency","includes","selectedCryptoCurrency","flat","map","finalCryptoCurrency","toLowerCase","createErrorMiddleware","req","res","next","error","rpcErrors","invalidRequest","message","_objectSpread$2","cause","done","logStreamDisconnectWarning","remoteLabel","emitter","warningMsg","stack","warn","listenerCount","getPreopenInstanceId","Math","random","slice","getTorusUrl","buildEnv","integrity","torusUrl","logLevel","version","versionUsed","response","get","useAPIKey","getUserLanguage","userLanguage","navigator","language","userLanguages","split","prototype","hasOwnProperty","call","EMITTED_NOTIFICATIONS","NOOP","FEATURES_PROVIDER_CHANGE_WINDOW","FEATURES_DEFAULT_WALLET_WINDOW","FEATURES_CONFIRM_WINDOW","getPopupFeatures","dualScreenLeft","screenLeft","screenX","dualScreenTop","screenTop","screenY","w","h","width","innerWidth","documentElement","clientWidth","screen","height","innerHeight","clientHeight","systemZoom","left","abs","top","features","defaultMaxListeners","getRpcPromiseCallback","resolve","reject","unwrapResult","arguments","Array","isArray","TorusInpageProvider","connectionStream","jsonRpcStreamName","enable","experimentalMethods","send","duplex","Error","isTorus","setMaxListeners","_objectSpread$1","_defaultState","selectedAddress","networkVersion","_handleAccountsChanged","bind","_handleChainChanged","_handleUnlockStateChanged","_handleConnect","_handleDisconnect","_handleStreamDisconnect","_sendSync","_rpcRequest","_warnOfDeprecation","_initializeState","request","sendAsync","mux","ObjectMultiplex","pump","_publicConfigStore","storageKey","createStream","ignoreStream","isConnected","jsonRpcConnection","createStreamMiddleware","stream","rpcEngine","JRPCEngine","createIdRemapMiddleware","middleware","_rpcEngine","payload","type","_sentWarnings","args","Promise","addListener","listener","once","prependListener","prependOnceListener","accounts","isUnlocked","initialized","isInternal","cb","_payload","jsonrpc","tryPreopenHandle","methodOrPayload","callbackOrArgs","id","debug","isRecoverable","errorMessage","isPermanentlyDisconnected","EthereumProviderError","streamName","isEthAccounts","finalAccounts","account","dequal","hasEmittedConnection","PopupHandler","EventEmitter","_ref","url","target","windowTimer","iClosedWindow","_setupTimer","Number","setInterval","closed","clearInterval","open","_this$window","href","focus","redirect","locationReplaceOnRedirect","location","replace","imgExists","img","onload","onerror","src","e","getSiteName","siteName","querySelector","metaTitle","title","hostname","getSiteIcon","icon","from","querySelectorAll","find","_icon","Boolean","getSiteMetadata","name","engine","domainMetadata","originalError","UNSAFE_METHODS","preLoadIframe","torusIframeHtml","crossOrigin","rel","relList","supports","head","appendChild","Torus","buttonPosition","buttonSize","modalZIndex","apiKey","isLoggedIn","isInitialized","torusWidgetVisibility","requestedVerifier","currentVerifier","setAPIKey","alertZIndex","isIframeFullScreen","init","enableLogging","network","host","networkName","blockExplorer","ticker","tickerName","loginConfig","showTorusButton","whiteLabel","useWalletConnect","mfaLevel","isCustomLogin","setDefaultLevel","enableAll","disableAll","torusIframeUrl","URL","pathname","endsWith","hash","torusIframe","torusAlertContainer","style","setProperty","link","setAttribute","styleLink","defaultLanguage","customTranslations","mergedTranslations","deepmerge","languageTranslations","embedTranslations","_setupWeb3","initStream","communicationMux","getStream","success","_displayIframe","body","login","verifier","login_hint","loginHint","ethereum","logout","logOutStream","statusStream","statusStreamHandler","status","loggedIn","cleanUp","clearInit","isElement","element","Element","HTMLDocument","contains","remove","torusAlert","hideTorusButton","_sendWidgetVisibilityStatus","setProvider","rest","_objectWithoutProperties","_excluded","providerChangeStream","preopenInstanceId","_handleWindow","_objectSpread","override","showWallet","path","showWalletStream","finalPath","showWalletHandler","instanceId","finalUrl","searchParams","append","forEach","x","walletWindow","getPublicAddress","_ref2","verifierId","isExtended","walletVerifier","openloginVerifier","headers","getUserInfo","userInfoAccessStream","userInfoAccessHandler","approved","rejected","newRequest","userInfoStream","userInfoHandler","handlerChunk","initiateTopup","JSON","stringify","topupStream","topupHandler","loginWithPrivateKey","loginParams","privateKey","userInfo","Buffer","loginPrivKeyStream","loginHandler","showWalletConnectScanner","walletConnectStream","walletConnectHandler","windowStream","handledWindow","_createPopupBlockAlert","closeHandler","_ref3","receivedId","_setEmbedWhiteLabel","theme","isDark","colors","classList","add","torusBrand1","torusGray2","_getLogoUrl","_this$whiteLabel","_this$whiteLabel$them","logoUrl","_this$whiteLabel2","logoLight","_this$whiteLabel3","logoDark","torusWidgetVisibilityStream","isFull","size","right","bottom","assign","metamaskStream","BasePostMessageStream","targetWindow","contentWindow","targetOrigin","origin","communicationStream","inpageProvider","detectAccountRequestPrototypeModifier","m","originalMethod","providerFunc","_len","_key","apply","setTimeout","handleLoginCb","then","_","_showLoginPopup","catch","isLoginCallback","proxiedInpageProvider","Proxy","deleteProperty","setupMultiplex","widgetStream","calledFromEmbed","oauthStream","successAlert","btnContainer","addEventListener","children"],"sources":["/Users/Einpunk Community/Documents/Brownie/brownie_gamex_vault/node_modules/@toruslabs/torus-embed/src/interfaces.ts","/Users/Einpunk Community/Documents/Brownie/brownie_gamex_vault/node_modules/@toruslabs/torus-embed/src/supportedCurrencies.ts","/Users/Einpunk Community/Documents/Brownie/brownie_gamex_vault/node_modules/@toruslabs/torus-embed/src/config.ts","/Users/Einpunk Community/Documents/Brownie/brownie_gamex_vault/node_modules/@toruslabs/torus-embed/src/embedUtils.ts","/Users/Einpunk Community/Documents/Brownie/brownie_gamex_vault/node_modules/@toruslabs/torus-embed/src/loglevel.ts","/Users/Einpunk Community/Documents/Brownie/brownie_gamex_vault/node_modules/@toruslabs/torus-embed/src/messages.ts","/Users/Einpunk Community/Documents/Brownie/brownie_gamex_vault/node_modules/@toruslabs/torus-embed/src/ObservableStore.ts","/Users/Einpunk Community/Documents/Brownie/brownie_gamex_vault/node_modules/@toruslabs/torus-embed/src/ObservableStoreStream.ts","/Users/Einpunk Community/Documents/Brownie/brownie_gamex_vault/node_modules/@toruslabs/torus-embed/src/utils.ts","/Users/Einpunk Community/Documents/Brownie/brownie_gamex_vault/node_modules/@toruslabs/torus-embed/src/inpage-provider.ts","/Users/Einpunk Community/Documents/Brownie/brownie_gamex_vault/node_modules/@toruslabs/torus-embed/src/PopupHandler.ts","/Users/Einpunk Community/Documents/Brownie/brownie_gamex_vault/node_modules/@toruslabs/torus-embed/src/siteMetadata.ts","/Users/Einpunk Community/Documents/Brownie/brownie_gamex_vault/node_modules/@toruslabs/torus-embed/src/embed.ts"],"sourcesContent":["import { JRPCId, JRPCMiddleware, JRPCRequest, JRPCVersion, SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\nimport type { Duplex } from \"readable-stream\";\n\nexport const WALLET_VERIFIERS = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  TWITCH: \"twitch\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  EMAIL_PASSWORDLESS: \"torus-auth0-email-passwordless\",\n} as const;\n\nexport const WALLET_OPENLOGIN_VERIFIER_MAP = {\n  [WALLET_VERIFIERS.GOOGLE]: \"tkey-google\",\n  [WALLET_VERIFIERS.FACEBOOK]: \"tkey-facebook\",\n  [WALLET_VERIFIERS.TWITCH]: \"tkey-twitch\",\n  [WALLET_VERIFIERS.REDDIT]: \"tkey-reddit\",\n  [WALLET_VERIFIERS.DISCORD]: \"tkey-discord\",\n  [WALLET_VERIFIERS.EMAIL_PASSWORDLESS]: \"tkey-auth0-email-passwordless\",\n} as const;\n\nexport const PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\",\n  BANXA: \"banxa\",\n} as const;\n\nexport const SUPPORTED_PAYMENT_NETWORK = {\n  MAINNET: \"mainnet\",\n  MATIC: \"matic\",\n  BSC_MAINNET: \"bsc_mainnet\",\n  AVALANCHE_MAINNET: \"avalanche_mainnet\",\n  XDAI: \"xdai\",\n  ARBITRUM_MAINNET: \"arbitrum_mainnet\",\n  OPTIMISM_MAINNET: \"optimism_mainnet\",\n} as const;\n\nexport const TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  BINANCE: \"binance\",\n  TESTING: \"testing\",\n  LRC: \"lrc\",\n  BETA: \"beta\",\n  BNB: \"bnb\",\n  POLYGON: \"polygon\",\n  ALPHA: \"alpha\",\n} as const;\n\nexport type PAYMENT_PROVIDER_TYPE = (typeof PAYMENT_PROVIDER)[keyof typeof PAYMENT_PROVIDER];\n\nexport type SUPPORTED_PAYMENT_NETWORK_TYPE = (typeof SUPPORTED_PAYMENT_NETWORK)[keyof typeof SUPPORTED_PAYMENT_NETWORK];\n\nexport type TORUS_BUILD_ENV_TYPE = (typeof TORUS_BUILD_ENV)[keyof typeof TORUS_BUILD_ENV];\n\nexport interface IPaymentProvider {\n  line1: string;\n  line2: string;\n  line3: string;\n  supportPage: string;\n  minOrderValue: number;\n  maxOrderValue: number;\n  validCurrencies: string[];\n  validCryptoCurrenciesByChain: Partial<Record<string, { value: string; display: string }[]>>;\n  includeFees: boolean;\n  enforceMax: boolean;\n  sell?: boolean;\n}\n\nexport const BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\",\n} as const;\n\nexport type EMBED_TRANSLATION_ITEM = {\n  continue: string;\n  actionRequired: string;\n  pendingAction: string;\n  cookiesRequired: string;\n  enableCookies: string;\n  clickHere: string;\n};\n\nexport type BUTTON_POSITION_TYPE = (typeof BUTTON_POSITION)[keyof typeof BUTTON_POSITION];\n\nexport type WALLET_PATH = \"transfer\" | \"topup\" | \"home\" | \"settings\" | \"history\" | \"discover\";\nexport type ETHEREUM_NETWORK_TYPE = \"sepolia\" | \"mainnet\" | \"goerli\" | \"localhost\" | \"matic\" | \"mumbai\" | \"xdai\" | \"bsc_mainnet\" | \"bsc_testnet\";\n\nexport type LOGIN_TYPE =\n  | \"google\"\n  | \"facebook\"\n  | \"reddit\"\n  | \"discord\"\n  | \"twitch\"\n  | \"apple\"\n  | \"github\"\n  | \"linkedin\"\n  | \"twitter\"\n  | \"weibo\"\n  | \"line\"\n  | \"jwt\"\n  | \"email_password\"\n  | \"passwordless\"\n  | \"wechat\"\n  | \"kakao\";\n\nexport interface TorusCtorArgs {\n  /**\n   * Determines where the torus widget is visible on the page.\n   * @defaultValue bottom-left\n   */\n  buttonPosition?: BUTTON_POSITION_TYPE;\n\n  /**\n   * Size of the widget button\n   * @defaultValue 56\n   */\n  buttonSize?: number;\n\n  /**\n   * Z-index of the modal and iframe\n   * @defaultValue 99999\n   */\n  modalZIndex?: number;\n\n  /**\n   * Api key\n   * Get yours today at {@link https://developer.tor.us | Dashboard}\n   */\n  apiKey?: string;\n}\n\nexport interface TorusLoginParams {\n  verifier?: string;\n  login_hint?: string;\n}\n\nexport interface NetworkInterface {\n  /**\n   * If any network other than the ones in enum, it should a JSON RPC URL\n   */\n  host: ETHEREUM_NETWORK_TYPE | string;\n  /**\n   * chainId for the network. If not provided, we query the host\n   */\n  chainId?: number;\n  /**\n   * Name of the network\n   */\n  networkName?: string;\n  /**\n   * Url of the block explorer\n   */\n  blockExplorer?: string;\n  /**\n   * Default currency ticker of the network (e.g: BNB)\n   */\n  ticker?: string;\n  /**\n   * Name for currency ticker (e.g: `Binance Coin`)\n   */\n  tickerName?: string;\n}\n\nexport interface BaseLoginOptions {\n  /**\n   * If you need to send custom parameters to the Authorization Server,\n   * make sure to use the original parameter name.\n   */\n  [key: string]: unknown;\n  /**\n   * - `'page'`: displays the UI with a full page view\n   * - `'popup'`: displays the UI with a popup window\n   * - `'touch'`: displays the UI in a way that leverages a touch interface\n   * - `'wap'`: displays the UI with a \"feature phone\" type interface\n   */\n  display?: \"page\" | \"popup\" | \"touch\" | \"wap\";\n  /**\n   * - `'none'`: do not prompt user for login or consent on reauthentication\n   * - `'login'`: prompt user for reauthentication\n   * - `'consent'`: prompt user for consent before processing request\n   * - `'select_account'`: prompt user to select an account\n   */\n  prompt?: \"none\" | \"login\" | \"consent\" | \"select_account\";\n  /**\n   * Maximum allowable elasped time (in seconds) since authentication.\n   * If the last time the user authenticated is greater than this value,\n   * the user must be reauthenticated.\n   */\n  max_age?: string | number;\n  /**\n   * The space-separated list of language tags, ordered by preference.\n   * For example: `'fr-CA fr en'`.\n   */\n  ui_locales?: string;\n  /**\n   * Previously issued ID Token.\n   */\n  id_token_hint?: string;\n  /**\n   * The user's email address or other identifier. When your app knows\n   * which user is trying to authenticate, you can provide this parameter\n   * to pre-fill the email box or select the right session for sign-in.\n   *\n   * This currently only affects the classic Lock experience.\n   */\n  login_hint?: string;\n  acr_values?: string;\n  /**\n   * The default scope to be used on authentication requests.\n   * The defaultScope defined in the Auth0Client is included\n   * along with this scope\n   */\n  scope?: string;\n  /**\n   * The default audience to be used for requesting API access.\n   */\n  audience?: string;\n  /**\n   * The name of the connection configured for your application.\n   * If null, it will redirect to the Auth0 Login Page and show\n   * the Login Widget.\n   */\n  connection?: string;\n}\n\nexport interface JwtParameters extends BaseLoginOptions {\n  /**\n   * Your Auth0 account domain such as `'example.auth0.com'`,\n   * `'example.eu.auth0.com'` or , `'example.mycompany.com'`\n   * (when using [custom domains](https://auth0.com/docs/custom-domains))\n   */\n  domain: string;\n  /**\n   * The Client ID found on your Application settings page\n   */\n  client_id?: string;\n  /**\n   * The default URL where Auth0 will redirect your browser to with\n   * the authentication result. It must be whitelisted in\n   * the \"Allowed Callback URLs\" field in your Auth0 Application's\n   * settings. If not provided here, it should be provided in the other\n   * methods that provide authentication.\n   */\n  redirect_uri?: string;\n  /**\n   * The value in seconds used to account for clock skew in JWT expirations.\n   * Typically, this value is no more than a minute or two at maximum.\n   * Defaults to 60s.\n   */\n  leeway?: number;\n\n  /**\n   * The field in jwt token which maps to verifier id\n   */\n  verifierIdField?: string;\n\n  /**\n   * Whether the verifier id field is case sensitive\n   * @defaultValue true\n   */\n  isVerifierIdCaseSensitive?: boolean;\n}\n\nexport interface LoginConfigItem {\n  /**\n   * Display Name. If not provided, we use the default for torus app\n   */\n  name: string;\n  /**\n   * The type of login. Refer to enum `LOGIN_TYPE`\n   */\n  typeOfLogin: LOGIN_TYPE;\n  /**\n   * Description for button. If provided, it renders as a full length button. else, icon button\n   */\n  description?: string;\n  /**\n   * Custom client_id. If not provided, we use the default for torus app\n   */\n  clientId?: string;\n  /**\n   * Logo to be shown on mouse hover. If not provided, we use the default for torus app\n   */\n  logoHover?: string;\n  /**\n   * Logo to be shown on dark background (dark theme). If not provided, we use the default for torus app\n   */\n  logoLight?: string;\n  /**\n   * Logo to be shown on light background (light theme). If not provided, we use the default for torus app\n   */\n  logoDark?: string;\n  /**\n   * Whether to show the login button on modal or not\n   */\n  showOnModal?: boolean;\n  /**\n   * Whether to show the login button on mobile\n   */\n  showOnMobile?: boolean;\n  /**\n   * Custom jwt parameters to configure the login. Useful for Auth0 configuration\n   */\n  jwtParameters?: JwtParameters;\n  /**\n   * Show login button on the main list\n   */\n  mainOption?: boolean;\n  /**\n   * Whether to show the login button on desktop\n   */\n  showOnDesktop?: boolean;\n  /**\n   * Modify the order of buttons. Should be greater than zero, where 1 is top priority.\n   */\n  priority?: number;\n}\n\nexport interface LoginConfig {\n  /**\n   * Use the verifier provided by torus as a key or a default verifier used by torus\n   * {@link https://docs.tor.us/torus-wallet/developing-with-torus-wallet/oauth | Documentation}\n   */\n  [verifier: string]: LoginConfigItem;\n}\n\nexport interface TorusNodePub {\n  /**\n   * X component of a Public Key\n   */\n  X: string;\n  /**\n   * Y component of a Public Key\n   */\n  Y: string;\n}\n\nexport interface TorusPublicKey extends TorusNodePub {\n  /**\n   * Ethereum Public Address\n   */\n  address: string;\n}\n\nexport interface PaymentParams {\n  /**\n   * Address to send the funds to\n   */\n  selectedAddress?: string;\n  /**\n   * Default fiat currency for the user to make the payment in\n   */\n  selectedCurrency?: string;\n  /**\n   * Amount to buy in the selectedCurrency\n   */\n  fiatValue?: number;\n  /**\n   * Cryptocurrency to buy\n   */\n  selectedCryptoCurrency?: string;\n  /**\n   * Chain Network to use\n   */\n  chainNetwork?: SUPPORTED_PAYMENT_NETWORK_TYPE;\n}\n\nexport interface VerifierArgs {\n  /**\n   * Verifier Enum\n   */\n  verifier: \"google\" | \"reddit\" | \"discord\";\n  /**\n   * email for google\n   *\n   * username for reddit\n   *\n   * id for discord\n   */\n  verifierId: string;\n  /**\n   * If true, returns {@link TorusPublicKey}, else returns string\n   */\n  isExtended?: boolean;\n}\n\nexport interface LoginParams {\n  verifier?: string;\n  login_hint?: string;\n}\n\nexport interface UserInfo {\n  /**\n   * Email of the logged in user\n   */\n  email: string;\n  /**\n   * Full name of the logged in user\n   */\n  name: string;\n  /**\n   * Profile image of the logged in user\n   */\n  profileImage: string;\n  /**\n   * verifier of the logged in user (google, facebook etc)\n   */\n  verifier: string;\n  /**\n   * Verifier Id of the logged in user\n   *\n   * email for google,\n   * id for facebook,\n   * username for reddit,\n   * id for twitch,\n   * id for discord\n   */\n  verifierId: string;\n  /**\n   * Returns if the logged in user is new\n   */\n  isNewUser: boolean;\n\n  /**\n   * login type of the logged in user (google, facebook etc)\n   */\n  typeOfLogin: LOGIN_TYPE;\n}\n\nexport interface LocaleLinks<T> {\n  /**\n   * Item corresponding to english\n   */\n  en?: T;\n  /**\n   * Item corresponding to japanese\n   */\n  ja?: T;\n  /**\n   * Item corresponding to korean\n   */\n  ko?: T;\n  /**\n   * Item corresponding to german\n   */\n  de?: T;\n  /**\n   * Item corresponding to chinese (simplified)\n   */\n  zh?: T;\n  /**\n   * Item corresponding to spanish\n   */\n  es?: T;\n}\n\nexport interface ThemeParams {\n  /**\n   * If true, enables dark mode\n   * Defaults to false\n   * @defaultValue false\n   */\n  isDark: boolean;\n  /**\n   * Colors object to customize colors in torus theme.\n   *\n   * Contact us for whitelabel. Example provided in `examples/vue-app`\n   */\n  colors: Record<string, string>;\n}\n\nexport interface IntegrityParams {\n  /**\n   * Version of torus-website to load\n   */\n  version?: string;\n}\n\nexport interface VerifierStatus {\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  google?: boolean;\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  facebook?: boolean;\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  reddit?: boolean;\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  twitch?: boolean;\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  discord?: boolean;\n}\n\nexport interface WhiteLabelParams {\n  /**\n   * Whitelabel theme\n   */\n  theme: ThemeParams;\n  /**\n   * Language of whitelabel.\n   *\n   * order of preference: Whitelabel language \\> user language (in torus-website) \\> browser language\n   */\n  defaultLanguage?: string;\n  /**\n   * Logo Url to be used in light mode (dark logo)\n   */\n  logoDark: string;\n  /**\n   * Logo Url to be used in dark mode (light logo)\n   */\n  logoLight: string;\n  /**\n   * Shows/hides topup option in torus-website/widget.\n   * Defaults to false\n   * @defaultValue false\n   */\n  topupHide?: boolean;\n  /**\n   * Shows/hides billboard in torus-website.\n   * Defaults to false\n   * @defaultValue false\n   */\n  featuredBillboardHide?: boolean;\n  /**\n   * Shows/hides disclaimers on login page. Only works if special logins are hidden\n   * Defaults to false\n   * @defaultValue false\n   */\n  disclaimerHide?: boolean;\n  /**\n   * Language specific link for terms and conditions on torus-website. See (examples/vue-app) to configure\n   */\n  tncLink?: LocaleLinks<string>;\n  /**\n   * Language specific link for privacy policy on torus-website. See (examples/vue-app) to configure\n   */\n  privacyPolicy?: LocaleLinks<string>;\n  /**\n   * Language specific link for privacy policy on torus-website. See (examples/vue-app) to configure\n   */\n  contactLink?: LocaleLinks<string>;\n  /**\n   * Custom translations. See (examples/vue-app) to configure\n   */\n  customTranslations?: LocaleLinks<unknown>;\n}\n\nexport interface TorusParams {\n  /**\n   * Torus Network Object\n   */\n  network?: NetworkInterface;\n  /**\n   * Build Environment of Torus.\n   *\n   * production uses https://app.tor.us,\n   *\n   * development uses http://localhost:4050 (expects torus-website to be run locally),\n   *\n   * binance uses https://binance.tor.us,\n   *\n   * bnb uses https://bnb.tor.us,\n   *\n   * polygon uses https://polygon.tor.us,\n   *\n   * lrc uses https://lrc.tor.us,\n   *\n   * beta uses https://beta.tor.us, (currently supports tkey)\n   *\n   * testing uses https://testing.tor.us (latest internal build)\n   * @defaultValue production\n   */\n  buildEnv?: TORUS_BUILD_ENV_TYPE;\n  /**\n   * Enables or disables logging.\n   *\n   * Defaults to false in prod and true in other environments\n   */\n  enableLogging?: boolean;\n  /**\n   * whether to show/hide torus widget.\n   *\n   * Defaults to true\n   * @defaultValue true\n   */\n  showTorusButton?: boolean;\n  /**\n   * Array of login config items. Used to modify the default logins/ add new logins\n   */\n  loginConfig?: LoginConfig;\n  /**\n   * Params to enable integrity checks and load specific versions of torus-website\n   */\n  integrity?: IntegrityParams;\n  /**\n   * Params to enable whitelabelling of torus website and widget\n   */\n  whiteLabel?: WhiteLabelParams;\n\n  /**\n   * Setting `useWalletConnect` to true allows to display wallet connect qr scanner from torus-embed.\n   *\n   * Defaults to false\n   * @defaultValue false\n   */\n  useWalletConnect?: boolean;\n\n  /**\n   * Setting mfa level to `default` will present mfa screen to user on every third login\n   * Setting mfa level to `optional` will present mfa screen to user on every login but user can skip it\n   * Setting mfa level to `mandatory` will make it mandatory for user to setup mfa after login\n   * Setting mfa level to`none` will make the user skip the mfa setup screen\n   *\n   * Defaults to default\n   * @defaultValue default\n   */\n  mfaLevel?: \"none\" | \"default\" | \"optional\" | \"mandatory\";\n}\n\nexport interface UnvalidatedJsonRpcRequest {\n  id?: JRPCId;\n  jsonrpc?: JRPCVersion;\n  method: string;\n  params?: unknown;\n  preopenInstanceId?: string;\n}\n\nexport interface ProviderOptions {\n  /**\n   * The name of the stream used to connect to the wallet.\n   */\n  jsonRpcStreamName?: string;\n\n  /**\n   * The maximum number of event listeners.\n   */\n  maxEventListeners?: number;\n  /**\n   * Whether the provider should send page metadata.\n   */\n  shouldSendMetadata?: boolean;\n}\n\nexport interface RequestArguments {\n  /** The RPC method to request. */\n  method: string;\n\n  /** The params of the RPC method, if any. */\n  params?: unknown[] | Record<string, unknown>;\n}\n\nexport interface BaseProviderState {\n  accounts: null | string[];\n  isConnected: boolean;\n  isUnlocked: boolean;\n  initialized: boolean;\n  isPermanentlyDisconnected: boolean;\n  hasEmittedConnection: boolean;\n}\n\nexport interface JsonRpcConnection {\n  events: SafeEventEmitter;\n  middleware: JRPCMiddleware<unknown, unknown>;\n  stream: Duplex;\n}\n\nexport interface SentWarningsState {\n  // methods\n  enable: boolean;\n  experimentalMethods: boolean;\n  send: boolean;\n  publicConfigStore: boolean;\n  // events\n  events: {\n    close: boolean;\n    data: boolean;\n    networkChanged: boolean;\n    notification: boolean;\n  };\n}\n\nexport interface SendSyncJsonRpcRequest extends JRPCRequest<unknown> {\n  method: \"eth_accounts\" | \"eth_coinbase\" | \"eth_uninstallFilter\" | \"net_version\";\n}\n\nexport interface PublicConfigState {\n  isUnlocked?: boolean;\n  selectedAddress?: string;\n  chainId?: string;\n  networkVersion?: string;\n  storageKey: string;\n}\n\nexport type Maybe<T> = Partial<T> | null | undefined;\n\nexport type BufferEncoding = \"ascii\" | \"utf8\" | \"utf-8\" | \"utf16le\" | \"ucs2\" | \"ucs-2\" | \"base64\" | \"base64url\" | \"latin1\" | \"binary\" | \"hex\";\n\nexport type IObjectMultiplex = Duplex;\n\nexport type WalletProviderState = {\n  accounts: string[];\n  chainId: string;\n  isUnlocked: boolean;\n  networkVersion: string;\n};\n","import { PAYMENT_PROVIDER } from \"./interfaces\";\n/**\n * From https://min-api.cryptocompare.com/data/v2/pair/mapping/fsym?fsym=BTC&extraParams=YourSite\n * GET https://min-api.cryptocompare.com/data/v2/pair/mapping/fsym?fsym=BTC\n * Then map over returned entries, picking tsym\n *\n * Last updated: Date of commit\n */\nexport const CRYPTO_COMPARE_CURRENCIES = [\n  \"ETH\",\n  \"USDT\",\n  \"USDC\",\n  \"TUSD\",\n  \"EOSDT\",\n  \"USD\",\n  \"DAI\",\n  \"GUSD\",\n  \"DKKT\",\n  \"PAX\",\n  \"ILS\",\n  \"RUB\",\n  \"BYN\",\n  \"EUR\",\n  \"GBP\",\n  \"JPY\",\n  \"KRW\",\n  \"PLN\",\n  \"MXN\",\n  \"AUD\",\n  \"BRL\",\n  \"CAD\",\n  \"CHF\",\n  \"KPW\",\n  \"LAK\",\n  \"LBP\",\n  \"LKR\",\n  \"XOF\",\n  \"CNHT\",\n  \"DOGE\",\n  \"UAH\",\n  \"TRY\",\n  \"HKD\",\n  \"XJP\",\n  \"SGD\",\n  \"USC\",\n  \"NZD\",\n  \"NGN\",\n  \"RUR\",\n  \"COP\",\n  \"GHS\",\n  \"EGP\",\n  \"IDR\",\n  \"BHD\",\n  \"CRC\",\n  \"PEN\",\n  \"AED\",\n  \"DOP\",\n  \"PKR\",\n  \"HUF\",\n  \"VND\",\n  \"XAR\",\n  \"LTC\",\n  \"RON\",\n  \"OMR\",\n  \"MYR\",\n  \"DKK\",\n  \"UGX\",\n  \"ZMW\",\n  \"SAR\",\n  \"SEK\",\n  \"GEL\",\n  \"RWF\",\n  \"IRR\",\n  \"TZS\",\n  \"CNY\",\n  \"VEF\",\n  \"BDT\",\n  \"HRK\",\n  \"CLP\",\n  \"THB\",\n  \"XAF\",\n  \"ARS\",\n  \"UYU\",\n  \"SZL\",\n  \"KZT\",\n  \"NOK\",\n  \"KES\",\n  \"PAB\",\n  \"INR\",\n  \"CZK\",\n  \"MAD\",\n  \"TWD\",\n  \"PHP\",\n  \"ZAR\",\n  \"BOB\",\n  \"CDF\",\n  \"DASH\",\n  \"VES\",\n  \"ISK\",\n  \"MWK\",\n  \"BAM\",\n  \"TTD\",\n  \"XRP\",\n  \"JOD\",\n  \"RSD\",\n  \"HNL\",\n  \"BGN\",\n  \"GTQ\",\n  \"BWP\",\n  \"XMR\",\n  \"MMK\",\n  \"QAR\",\n  \"AOA\",\n  \"KWD\",\n  \"MUR\",\n  \"WUSD\",\n  \"WEUR\",\n  \"WAVES\",\n  \"WTRY\",\n  \"LRD\",\n  \"LSL\",\n  \"LYD\",\n  \"AWG\",\n  \"MDL\",\n  \"BTO\",\n  \"EURS\",\n  \"CHFT\",\n  \"MKD\",\n  \"MNT\",\n  \"MOP\",\n  \"MRO\",\n  \"MVR\",\n  \"VOLLAR\",\n  \"CKUSD\",\n  \"KHR\",\n  \"VUV\",\n  \"BITCNY\",\n  \"QC\",\n  \"BBD\",\n  \"NAD\",\n  \"NPR\",\n  \"PGK\",\n  \"PYG\",\n  \"BIF\",\n  \"BMD\",\n  \"BND\",\n  \"XLM\",\n  \"BNB\",\n  \"SCR\",\n  \"BAT\",\n  \"CRO\",\n  \"HT\",\n  \"KCS\",\n  \"LEO\",\n  \"LINK\",\n  \"MKR\",\n  \"NPXS\",\n  \"OMG\",\n  \"REP\",\n  \"ZB\",\n  \"ZIL\",\n  \"ZRX\",\n  \"BCH\",\n  \"BZD\",\n  \"CUP\",\n  \"CVE\",\n  \"DJF\",\n  \"DZD\",\n  \"ERN\",\n  \"ETB\",\n  \"FJD\",\n  \"FKP\",\n  \"BUSD\",\n  \"ANCT\",\n  \"ALL\",\n  \"AMD\",\n  \"ANG\",\n  \"CNYX\",\n  \"IQD\",\n  \"UZS\",\n  \"TND\",\n  \"GGP\",\n  \"XAU\",\n  \"KGS\",\n  \"GIP\",\n  \"JMD\",\n  \"ZEC\",\n  \"USDP\",\n  \"BSV\",\n  \"EMC2\",\n  \"SNT\",\n  \"GTO\",\n  \"POWR\",\n  \"EUSD\",\n  \"EURT\",\n  \"BCY\",\n  \"BTS\",\n  \"ATM\",\n  \"BLOCKPAY\",\n  \"ARDR\",\n  \"AMP\",\n  \"B2X\",\n  \"BITGOLD\",\n  \"BITEUR\",\n  \"ATB\",\n  \"BITUSD\",\n  \"AGRS\",\n  \"DFXT\",\n  \"HIKEN\",\n  \"BIX\",\n  \"KNC\",\n  \"EOS\",\n  \"COB\",\n  \"COSS\",\n  \"BMH\",\n  \"NANO\",\n  \"BDG\",\n  \"BNT\",\n  \"XVG\",\n  \"LKK1Y\",\n  \"LKK\",\n  \"USDK\",\n  \"EURN\",\n  \"NZDT\",\n  \"JSE\",\n  \"GMD\",\n  \"GNF\",\n  \"GYD\",\n  \"YER\",\n  \"XPF\",\n  \"HTG\",\n  \"SLL\",\n  \"SOS\",\n  \"WST\",\n  \"SVC\",\n  \"SYP\",\n  \"NEO\",\n  \"KMF\",\n  \"JUMP\",\n  \"AYA\",\n  \"BLAST\",\n  \"WGR\",\n  \"BCN\",\n  \"BTG\",\n  \"URALS\",\n  \"INN\",\n  \"USDQ\",\n  \"CNH\",\n  \"HUSD\",\n  \"BKRW\",\n  \"NZDX\",\n  \"EURX\",\n  \"CADX\",\n  \"USDEX\",\n  \"JPYX\",\n  \"AUDX\",\n  \"VNDC\",\n  \"EON\",\n  \"GBPX\",\n  \"CHFX\",\n  \"USDJ\",\n  \"IDRT\",\n  \"USDS\",\n  \"USDN\",\n  \"BIDR\",\n  \"IDK\",\n  \"BSD\",\n  \"BTN\",\n  \"KYD\",\n  \"NIO\",\n  \"SBD\",\n  \"SDG\",\n  \"SHP\",\n  \"TOP\",\n  \"XCD\",\n  \"XCHF\",\n  \"CNYT\",\n  \"GYEN\",\n  \"ZUSD\",\n  \"GOLD\",\n  \"TRX\",\n  \"TRYB\",\n  \"PLATC\",\n  \"STRAX\",\n  \"UST\",\n  \"GLM\",\n  \"VAI\",\n  \"BRZ\",\n  \"DDRST\",\n  \"XAUT\",\n  \"MIM\",\n];\n\n/**\n * currencies supported by the payment provider\n * Last updated: Date of commit\n */\nconst PROVIDER_SUPPORTED_FIAT_CURRENCIES = {\n  // https://integrations.simplex.com/supported_currencies\n  // https://support.moonpay.com/hc/en-gb/articles/360011931457-Which-fiat-currencies-are-supported-\n  [PAYMENT_PROVIDER.MOONPAY]: [\n    \"AUD\",\n    \"BGN\",\n    \"BRL\",\n    \"CAD\",\n    \"CHF\",\n    \"CNY\",\n    \"COP\",\n    \"CZK\",\n    \"DKK\",\n    \"DOP\",\n    \"EGP\",\n    \"EUR\",\n    \"GBP\",\n    \"HKD\",\n    \"HRK\",\n    \"IDR\",\n    \"ILS\",\n    \"JPY\",\n    \"JOD\",\n    \"KES\",\n    \"KRW\",\n    \"KWD\",\n    \"LKR\",\n    \"MAD\",\n    \"MXN\",\n    \"MYR\",\n    \"NGN\",\n    \"NOK\",\n    \"NZD\",\n    \"OMR\",\n    \"PEN\",\n    \"PKR\",\n    \"PLN\",\n    \"RON\",\n    \"RUB\",\n    \"SEK\",\n    \"SGD\",\n    \"THB\",\n    \"TRY\",\n    \"TWD\",\n    \"USD\",\n    \"VND\",\n    \"ZAR\",\n  ],\n  /**\n   * https://docs.sendwyre.com/docs/supported-currencies#fiat\n   * The ones where credit card is supported\n   */\n  [PAYMENT_PROVIDER.WYRE]: [\n    \"USD\",\n    \"EUR\",\n    \"GBP\",\n    \"AUD\",\n    \"CAD\",\n    \"NZD\",\n    \"CNY\",\n    \"ARS\",\n    \"BRL\",\n    \"CHF\",\n    \"CLP\",\n    \"COP\",\n    \"CZK\",\n    \"DKK\",\n    \"HKD\",\n    \"ILS\",\n    \"INR\",\n    \"ISK\",\n    \"JPY\",\n    \"KRW\",\n    \"MXN\",\n    \"MYR\",\n    \"NOK\",\n    \"PHP\",\n    \"PLN\",\n    \"SEK\",\n    \"SGD\",\n    \"THB\",\n    \"VND\",\n    \"ZAR\",\n  ],\n  // https://support.ramp.network/en/articles/471-supported-fiat-currencies\n  [PAYMENT_PROVIDER.RAMPNETWORK]: [\n    \"USD\",\n    \"EUR\",\n    \"GBP\",\n    \"BMD\",\n    \"BAM\",\n    \"BWP\",\n    \"BRL\",\n    \"BGN\",\n    \"COP\",\n    \"CRC\",\n    \"CZK\",\n    \"DKK\",\n    \"DOP\",\n    \"GEL\",\n    \"GTQ\",\n    \"HNL\",\n    \"HUF\",\n    \"ISK\",\n    \"INR\",\n    \"ILS\",\n    \"KZT\",\n    \"KES\",\n    \"KWD\",\n    \"LAK\",\n    \"MKD\",\n    \"MYR\",\n    \"MXN\",\n    \"MDL\",\n    \"MZN\",\n    \"NZD\",\n    \"NGN\",\n    \"PYG\",\n    \"PEN\",\n    \"PLN\",\n    \"RON\",\n    \"RSD\",\n    \"SGD\",\n    \"ZAR\",\n    \"LKR\",\n    \"SEK\",\n    \"CHF\",\n    \"TJS\",\n    \"THB\",\n    \"UYU\",\n  ],\n  // From https://xanpool.com/ fiat select dropdown\n  [PAYMENT_PROVIDER.XANPOOL]: [\"SGD\", \"HKD\", \"THB\", \"PHP\", \"INR\", \"IDR\", \"MYR\", \"AUD\", \"NZD\", \"KRW\"],\n  // https://help.mercuryo.io/en/articles/6121246-which-fiat-currencies-are-supported\n  // RUB / UAH currently not supported\n  [PAYMENT_PROVIDER.MERCURYO]: [\n    \"EUR\",\n    \"USD\",\n    \"GBP\",\n    \"TRY\",\n    \"JPY\",\n    \"BRL\",\n    \"NGN\",\n    \"VND\",\n    \"MXN\",\n    \"KRW\",\n    \"PLN\",\n    \"SEK\",\n    \"CHF\",\n    \"CAD\",\n    \"CZK\",\n    \"DKK\",\n    \"BGN\",\n    \"HKD\",\n    \"AUD\",\n    \"INR\",\n  ],\n  /**\n   * https://support.transak.com/hc/en-us/articles/360020615578-Credit-and-Debit-Card-Payments-through-Transak\n   * or\n   * https://transak.stoplight.io/docs/transak-docs/b3A6OTk1ODQ0-2-get-fiat-currencies\n   */\n  [PAYMENT_PROVIDER.TRANSAK]: [\n    \"ARS\",\n    \"AUD\",\n    \"BBD\",\n    \"BGN\",\n    \"BMD\",\n    \"BRL\",\n    \"CAD\",\n    \"CHF\",\n    \"CLP\",\n    \"CRC\",\n    \"CZK\",\n    \"DKK\",\n    \"DOP\",\n    \"EUR\",\n    \"FJD\",\n    \"FKP\",\n    \"GBP\",\n    \"GIP\",\n    \"HRK\",\n    \"HUF\",\n    \"IDR\",\n    \"ILS\",\n    \"ISK\",\n    \"JMD\",\n    \"JPY\",\n    \"KES\",\n    \"KRW\",\n    \"MDL\",\n    \"MXN\",\n    \"MYR\",\n    \"NOK\",\n    \"NZD\",\n    \"PEN\",\n    \"PHP\",\n    \"PLN\",\n    \"PYG\",\n    \"RON\",\n    \"SEK\",\n    \"SGD\",\n    \"THB\",\n    \"TRY\",\n    \"TZS\",\n    \"USD\",\n    \"ZAR\",\n  ],\n  [PAYMENT_PROVIDER.BANXA]: [\"AUD\", \"CAD\", \"CZK\", \"DKK\", \"EUR\", \"GBP\", \"HKD\", \"JPY\", \"NOK\", \"NZD\", \"NZD\", \"PLN\", \"RUB\", \"SEK\", \"SGD\", \"TRY\", \"USD\"],\n};\n\nconst cryptoCompareCurrenciesSet = new Set(CRYPTO_COMPARE_CURRENCIES);\n/**\n * Fiat currencies that we support\n */\nexport function supportedFiatCurrencies(provider) {\n  const providerSupportedFiatCurrencies = PROVIDER_SUPPORTED_FIAT_CURRENCIES[provider];\n  return providerSupportedFiatCurrencies.filter((currency) => cryptoCompareCurrenciesSet.has(currency));\n}\n","import { EMBED_TRANSLATION_ITEM, IPaymentProvider, LocaleLinks, PAYMENT_PROVIDER, SUPPORTED_PAYMENT_NETWORK, WALLET_VERIFIERS } from \"./interfaces\";\nimport { supportedFiatCurrencies } from \"./supportedCurrencies\";\n\nconst paymentProviders = {\n  [PAYMENT_PROVIDER.MOONPAY]: {\n    line1: \"Credit/ Debit Card/ Apple Pay\",\n    line2: \"4.5% or 5 USD\",\n    line3: \"2,000€/day, 10,000€/mo\",\n    supportPage: \"https://help.moonpay.io/en/\",\n    minOrderValue: 24.99,\n    maxOrderValue: 50_000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.MOONPAY),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"aave\", display: \"AAVE\" },\n        { value: \"bat\", display: \"BAT\" },\n        { value: \"dai\", display: \"DAI\" },\n        { value: \"eth\", display: \"ETH\" },\n        { value: \"mkr\", display: \"MKR\" },\n        { value: \"matic\", display: \"MATIC\" },\n        { value: \"usdt\", display: \"USDT\" },\n        { value: \"uni\", display: \"UNI\" },\n        { value: \"usdc\", display: \"USDC\" },\n        { value: \"weth\", display: \"WETH\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [\n        { value: \"eth_polygon\", display: \"ETH\" },\n        { value: \"matic_polygon\", display: \"MATIC\" },\n        { value: \"usdc_polygon\", display: \"USDC\" },\n        { value: \"usdt_polygon\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [\n        { value: \"bnb_bsc\", display: \"BNB\" },\n        { value: \"busd_bsc\", display: \"BUSD\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [\n        { value: \"avax_cchain\", display: \"AVAX\" },\n        { value: \"usdc_cchain\", display: \"USDC\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.ARBITRUM_MAINNET]: [\n        { value: \"eth_arbitrum\", display: \"ETH\" },\n        { value: \"usdc_arbitrum\", display: \"USDC\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.OPTIMISM_MAINNET]: [\n        { value: \"eth_optimism\", display: \"ETH\" },\n        { value: \"usdc_optimism\", display: \"USDC\" },\n      ],\n    },\n    includeFees: true,\n    api: true,\n    enforceMax: false,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.WYRE]: {\n    line1: \"Apple Pay/ Debit/ Credit Card\",\n    line2: \"4.9% + 30¢ or 5 USD\",\n    line3: \"$250/day\",\n    supportPage: \"https://support.sendwyre.com/en/\",\n    minOrderValue: 5,\n    maxOrderValue: 500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.WYRE),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"AAVE\", display: \"AAVE\" },\n        { value: \"COMP\", display: \"COMP\" },\n        { value: \"BAT\", display: \"BAT\" },\n        { value: \"BUSD\", display: \"BUSD\" },\n        { value: \"DAI\", display: \"DAI\" },\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"WBTC\", display: \"WBTC\" },\n        { value: \"MKR\", display: \"MKR\" },\n        { value: \"UNI\", display: \"UNI\" },\n        { value: \"WETH\", display: \"WETH\" },\n        { value: \"USDC\", display: \"USDC\" },\n        { value: \"USDT\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [\n        { value: \"mUSDC\", display: \"USDC\" },\n        { value: \"MATIC\", display: \"MATIC\" },\n        { value: \"MWETH\", display: \"WETH\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [\n        { value: \"AVAXC\", display: \"AVAX\" },\n        { value: \"AVAXCUSDC\", display: \"USDC\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [\n        { value: \"BNB\", display: \"BNB\" },\n        { value: \"BBUSD\", display: \"BUSD\" },\n      ],\n    },\n    includeFees: false,\n    api: true,\n    enforceMax: false,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.RAMPNETWORK]: {\n    line1: \"Debit Card/ <br>Apple Pay/ Bank transfer\",\n    line2: \"0.49% - 2.9%\",\n    line3: \"5,000€/purchase, 20,000€/mo\",\n    supportPage: \"https://instant.ramp.network/\",\n    minOrderValue: 50,\n    maxOrderValue: 20_000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.RAMPNETWORK),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"DAI\", display: \"DAI\" },\n        { value: \"BAT\", display: \"BAT\" },\n        { value: \"USDC\", display: \"USDC\" },\n        { value: \"USDT\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [\n        { value: \"MATIC_BAT\", display: \"BAT\" },\n        { value: \"MATIC_DAI\", display: \"DAI\" },\n        { value: \"MATIC_MATIC\", display: \"MATIC\" },\n        { value: \"MATIC_USDC\", display: \"USDC\" },\n        { value: \"MATIC_USDT\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [\n        { value: \"AVAX_AVAX\", display: \"AVAX\" },\n        { value: \"AVAX_USDC\", display: \"USDC\" },\n        { value: \"AVAX_USDT\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.ARBITRUM_MAINNET]: [\n        { value: \"ARBITRUM_ETH\", display: \"ETH\" },\n        { value: \"ARBITRUM_USDC.e\t\", display: \"USDC\" },\n        { value: \"ARBITRUM_USDT\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.OPTIMISM_MAINNET]: [\n        { value: \"OPTIMISM_DAI\", display: \"DAI\" },\n        { value: \"OPTIMISM_OPTIMISM\", display: \"OPTIMISM\" },\n        { value: \"OPTIMISM_USDC\", display: \"USDC\" },\n        { value: \"OPTIMISM_USDT\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [\n        { value: \"BSC_BNB\", display: \"BNB\" },\n        { value: \"BSC_BUSD\", display: \"BUSD\" },\n      ],\n    },\n    includeFees: true,\n    api: true,\n    receiveHint: \"walletTopUp.receiveHintRamp\",\n    enforceMax: false,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.XANPOOL]: {\n    line1: \"PayNow/ InstaPay/ FPS/ GoJekPay/ UPI/ PromptPay/ <br>ViettelPay/ DuitNow\",\n    line2: \"2.5% buying, 3% selling\",\n    line3: \"$2,500 / day\",\n    supportPage: \"mailto:support@xanpool.com\",\n    minOrderValue: 100,\n    maxOrderValue: 2500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.XANPOOL),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"USDT\", display: \"USDT\" },\n        { value: \"USDC\", display: \"USDC\" },\n      ],\n    },\n    includeFees: true,\n    api: true,\n    sell: true,\n    enforceMax: false,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.MERCURYO]: {\n    line1: \"Credit/ Debit Card/ Apple Pay\",\n    line2: \"3.95% or 4 USD\",\n    line3: \"10,000€/day, 25,000€/mo\",\n    supportPage: \"mailto:support@mercuryo.io\",\n    minOrderValue: 30,\n    maxOrderValue: 5000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.MERCURYO),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"BAT\", display: \"BAT\" },\n        { value: \"USDT\", display: \"USDT\" },\n        { value: \"DAI\", display: \"DAI\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [\n        { value: \"BNB\", display: \"BNB\" },\n        { value: \"BUSD\", display: \"BUSD\" },\n        { value: \"1INCH\", display: \"1INCH\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{ value: \"AVAX\", display: \"AVAX\" }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{ value: \"MATIC\", display: \"MATIC\" }],\n    },\n    includeFees: true,\n    api: true,\n    enforceMax: false,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.TRANSAK]: {\n    line1: \"Apple & Google Pay / Credit/Debit Card<br/>Bangkok Bank Mobile & iPay<br/>Bank Transfer (sepa/gbp) / SCB Mobile & Easy\",\n    line2: \"0.99% - 5.5% or 5 USD\",\n    line3: \"$5,000/day, $28,000/mo\",\n    supportPage: \"https://support.transak.com/hc/en-US\",\n    minOrderValue: 30,\n    maxOrderValue: 500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.TRANSAK),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"1INCH\", display: \"1INCH\" },\n        { value: \"BAT\", display: \"BAT\" },\n        { value: \"AAVE\", display: \"AAVE\" },\n        { value: \"DAI\", display: \"DAI\" },\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"USDC\", display: \"USDC\" },\n        { value: \"USDT\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [\n        { value: \"BAT\", display: \"BAT\" },\n        { value: \"AAVE\", display: \"AAVE\" },\n        { value: \"DAI\", display: \"DAI\" },\n        { value: \"MATIC\", display: \"MATIC\" },\n        { value: \"USDC\", display: \"USDC\" },\n        { value: \"USDT\", display: \"USDT\" },\n        { value: \"WETH\", display: \"WETH\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [\n        { value: \"BAT\", display: \"BAT\" },\n        { value: \"BNB\", display: \"BNB\" },\n        { value: \"BUSD\", display: \"BUSD\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{ value: \"AVAX\", display: \"AVAX\" }],\n      [SUPPORTED_PAYMENT_NETWORK.OPTIMISM_MAINNET]: [\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"USDC\", display: \"USDC\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.ARBITRUM_MAINNET]: [\n        { value: \"USDC\", display: \"USDC\" },\n        { value: \"ETH\", display: \"ETH\" },\n      ],\n    },\n    includeFees: true,\n    enforceMax: true,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.BANXA]: {\n    line1: \"Debit Card/ <br>Apple Pay/ Bank transfer\",\n    line2: \"0.49% - 2.9%\",\n    line3: \"5,000€/purchase, 20,000€/mo\",\n    supportPage: \"https://support.banxa.com\",\n    minOrderValue: 20,\n    maxOrderValue: 15_000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.BANXA),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"DAI\", display: \"DAI\" },\n        { value: \"MKR\", display: \"MKR\" },\n        { value: \"USDT\", display: \"USDT\" },\n        { value: \"BUSD\", display: \"BUSD\" },\n        { value: \"USDC\", display: \"USDC\" },\n        { value: \"BAT\", display: \"BAT\" },\n        { value: \"AAVE\", display: \"AAVE\" },\n        { value: \"COMP\", display: \"COMP\" },\n        { value: \"UNI\", display: \"UNI\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{ value: \"MATIC\", display: \"MATIC\" }],\n      // [BSC_MAINNET]: [{ value: 'BNB', display: 'BNB' }],\n    },\n    includeFees: true,\n    enforceMax: true,\n  },\n};\n\nconst translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\",\n    },\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\",\n    },\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\",\n    },\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\",\n    },\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\",\n    },\n  },\n} as LocaleLinks<{ embed: EMBED_TRANSLATION_ITEM }>;\n\nexport default {\n  supportedVerifierList: Object.values(WALLET_VERIFIERS),\n  paymentProviders,\n  api: \"https://api.tor.us\",\n  translations,\n  prodTorusUrl: \"\",\n  localStorageKeyPrefix: `torus-`,\n};\n","import { Stream } from \"pump\";\n\nexport const htmlToElement = <T extends Element>(html: string): T => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild as T;\n};\n\nexport const handleEvent = (handle: EventTarget, eventName: string, handler: (...args: unknown[]) => void, ...handlerArgs: unknown[]): void => {\n  const handlerWrapper = () => {\n    handler(...handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n  handle.addEventListener(eventName, handlerWrapper);\n};\n\nexport const handleStream = (handle: Stream, eventName: string, handler: (chunk: unknown) => void): void => {\n  const handlerWrapper = (chunk: unknown) => {\n    handler(chunk);\n    handle.removeListener(eventName, handlerWrapper);\n  };\n  handle.on(eventName, handlerWrapper);\n};\n","import loglevel from \"loglevel\";\n\nexport default loglevel.getLogger(\"torus-embed\");\n","export default {\n  errors: {\n    disconnected: (): string => \"Torus: Lost connection to Torus.\",\n    permanentlyDisconnected: (): string => \"Torus: Disconnected from iframe. Page reload required.\",\n    sendSiteMetadata: (): string => \"Torus: Failed to send site metadata. This is an internal error, please report this bug.\",\n    unsupportedSync: (method: string): string =>\n      `Torus: The Torus Ethereum provider does not support synchronous methods like ${method} without a callback parameter.`,\n    invalidDuplexStream: (): string => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: (maxEventListeners: number, shouldSendMetadata: boolean): string =>\n      `Invalid options. Received: { maxEventListeners: ${maxEventListeners}, shouldSendMetadata: ${shouldSendMetadata} }`,\n    invalidRequestArgs: (): string => `Expected a single, non-array, object argument.`,\n    invalidRequestMethod: (): string => `'args.method' must be a non-empty string.`,\n    invalidRequestParams: (): string => `'args.params' must be an object or array if provided.`,\n    invalidLoggerObject: (): string => `'args.logger' must be an object if provided.`,\n    invalidLoggerMethod: (method: string): string => `'args.logger' must include required method '${method}'.`,\n  },\n  info: {\n    connected: (chainId: string): string => `Torus: Connected to chain with ID \"${chainId}\".`,\n  },\n  warnings: {\n    // deprecated methods\n    enableDeprecation:\n      'Torus: \"\"ethereum.enable()\" is deprecated and may be removed in the future. ' +\n      'Please use \"ethereum.send(\"eth_requestAccounts\")\" instead. For more information, see: https://eips.ethereum.org/EIPS/eip-1102',\n    sendDeprecation:\n      'Torus: \"ethereum.send(...)\" is deprecated and may be removed in the future.' +\n      ' Please use \"ethereum.sendAsync(...)\" or \"ethereum.request(...)\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n    events: {\n      close:\n        'Torus: The event \"close\" is deprecated and may be removed in the future. Please use \"disconnect\" instead.' +\n        \"\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193\",\n      data:\n        'Torus: The event \"data\" is deprecated and will be removed in the future.' +\n        'Use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193#message',\n      networkChanged:\n        'Torus: The event \"networkChanged\" is deprecated and may be removed in the future.' +\n        ' Please use \"chainChanged\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n      notification:\n        'Torus: The event \"notification\" is deprecated and may be removed in the future. ' +\n        'Please use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n    },\n    publicConfigStore: 'Torus: The property \"publicConfigStore\" is deprecated and WILL be removed in the future.',\n  },\n};\n","import { SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\n\nexport class ObservableStore<T> extends SafeEventEmitter {\n  private _state: T;\n\n  constructor(initState: T) {\n    super();\n    if (initState === undefined) {\n      this._state = {} as unknown as T;\n    } else {\n      this._state = initState;\n    }\n  }\n\n  getState(): T {\n    return this._getState();\n  }\n\n  putState(newState: T): void {\n    this._putState(newState);\n    this.emit(\"update\", newState);\n  }\n\n  updateState(partialState: Partial<T>): void {\n    // if non-null object, merge\n    if (partialState && typeof partialState === \"object\") {\n      const state = this.getState();\n      this.putState({ ...state, ...partialState });\n      // if not object, use new value\n    } else {\n      this.putState(partialState as T);\n    }\n  }\n\n  subscribe(handler: (state: T) => void): void {\n    this.on(\"update\", handler);\n  }\n\n  unsubscribe(handler: (state: T) => void): void {\n    this.removeListener(\"update\", handler);\n  }\n\n  protected _getState(): T {\n    return this._state;\n  }\n\n  protected _putState(newState: T): void {\n    this._state = newState;\n  }\n}\n","import { _IWritable, Duplex as DuplexStream } from \"readable-stream\";\n\nimport { ObservableStore } from \"./ObservableStore\";\n\nclass ObservableStoreStream<T> extends DuplexStream {\n  handler: (state: T) => void;\n\n  obsStore: ObservableStore<T>;\n\n  constructor(obsStore: ObservableStore<T>) {\n    super({\n      // pass values, not serializations\n      objectMode: true,\n    });\n    // dont buffer outgoing updates\n    this.resume();\n    // save handler so we can unsubscribe later\n    this.handler = (state: T) => this.push(state);\n    // subscribe to obsStore changes\n    this.obsStore = obsStore;\n    this.obsStore.subscribe(this.handler);\n  }\n\n  // emit current state on new destination\n  pipe<U extends _IWritable>(dest: U, options?: { end?: boolean }): U {\n    const result = super.pipe(dest, options);\n    dest.write(this.obsStore.getState() as any);\n    return result;\n  }\n\n  // write from incoming stream to state\n  _write(chunk: any, _encoding: string, callback: (error?: Error | null) => void): void {\n    this.obsStore.putState(chunk);\n    callback();\n  }\n\n  // noop - outgoing stream is asking us if we have data we arent giving it\n  _read(_size: number): void {\n    return undefined;\n  }\n\n  // unsubscribe from event emitter\n  _destroy(err: Error | null, callback: (error: Error | null) => void): void {\n    this.obsStore.unsubscribe(this.handler);\n    super._destroy(err, callback);\n  }\n}\n\nexport function storeAsStream<T>(obsStore: ObservableStore<T>): ObservableStoreStream<T> {\n  return new ObservableStoreStream(obsStore);\n}\n","import { rpcErrors } from \"@metamask/rpc-errors\";\nimport { get } from \"@toruslabs/http-helpers\";\nimport { JRPCMiddleware, PendingJRPCResponse, SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\nimport { LogLevelDesc } from \"loglevel\";\n\nimport config from \"./config\";\nimport { IntegrityParams, PAYMENT_PROVIDER, PAYMENT_PROVIDER_TYPE, PaymentParams, TORUS_BUILD_ENV_TYPE } from \"./interfaces\";\nimport log from \"./loglevel\";\n\nconst { paymentProviders } = config;\n\ntype PaymentErrorParams = {\n  fiatValue?: string;\n  selectedCurrency?: string;\n  selectedCryptoCurrency?: string;\n};\n\ntype PaymentErrors = { provider?: string } & PaymentErrorParams;\n\nexport const validatePaymentProvider = (provider: string, params: PaymentParams): { errors: PaymentErrors; isValid: boolean } => {\n  const errors: PaymentErrors = {};\n\n  if (!provider) {\n    return { errors, isValid: true };\n  }\n\n  if (provider && !paymentProviders[provider]) {\n    errors.provider = \"Invalid Provider\";\n    return { errors, isValid: Object.keys(errors).length === 0 };\n  }\n\n  const selectedProvider = paymentProviders[provider as PAYMENT_PROVIDER_TYPE];\n  const selectedParams = params || {};\n\n  // set default values\n  // if (!selectedParams.selectedCurrency) [selectedParams.selectedCurrency] = selectedProvider.validCurrencies\n  // if (!selectedParams.fiatValue) selectedParams.fiatValue = selectedProvider.minOrderValue\n  // if (!selectedParams.selectedCryptoCurrency) [selectedParams.selectedCryptoCurrency] = selectedProvider.validCryptoCurrencies\n\n  // validations\n  if (selectedParams.fiatValue) {\n    const requestedOrderAmount = +parseFloat(selectedParams.fiatValue.toString()) || 0;\n    if (requestedOrderAmount < selectedProvider.minOrderValue) errors.fiatValue = \"Requested amount is lower than supported\";\n    if (requestedOrderAmount > selectedProvider.maxOrderValue && selectedProvider.enforceMax)\n      errors.fiatValue = \"Requested amount is higher than supported\";\n  }\n  if (selectedParams.selectedCurrency && !selectedProvider.validCurrencies.includes(selectedParams.selectedCurrency)) {\n    errors.selectedCurrency = \"Unsupported currency\";\n  }\n  if (selectedParams.selectedCryptoCurrency) {\n    const validCryptoCurrenciesByChain = Object.values(selectedProvider.validCryptoCurrenciesByChain)\n      .flat()\n      .map((currency) => currency.value);\n\n    const finalCryptoCurrency =\n      provider === PAYMENT_PROVIDER.MOONPAY ? selectedParams.selectedCryptoCurrency.toLowerCase() : selectedParams.selectedCryptoCurrency;\n\n    if (validCryptoCurrenciesByChain && !validCryptoCurrenciesByChain.includes(finalCryptoCurrency))\n      errors.selectedCryptoCurrency = \"Unsupported cryptoCurrency\";\n  }\n  return { errors, isValid: Object.keys(errors).length === 0 };\n};\n\n// utility functions\n\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\nexport function createErrorMiddleware(): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = rpcErrors.invalidRequest({\n        message: `The request 'method' must be a non-empty string.`,\n        data: { ...(req || {}), cause: \"The request 'method' must be a non-empty string.\" },\n      });\n    }\n\n    next((done) => {\n      const { error } = res;\n      if (!error) {\n        return done();\n      }\n      log.error(`MetaMask - RPC Error: ${error.message}`, error);\n      return done();\n    });\n  };\n}\n\n// resolve response.result or response, reject errors\nexport const getRpcPromiseCallback =\n  (resolve: (value?: any) => void, reject: (error?: Error) => void, unwrapResult = true) =>\n  (error: Error, response: PendingJRPCResponse<unknown>): void => {\n    if (error || response.error) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      reject(error || response.error);\n    } else {\n      resolve(!unwrapResult || Array.isArray(response) ? response : response.result);\n    }\n  };\n\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\nexport function logStreamDisconnectWarning(remoteLabel: string, error: Error, emitter: SafeEventEmitter): void {\n  let warningMsg = `MetaMask: Lost connection to \"${remoteLabel}\".`;\n  if (error?.stack) {\n    warningMsg += `\\n${error.stack}`;\n  }\n  log.warn(warningMsg);\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\n\nexport const getPreopenInstanceId = () => Math.random().toString(36).slice(2);\n\nexport const getTorusUrl = async (\n  buildEnv: TORUS_BUILD_ENV_TYPE,\n  integrity: IntegrityParams\n): Promise<{ torusUrl: string; logLevel: LogLevelDesc }> => {\n  let torusUrl: string;\n  let logLevel: LogLevelDesc;\n  // Do not change this line\n  const version = process.env.TORUS_EMBED_VERSION;\n  let versionUsed = integrity.version || version;\n  try {\n    if ((buildEnv === \"binance\" || buildEnv === \"production\") && !integrity.version) {\n      let response: { data: string };\n      if (!config.prodTorusUrl)\n        response = await get(`${config.api}/latestversion?name=@toruslabs/torus-embed&version=${version}`, {}, { useAPIKey: true });\n      else response = { data: config.prodTorusUrl };\n      versionUsed = response.data;\n      // eslint-disable-next-line require-atomic-updates\n      config.prodTorusUrl = response.data;\n    }\n  } catch (error) {\n    log.error(error, \"unable to fetch latest version\");\n  }\n  log.info(\"version used: \", versionUsed);\n  switch (buildEnv) {\n    case \"binance\":\n      torusUrl = `https://binance.tor.us/v${versionUsed}`;\n      logLevel = \"info\";\n      break;\n    case \"testing\":\n      torusUrl = \"https://testing.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"bnb\":\n      torusUrl = \"https://bnb.tor.us\";\n      logLevel = \"error\";\n      break;\n    case \"polygon\":\n      torusUrl = \"https://polygon.tor.us\";\n      logLevel = \"error\";\n      break;\n    case \"lrc\":\n      torusUrl = \"https://lrc.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"beta\":\n      torusUrl = \"https://beta.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"development\":\n      torusUrl = \"http://localhost:4050\";\n      logLevel = \"debug\";\n      break;\n    case \"alpha\":\n      torusUrl = \"https://alpha.tor.us\";\n      logLevel = \"debug\";\n      break;\n    default:\n      torusUrl = `https://app.tor.us/v${versionUsed}`;\n      logLevel = \"error\";\n      break;\n  }\n  return { torusUrl, logLevel };\n};\n\nexport const getUserLanguage = (): string => {\n  let userLanguage = window.navigator.language || \"en-US\";\n  const userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(config.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\n\nexport const EMITTED_NOTIFICATIONS = [\n  \"eth_subscription\", // per eth-json-rpc-filters/subscriptionManager\n];\n\nexport const NOOP = (): void => {\n  // empty function\n};\n\nexport const FEATURES_PROVIDER_CHANGE_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=660,width=375\";\nexport const FEATURES_DEFAULT_WALLET_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=740,width=1315\";\nexport const FEATURES_DEFAULT_POPUP_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=700,width=1200\";\nexport const FEATURES_CONFIRM_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=700,width=450\";\n\nexport function getPopupFeatures(): string {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n  const w = 1200;\n  const h = 700;\n\n  const width = window.innerWidth\n    ? window.innerWidth\n    : document.documentElement.clientWidth\n    ? document.documentElement.clientWidth\n    : window.screen.width;\n\n  const height = window.innerHeight\n    ? window.innerHeight\n    : document.documentElement.clientHeight\n    ? document.documentElement.clientHeight\n    : window.screen.height;\n\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\n","import { EthereumProviderError, rpcErrors } from \"@metamask/rpc-errors\";\nimport {\n  createIdRemapMiddleware,\n  createStreamMiddleware,\n  JRPCEngine,\n  JRPCRequest,\n  JRPCResponse,\n  JRPCSuccess,\n  ObjectMultiplex,\n  SafeEventEmitter,\n} from \"@toruslabs/openlogin-jrpc\";\nimport dequal from \"fast-deep-equal\";\nimport { duplex as isDuplexStream } from \"is-stream\";\nimport pump from \"pump\";\nimport type { Duplex } from \"readable-stream\";\n\nimport {\n  BaseProviderState,\n  JsonRpcConnection,\n  Maybe,\n  ProviderOptions,\n  PublicConfigState,\n  RequestArguments,\n  SendSyncJsonRpcRequest,\n  SentWarningsState,\n  UnvalidatedJsonRpcRequest,\n  WalletProviderState,\n} from \"./interfaces\";\nimport log from \"./loglevel\";\nimport messages from \"./messages\";\nimport { ObservableStore } from \"./ObservableStore\";\nimport { storeAsStream } from \"./ObservableStoreStream\";\nimport { createErrorMiddleware, EMITTED_NOTIFICATIONS, logStreamDisconnectWarning, NOOP } from \"./utils\";\n\nSafeEventEmitter.defaultMaxListeners = 100;\n\n// resolve response.result, reject errors\nconst getRpcPromiseCallback =\n  (resolve, reject, unwrapResult = true) =>\n  (error, response) => {\n    if (error || response.error) {\n      return reject(error || response.error);\n    }\n    return !unwrapResult || Array.isArray(response) ? resolve(response) : resolve(response.result);\n  };\n\nclass TorusInpageProvider extends SafeEventEmitter {\n  protected static _defaultState: BaseProviderState = {\n    accounts: null,\n    isConnected: false,\n    isUnlocked: false,\n    initialized: false,\n    isPermanentlyDisconnected: false,\n    hasEmittedConnection: false,\n  };\n\n  /**\n   * The chain ID of the currently connected Ethereum chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n  public chainId: string | null;\n\n  /**\n   * The user's currently selected Ethereum address.\n   * If null, MetaMask is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n  public selectedAddress: string | null;\n\n  _rpcEngine: JRPCEngine;\n\n  public networkVersion: string | null;\n\n  shouldSendMetadata: boolean;\n\n  /**\n   * Indicating that this provider is a MetaMask provider.\n   */\n  public readonly isTorus: true;\n\n  _publicConfigStore: ObservableStore<PublicConfigState>;\n\n  tryPreopenHandle: (payload: UnvalidatedJsonRpcRequest | UnvalidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => void;\n\n  enable: () => Promise<string[]>;\n\n  protected _state: BaseProviderState;\n\n  protected _jsonRpcConnection: JsonRpcConnection;\n\n  protected _sentWarnings: SentWarningsState = {\n    // methods\n    enable: false,\n    experimentalMethods: false,\n    send: false,\n    publicConfigStore: false,\n    // events\n    events: {\n      close: false,\n      data: false,\n      networkChanged: false,\n      notification: false,\n    },\n  };\n\n  constructor(\n    connectionStream: Duplex,\n    { maxEventListeners = 100, shouldSendMetadata = true, jsonRpcStreamName = \"provider\" }: ProviderOptions = {}\n  ) {\n    super();\n    if (!isDuplexStream(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n    this.isTorus = true;\n    this.setMaxListeners(maxEventListeners);\n\n    // private state\n    this._state = {\n      ...TorusInpageProvider._defaultState,\n    };\n\n    // public state\n    this.selectedAddress = null;\n    this.networkVersion = null;\n    this.chainId = null;\n    this.shouldSendMetadata = shouldSendMetadata;\n\n    // bind functions (to prevent e.g. web3@1.x from making unbound calls)\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this);\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n    this._sendSync = this._sendSync.bind(this);\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this._warnOfDeprecation = this._warnOfDeprecation.bind(this);\n    this._initializeState = this._initializeState.bind(this);\n\n    this.request = this.request.bind(this);\n    this.send = this.send.bind(this);\n    this.sendAsync = this.sendAsync.bind(this);\n    // this.enable = this.enable.bind(this);\n\n    // setup connectionStream multiplexing\n    const mux = new ObjectMultiplex();\n    pump(connectionStream, mux, connectionStream, this._handleStreamDisconnect.bind(this, \"MetaMask\"));\n\n    // subscribe to metamask public config (one-way)\n    this._publicConfigStore = new ObservableStore({ storageKey: \"Metamask-Config\" });\n\n    // handle isUnlocked changes, and chainChanged and networkChanged events\n    // this._publicConfigStore.subscribe((stringifiedState) => {\n    //   // This is because we are using store as string\n    //   const state = JSON.parse(stringifiedState as unknown as string);\n    //   if (\"isUnlocked\" in state && state.isUnlocked !== this._state.isUnlocked) {\n    //     this._state.isUnlocked = state.isUnlocked;\n    //     if (!this._state.isUnlocked) {\n    //       // accounts are never exposed when the extension is locked\n    //       this._handleAccountsChanged([]);\n    //     } else {\n    //       // this will get the exposed accounts, if any\n    //       try {\n    //         this._rpcRequest(\n    //           { method: \"eth_accounts\", params: [] },\n    //           NOOP,\n    //           true // indicating that eth_accounts _should_ update accounts\n    //         );\n    //       } catch (_) {\n    //         // Swallow error\n    //       }\n    //     }\n    //   }\n\n    //   if (\"selectedAddress\" in state && this.selectedAddress !== state.selectedAddress) {\n    //     try {\n    //       this._rpcRequest(\n    //         { method: \"eth_accounts\", params: [] },\n    //         NOOP,\n    //         true // indicating that eth_accounts _should_ update accounts\n    //       );\n    //     } catch (_) {\n    //       // Swallow error\n    //     }\n    //   }\n\n    //   // Emit chainChanged event on chain change\n    //   if (\"chainId\" in state && state.chainId !== this.chainId) {\n    //     this.chainId = state.chainId || null;\n    //     this.emit(\"chainChanged\", this.chainId);\n\n    //     // indicate that we've connected, for EIP-1193 compliance\n    //     // we do this here so that iframe can initialize\n    //     if (!this._state.hasEmittedConnection) {\n    //       this._handleConnect(this.chainId);\n    //       this._state.hasEmittedConnection = true;\n    //     }\n    //   }\n\n    //   // Emit networkChanged event on network change\n    //   if (\"networkVersion\" in state && state.networkVersion !== this.networkVersion) {\n    //     this.networkVersion = state.networkVersion || null;\n    //     this.emit(\"networkChanged\", this.networkVersion);\n    //   }\n    // });\n\n    pump(\n      mux.createStream(\"publicConfig\") as unknown as Duplex,\n      storeAsStream(this._publicConfigStore),\n      // RPC requests should still work if only this stream fails\n      logStreamDisconnectWarning.bind(this, \"MetaMask PublicConfigStore\")\n    );\n    // ignore phishing warning message (handled elsewhere)\n    mux.ignoreStream(\"phishing\");\n\n    // setup own event listeners\n\n    // EIP-1193 connect\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n\n    // connect to async provider\n\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(\n      jsonRpcConnection.stream,\n      mux.createStream(jsonRpcStreamName) as unknown as Duplex,\n      jsonRpcConnection.stream,\n      this._handleStreamDisconnect.bind(this, \"MetaMask RpcProvider\")\n    );\n\n    // handle RPC requests via dapp-side rpc engine\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this._rpcEngine = rpcEngine;\n\n    // json rpc notification listener\n    jsonRpcConnection.events.on(\"notification\", (payload) => {\n      const { method, params } = payload;\n      if (method === \"wallet_accountsChanged\") {\n        this._handleAccountsChanged(params);\n      } else if (method === \"wallet_unlockStateChanged\") {\n        this._handleUnlockStateChanged(params);\n      } else if (method === \"wallet_chainChanged\") {\n        this._handleChainChanged(params);\n      } else if (EMITTED_NOTIFICATIONS.includes(payload.method)) {\n        // EIP 1193 subscriptions, per eth-json-rpc-filters/subscriptionManager\n        this.emit(\"data\", payload); // deprecated\n        this.emit(\"notification\", params.result);\n        this.emit(\"message\", {\n          type: method,\n          data: params,\n        });\n      }\n\n      // Backward compatibility for older non EIP 1193 subscriptions\n      // this.emit('data', null, payload)\n    });\n  }\n\n  get publicConfigStore(): ObservableStore<PublicConfigState> {\n    if (!this._sentWarnings.publicConfigStore) {\n      log.warn(messages.warnings.publicConfigStore);\n      this._sentWarnings.publicConfigStore = true;\n    }\n    return this._publicConfigStore;\n  }\n\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n  isConnected(): boolean {\n    return this._state.isConnected;\n  }\n\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   *\n   * @param args - The RPC request arguments.\n   * @returns A Promise that resolves with the result of the RPC method,\n   * or rejects if an error is encountered.\n   */\n  async request<T>(args: RequestArguments): Promise<Maybe<T>> {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: { ...(args || {}), cause: messages.errors.invalidRequestArgs() },\n      });\n    }\n\n    const { method, params } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: { ...(args || {}), cause: messages.errors.invalidRequestArgs() },\n      });\n    }\n\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: { ...(args || {}), cause: messages.errors.invalidRequestArgs() },\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      this._rpcRequest({ method, params }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @param payload - The RPC request object.\n   * @param cb - The callback function.\n   */\n  sendAsync(payload: JRPCRequest<unknown>, callback: (error: Error | null, result?: JRPCResponse<unknown>) => void): void {\n    this._rpcRequest(payload, callback);\n  }\n\n  /**\n   * We override the following event methods so that we can warn consumers\n   * about deprecated events:\n   *   addListener, on, once, prependListener, prependOnceListener\n   */\n\n  addListener(eventName: string, listener: (...args: unknown[]) => void): this {\n    this._warnOfDeprecation(eventName);\n    return super.addListener(eventName, listener);\n  }\n\n  on(eventName: string, listener: (...args: unknown[]) => void): this {\n    this._warnOfDeprecation(eventName);\n    return super.on(eventName, listener);\n  }\n\n  once(eventName: string, listener: (...args: unknown[]) => void): this {\n    this._warnOfDeprecation(eventName);\n    return super.once(eventName, listener);\n  }\n\n  prependListener(eventName: string, listener: (...args: unknown[]) => void): this {\n    this._warnOfDeprecation(eventName);\n    return super.prependListener(eventName, listener);\n  }\n\n  prependOnceListener(eventName: string, listener: (...args: unknown[]) => void): this {\n    this._warnOfDeprecation(eventName);\n    return super.prependOnceListener(eventName, listener);\n  }\n\n  // Private Methods\n  //= ===================\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n  async _initializeState(): Promise<void> {\n    try {\n      const { accounts, chainId, isUnlocked, networkVersion } = (await this.request({\n        method: \"wallet_getProviderState\",\n      })) as WalletProviderState;\n\n      // indicate that we've connected, for EIP-1193 compliance\n      this.emit(\"connect\", { chainId });\n\n      this._handleChainChanged({ chainId, networkVersion });\n      this._handleUnlockStateChanged({ accounts, isUnlocked });\n      this._handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"MetaMask: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound.\n   *\n   * @param payload - The RPC request object.\n   * @param callback - The consumer's callback.\n   * @param isInternal - false - Whether the request is internal.\n   */\n  _rpcRequest(payload: UnvalidatedJsonRpcRequest | UnvalidatedJsonRpcRequest[], callback: (...args: any[]) => void, isInternal = false): void {\n    let cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n\n      if (_payload.method === \"eth_accounts\" || _payload.method === \"eth_requestAccounts\") {\n        // handle accounts changing\n        cb = (err: Error, res: JRPCSuccess<string[]>) => {\n          this._handleAccountsChanged(res.result || [], _payload.method === \"eth_accounts\", isInternal);\n          callback(err, res);\n        };\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this._rpcEngine.handle(payload as JRPCRequest<unknown>, cb);\n        return;\n      }\n    }\n    this.tryPreopenHandle(_payload, cb);\n  }\n\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   *\n   * @deprecated Use \"request\" instead.\n   * @param method - The method to request.\n   * @param params - Any params for the method.\n   * @returns A Promise that resolves with the JSON-RPC response object for the\n   * request.\n   */\n  send<T>(method: string, params?: T[]): Promise<JRPCResponse<T>>;\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @deprecated Use \"request\" instead.\n   * @param payload - A JSON-RPC request object.\n   * @param callback - An error-first callback that will receive the JSON-RPC\n   * response object.\n   */\n  send<T>(payload: JRPCRequest<unknown>, callback: (error: Error | null, result?: JRPCResponse<T>) => void): void;\n\n  /**\n   * Accepts a JSON-RPC request object, and synchronously returns the cached result\n   * for the given method. Only supports 4 specific RPC methods.\n   *\n   * @deprecated Use \"request\" instead.\n   * @param payload - A JSON-RPC request object.\n   * @returns A JSON-RPC response object.\n   */\n  send<T>(payload: SendSyncJsonRpcRequest): JRPCResponse<T>;\n\n  send(methodOrPayload: unknown, callbackOrArgs?: unknown): unknown {\n    if (!this._sentWarnings.send) {\n      log.warn(messages.warnings.sendDeprecation);\n      this._sentWarnings.send = true;\n    }\n    if (typeof methodOrPayload === \"string\" && (!callbackOrArgs || Array.isArray(callbackOrArgs))) {\n      return new Promise((resolve, reject) => {\n        try {\n          this._rpcRequest({ method: methodOrPayload, params: callbackOrArgs }, getRpcPromiseCallback(resolve, reject, false));\n        } catch (error) {\n          reject(error);\n        }\n      });\n    }\n    if (methodOrPayload && typeof methodOrPayload === \"object\" && typeof callbackOrArgs === \"function\") {\n      return this._rpcRequest(methodOrPayload as JRPCRequest<unknown>, callbackOrArgs as (...args: unknown[]) => void);\n    }\n    return this._sendSync(methodOrPayload as SendSyncJsonRpcRequest);\n  }\n\n  /**\n   * DEPRECATED.\n   * Internal backwards compatibility method, used in send.\n   */\n  _sendSync(payload: SendSyncJsonRpcRequest): JRPCSuccess<unknown> {\n    let result;\n    switch (payload.method) {\n      case \"eth_accounts\":\n        result = this.selectedAddress ? [this.selectedAddress] : [];\n        break;\n\n      case \"eth_coinbase\":\n        result = this.selectedAddress || null;\n        break;\n\n      case \"eth_uninstallFilter\":\n        this._rpcRequest(payload, NOOP);\n        result = true;\n        break;\n\n      case \"net_version\":\n        result = this.networkVersion || null;\n        break;\n\n      default:\n        throw new Error(messages.errors.unsupportedSync(payload.method));\n    }\n\n    return {\n      id: payload.id,\n      jsonrpc: payload.jsonrpc,\n      result,\n    };\n  }\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits MetaMaskInpageProvider#connect\n   */\n  protected _handleConnect(chainId: string): void {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", { chainId });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits MetaMaskInpageProvider#disconnect\n   */\n  protected _handleDisconnect(isRecoverable: boolean, errorMessage?: string): void {\n    if (this._state.isConnected || (!this._state.isPermanentlyDisconnected && !isRecoverable)) {\n      this._state.isConnected = false;\n\n      let error;\n      if (isRecoverable) {\n        error = new EthereumProviderError(\n          1013, // Try again later\n          errorMessage || messages.errors.disconnected()\n        );\n        log.debug(error);\n      } else {\n        error = new EthereumProviderError(\n          1011, // Internal error\n          errorMessage || messages.errors.permanentlyDisconnected()\n        );\n        log.error(error);\n        this.chainId = null;\n        this._state.accounts = null;\n        this.selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits MetamaskInpageProvider#disconnect\n   */\n  protected _handleStreamDisconnect(streamName: string, error: Error): void {\n    logStreamDisconnectWarning(streamName, error, this);\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n\n  /**\n   * Called when accounts may have changed.\n   */\n  protected _handleAccountsChanged(accounts: unknown[], isEthAccounts = false, isInternal = false): void {\n    // defensive programming\n    let finalAccounts = accounts;\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"MetaMask: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"MetaMask: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    }\n\n    // emit accountsChanged if anything about the accounts array has changed\n    if (!dequal(this._state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before eth_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n        log.error('MetaMask: \"eth_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n\n      this._state.accounts = finalAccounts as string[];\n      this.emit(\"accountsChanged\", finalAccounts);\n    }\n\n    // handle selectedAddress\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = (finalAccounts[0] as string) || null;\n    }\n  }\n\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits MetamaskInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n  protected _handleChainChanged({ chainId, networkVersion }: { chainId?: string; networkVersion?: string } = {}): void {\n    if (!chainId || !networkVersion) {\n      log.error(\"MetaMask: Received invalid network parameters. Please report this bug.\", { chainId, networkVersion });\n      return;\n    }\n\n    if (networkVersion === \"loading\") {\n      this._handleDisconnect(true);\n    } else {\n      this._handleConnect(chainId);\n\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n        if (this._state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n  protected _handleUnlockStateChanged({ accounts, isUnlocked }: { accounts?: string[]; isUnlocked?: boolean } = {}): void {\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"MetaMask: Received invalid isUnlocked parameter. Please report this bug.\", { isUnlocked });\n      return;\n    }\n\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n      this._handleAccountsChanged(accounts || []);\n    }\n  }\n\n  /**\n   * Warns of deprecation for the given event, if applicable.\n   */\n  protected _warnOfDeprecation(eventName: string): void {\n    if (this._sentWarnings.events[eventName] === false) {\n      log.warn(messages.warnings.events[eventName]);\n      this._sentWarnings.events[eventName] = true;\n    }\n  }\n}\n\nexport default TorusInpageProvider;\n","import { EventEmitter } from \"events\";\n\nimport { getPopupFeatures } from \"./utils\";\n\nclass PopupHandler extends EventEmitter {\n  url: URL;\n\n  target: string;\n\n  features: string;\n\n  window: Window;\n\n  windowTimer: number;\n\n  iClosedWindow: boolean;\n\n  constructor({ url, target, features }: { url: URL; target?: string; features?: string }) {\n    super();\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures();\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n    this._setupTimer();\n  }\n\n  _setupTimer(): void {\n    this.windowTimer = Number(\n      setInterval(() => {\n        if (this.window && this.window.closed) {\n          clearInterval(this.windowTimer);\n          if (!this.iClosedWindow) {\n            this.emit(\"close\");\n          }\n          this.iClosedWindow = false;\n          this.window = undefined;\n        }\n        if (this.window === undefined) clearInterval(this.windowTimer);\n      }, 500)\n    );\n  }\n\n  open(): void {\n    this.window = window.open(this.url.href, this.target, this.features);\n    if (this.window?.focus) this.window.focus();\n  }\n\n  close(): void {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n\n  redirect(locationReplaceOnRedirect: boolean): void {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n}\n\nexport default PopupHandler;\n","import { JRPCEngine } from \"@toruslabs/openlogin-jrpc\";\n\nimport log from \"./loglevel\";\nimport messages from \"./messages\";\nimport { getPreopenInstanceId, NOOP } from \"./utils\";\n\n/**\n * Returns whether the given image URL exists\n * @param url - the url of the image\n * @returns - whether the image exists\n */\nfunction imgExists(url: string): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n      img.onload = () => resolve(true);\n      img.onerror = () => resolve(false);\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\n/**\n * Extracts a name for the site from the DOM\n */\nconst getSiteName = (window: Window) => {\n  const { document } = window;\n\n  const siteName = document.querySelector<HTMLMetaElement>('head > meta[property=\"og:site_name\"]');\n  if (siteName) {\n    return siteName.content;\n  }\n\n  const metaTitle = document.querySelector<HTMLMetaElement>('head > meta[name=\"title\"]');\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n\n  return window.location.hostname;\n};\n\n/**\n * Extracts an icon for the site from the DOM\n */\nasync function getSiteIcon(window: Window): Promise<string | null> {\n  const { document } = window;\n\n  // Use the site's favicon if it exists\n  let icon = document.querySelector<HTMLLinkElement>('head > link[rel=\"shortcut icon\"]');\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  }\n\n  // Search through available icons in no particular order\n  icon = Array.from(document.querySelectorAll<HTMLLinkElement>('head > link[rel=\"icon\"]')).find((_icon) => Boolean(_icon.href));\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  }\n\n  return null;\n}\n\n/**\n * Gets site metadata and returns it\n *\n */\nconst getSiteMetadata = async () => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window),\n});\n\n/**\n * Sends site metadata over an RPC request.\n */\nexport default async function sendSiteMetadata(engine: JRPCEngine): Promise<void> {\n  try {\n    const domainMetadata = await getSiteMetadata();\n    // call engine.handle directly to avoid normal RPC request handling\n    engine.handle(\n      {\n        jsonrpc: \"2.0\",\n        id: getPreopenInstanceId(),\n        method: \"wallet_sendDomainMetadata\",\n        params: domainMetadata,\n      },\n      NOOP\n    );\n  } catch (error) {\n    log.error({\n      message: messages.errors.sendSiteMetadata(),\n      originalError: error,\n    });\n  }\n}\n","import { get, setAPIKey } from \"@toruslabs/http-helpers\";\nimport { BasePostMessageStream, JRPCRequest, ObjectMultiplex, setupMultiplex, Substream } from \"@toruslabs/openlogin-jrpc\";\nimport deepmerge from \"lodash.merge\";\n\nimport configuration from \"./config\";\nimport { handleStream, htmlToElement } from \"./embedUtils\";\nimport TorusInpageProvider from \"./inpage-provider\";\nimport {\n  BUTTON_POSITION,\n  BUTTON_POSITION_TYPE,\n  EMBED_TRANSLATION_ITEM,\n  NetworkInterface,\n  PAYMENT_PROVIDER_TYPE,\n  PaymentParams,\n  TORUS_BUILD_ENV,\n  TorusCtorArgs,\n  TorusLoginParams,\n  TorusParams,\n  TorusPublicKey,\n  UnvalidatedJsonRpcRequest,\n  UserInfo,\n  VerifierArgs,\n  WALLET_OPENLOGIN_VERIFIER_MAP,\n  WALLET_PATH,\n  WhiteLabelParams,\n} from \"./interfaces\";\nimport log from \"./loglevel\";\nimport PopupHandler from \"./PopupHandler\";\nimport sendSiteMetadata from \"./siteMetadata\";\nimport {\n  FEATURES_CONFIRM_WINDOW,\n  FEATURES_DEFAULT_WALLET_WINDOW,\n  FEATURES_PROVIDER_CHANGE_WINDOW,\n  getPreopenInstanceId,\n  getTorusUrl,\n  getUserLanguage,\n  validatePaymentProvider,\n} from \"./utils\";\n\nconst UNSAFE_METHODS = [\n  \"eth_sendTransaction\",\n  \"eth_signTypedData\",\n  \"eth_signTypedData_v3\",\n  \"eth_signTypedData_v4\",\n  \"personal_sign\",\n  \"eth_getEncryptionPublicKey\",\n  \"eth_decrypt\",\n  \"wallet_addEthereumChain\",\n  \"wallet_switchEthereumChain\",\n];\n\n// preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const torusIframeHtml = document.createElement(\"link\");\n    const { torusUrl } = await getTorusUrl(\"production\", { version: \"\" });\n    torusIframeHtml.href = `${torusUrl}/popup`;\n    torusIframeHtml.crossOrigin = \"anonymous\";\n    torusIframeHtml.type = \"text/html\";\n    torusIframeHtml.rel = \"prefetch\";\n    if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n      if (torusIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(torusIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\n\nclass Torus {\n  buttonPosition: BUTTON_POSITION_TYPE = BUTTON_POSITION.BOTTOM_LEFT;\n\n  buttonSize: number;\n\n  torusUrl: string;\n\n  torusIframe: HTMLIFrameElement;\n\n  styleLink: HTMLLinkElement;\n\n  isLoggedIn: boolean;\n\n  isInitialized: boolean;\n\n  torusWidgetVisibility: boolean;\n\n  torusAlert: HTMLDivElement;\n\n  apiKey: string;\n\n  modalZIndex: number;\n\n  alertZIndex: number;\n\n  torusAlertContainer: HTMLDivElement;\n\n  isIframeFullScreen: boolean;\n\n  whiteLabel: WhiteLabelParams;\n\n  requestedVerifier: string;\n\n  currentVerifier: string;\n\n  embedTranslations: EMBED_TRANSLATION_ITEM;\n\n  ethereum: TorusInpageProvider;\n\n  provider: TorusInpageProvider;\n\n  communicationMux: ObjectMultiplex;\n\n  isLoginCallback: () => void;\n\n  paymentProviders = configuration.paymentProviders;\n\n  private loginHint = \"\";\n\n  private useWalletConnect: boolean;\n\n  private isCustomLogin = false;\n\n  constructor({ buttonPosition = BUTTON_POSITION.BOTTOM_LEFT, buttonSize = 56, modalZIndex = 99999, apiKey = \"torus-default\" }: TorusCtorArgs = {}) {\n    this.buttonPosition = buttonPosition;\n    this.buttonSize = buttonSize;\n    this.torusUrl = \"\";\n    this.isLoggedIn = false; // ethereum.enable working\n    this.isInitialized = false; // init done\n    this.torusWidgetVisibility = true;\n    this.requestedVerifier = \"\";\n    this.currentVerifier = \"\";\n    this.apiKey = apiKey;\n    setAPIKey(apiKey);\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.isIframeFullScreen = false;\n  }\n\n  async init({\n    buildEnv = TORUS_BUILD_ENV.PRODUCTION,\n    enableLogging = false,\n    network = {\n      host: \"mainnet\",\n      chainId: null,\n      networkName: \"\",\n      blockExplorer: \"\",\n      ticker: \"\",\n      tickerName: \"\",\n    },\n    loginConfig = {},\n    showTorusButton = true,\n    integrity = {\n      version: \"\",\n    },\n    whiteLabel,\n    useWalletConnect = false,\n    mfaLevel = \"default\",\n  }: TorusParams = {}): Promise<void> {\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n    const { torusUrl, logLevel } = await getTorusUrl(buildEnv, integrity);\n    log.info(torusUrl, \"url loaded\");\n    this.torusUrl = torusUrl;\n    this.whiteLabel = whiteLabel;\n    this.useWalletConnect = useWalletConnect;\n    this.isCustomLogin = !!(loginConfig && Object.keys(loginConfig).length > 0) || !!(whiteLabel && Object.keys(whiteLabel).length > 0);\n\n    log.setDefaultLevel(logLevel);\n    if (enableLogging) log.enableAll();\n    else log.disableAll();\n    this.torusWidgetVisibility = showTorusButton;\n    const torusIframeUrl = new URL(torusUrl);\n    if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"popup\";\n    else torusIframeUrl.pathname += \"/popup\";\n\n    torusIframeUrl.hash = `#isCustomLogin=${this.isCustomLogin}`;\n\n    // Iframe code\n    this.torusIframe = htmlToElement<HTMLIFrameElement>(\n      `<iframe\n        id=\"torusIframe\"\n        allow=${useWalletConnect ? \"camera\" : \"\"}\n        class=\"torusIframe\"\n        src=\"${torusIframeUrl.href}\"\n        style=\"display: none; position: fixed; top: 0; right: 0; width: 100%; color-scheme: none;\n        height: 100%; border: none; border-radius: 0; z-index: ${this.modalZIndex}\"\n      ></iframe>`\n    );\n\n    this.torusAlertContainer = htmlToElement<HTMLDivElement>('<div id=\"torusAlertContainer\"></div>');\n    this.torusAlertContainer.style.display = \"none\";\n    this.torusAlertContainer.style.setProperty(\"z-index\", this.alertZIndex.toString());\n\n    const link = window.document.createElement(\"link\");\n    link.setAttribute(\"rel\", \"stylesheet\");\n    link.setAttribute(\"type\", \"text/css\");\n    link.setAttribute(\"href\", `${torusUrl}/css/widget.css`);\n    this.styleLink = link;\n\n    const { defaultLanguage = getUserLanguage(), customTranslations = {} } = this.whiteLabel || {};\n    const mergedTranslations = deepmerge(configuration.translations, customTranslations);\n    const languageTranslations = mergedTranslations[defaultLanguage] || configuration.translations[getUserLanguage()];\n    this.embedTranslations = languageTranslations.embed;\n\n    return new Promise((resolve, reject) => {\n      this.torusIframe.onload = async () => {\n        // only do this if iframe is not full screen\n        this._setupWeb3();\n        const initStream = this.communicationMux.getStream(\"init_stream\") as Substream;\n        initStream.on(\"data\", (chunk) => {\n          const { name, data, error } = chunk;\n          if (name === \"init_complete\" && data.success) {\n            // resolve promise\n            this.isInitialized = true;\n            this._displayIframe(this.isIframeFullScreen);\n            resolve(undefined);\n          } else if (error) {\n            reject(new Error(error));\n          }\n        });\n        initStream.write({\n          name: \"init_stream\",\n          data: {\n            loginConfig,\n            whiteLabel: this.whiteLabel,\n            buttonPosition: this.buttonPosition,\n            buttonSize: this.buttonSize,\n            torusWidgetVisibility: this.torusWidgetVisibility,\n            apiKey: this.apiKey,\n            network,\n            mfaLevel,\n          },\n        });\n      };\n      window.document.head.appendChild(this.styleLink);\n      window.document.body.appendChild(this.torusIframe);\n      window.document.body.appendChild(this.torusAlertContainer);\n    });\n  }\n\n  login({ verifier = \"\", login_hint: loginHint = \"\" }: TorusLoginParams = {}): Promise<string[]> {\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    this.requestedVerifier = verifier;\n    this.loginHint = loginHint;\n    return this.ethereum.enable();\n  }\n\n  logout(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (!this.isLoggedIn) {\n        reject(new Error(\"User has not logged in yet\"));\n        return;\n      }\n\n      const logOutStream = this.communicationMux.getStream(\"logout\") as Substream;\n      logOutStream.write({ name: \"logOut\" });\n      const statusStream = this.communicationMux.getStream(\"status\") as Substream;\n      const statusStreamHandler = (status) => {\n        if (!status.loggedIn) {\n          this.isLoggedIn = false;\n          this.currentVerifier = \"\";\n          this.requestedVerifier = \"\";\n          resolve();\n        } else reject(new Error(\"Some Error Occured\"));\n      };\n      handleStream(statusStream, \"data\", statusStreamHandler);\n    });\n  }\n\n  async cleanUp(): Promise<void> {\n    if (this.isLoggedIn) {\n      await this.logout();\n    }\n    this.clearInit();\n  }\n\n  clearInit(): void {\n    function isElement(element: unknown) {\n      return element instanceof Element || element instanceof HTMLDocument;\n    }\n    if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n      this.styleLink.remove();\n      this.styleLink = undefined;\n    }\n    if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n      this.torusIframe.remove();\n      this.torusIframe = undefined;\n    }\n    if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n      this.torusAlert = undefined;\n      this.torusAlertContainer.remove();\n      this.torusAlertContainer = undefined;\n    }\n    this.isInitialized = false;\n  }\n\n  hideTorusButton(): void {\n    this.torusWidgetVisibility = false;\n    this._sendWidgetVisibilityStatus(false);\n    this._displayIframe();\n  }\n\n  showTorusButton(): void {\n    this.torusWidgetVisibility = true;\n    this._sendWidgetVisibilityStatus(true);\n    this._displayIframe();\n  }\n\n  setProvider({ host = \"mainnet\", chainId = null, networkName = \"\", ...rest }: NetworkInterface): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const providerChangeStream = this.communicationMux.getStream(\"provider_change\") as Substream;\n      const handler = (chunk) => {\n        const { err, success } = chunk.data;\n        log.info(chunk);\n        if (err) {\n          reject(err);\n        } else if (success) {\n          resolve();\n        } else reject(new Error(\"some error occurred\"));\n      };\n      handleStream(providerChangeStream, \"data\", handler);\n      const preopenInstanceId = getPreopenInstanceId();\n      this._handleWindow(preopenInstanceId, {\n        target: \"_blank\",\n        features: FEATURES_PROVIDER_CHANGE_WINDOW,\n      });\n      providerChangeStream.write({\n        name: \"show_provider_change\",\n        data: {\n          network: {\n            host,\n            chainId,\n            networkName,\n            ...rest,\n          },\n          preopenInstanceId,\n          override: false,\n        },\n      });\n    });\n  }\n\n  showWallet(path: WALLET_PATH, params: Record<string, string> = {}): void {\n    const showWalletStream = this.communicationMux.getStream(\"show_wallet\") as Substream;\n    const finalPath = path ? `/${path}` : \"\";\n    showWalletStream.write({ name: \"show_wallet\", data: { path: finalPath } });\n\n    const showWalletHandler = (chunk) => {\n      if (chunk.name === \"show_wallet_instance\") {\n        // Let the error propogate up (hence, no try catch)\n        const { instanceId } = chunk.data;\n        const finalUrl = new URL(`${this.torusUrl}/wallet${finalPath}`);\n        // Using URL constructor to prevent js injection and allow parameter validation.!\n        finalUrl.searchParams.append(\"integrity\", \"true\");\n        finalUrl.searchParams.append(\"instanceId\", instanceId);\n        Object.keys(params).forEach((x) => {\n          finalUrl.searchParams.append(x, params[x]);\n        });\n        finalUrl.hash = `#isCustomLogin=${this.isCustomLogin}`;\n\n        const walletWindow = new PopupHandler({ url: finalUrl, features: FEATURES_DEFAULT_WALLET_WINDOW });\n        walletWindow.open();\n      }\n    };\n\n    handleStream(showWalletStream, \"data\", showWalletHandler);\n  }\n\n  async getPublicAddress({ verifier, verifierId, isExtended = false }: VerifierArgs): Promise<string | TorusPublicKey> {\n    if (!configuration.supportedVerifierList.includes(verifier) || !WALLET_OPENLOGIN_VERIFIER_MAP[verifier]) throw new Error(\"Unsupported verifier\");\n    const walletVerifier = verifier;\n    const openloginVerifier = WALLET_OPENLOGIN_VERIFIER_MAP[verifier];\n    const url = new URL(`https://api.tor.us/lookup/torus`);\n    url.searchParams.append(\"verifier\", openloginVerifier);\n    url.searchParams.append(\"verifierId\", verifierId);\n    url.searchParams.append(\"walletVerifier\", walletVerifier);\n    url.searchParams.append(\"network\", \"mainnet\");\n    url.searchParams.append(\"isExtended\", isExtended.toString());\n    return get(\n      url.href,\n      {\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        },\n      },\n      { useAPIKey: true }\n    );\n  }\n\n  getUserInfo(message: string): Promise<UserInfo> {\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const userInfoAccessStream = this.communicationMux.getStream(\"user_info_access\") as Substream;\n        userInfoAccessStream.write({ name: \"user_info_access_request\" });\n        const userInfoAccessHandler = (chunk) => {\n          const {\n            name,\n            data: { approved, payload, rejected, newRequest },\n          } = chunk;\n          if (name === \"user_info_access_response\") {\n            if (approved) {\n              resolve(payload);\n            } else if (rejected) {\n              reject(new Error(\"User rejected the request\"));\n            } else if (newRequest) {\n              const userInfoStream = this.communicationMux.getStream(\"user_info\") as Substream;\n              const userInfoHandler = (handlerChunk) => {\n                if (handlerChunk.name === \"user_info_response\") {\n                  if (handlerChunk.data.approved) {\n                    resolve(handlerChunk.data.payload);\n                  } else {\n                    reject(new Error(\"User rejected the request\"));\n                  }\n                }\n              };\n              handleStream(userInfoStream, \"data\", userInfoHandler);\n              const preopenInstanceId = getPreopenInstanceId();\n              this._handleWindow(preopenInstanceId, {\n                target: \"_blank\",\n                features: FEATURES_PROVIDER_CHANGE_WINDOW,\n              });\n              userInfoStream.write({ name: \"user_info_request\", data: { message, preopenInstanceId } });\n            }\n          }\n        };\n        handleStream(userInfoAccessStream, \"data\", userInfoAccessHandler);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n\n  initiateTopup(provider: PAYMENT_PROVIDER_TYPE, params: PaymentParams): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      if (this.isInitialized) {\n        const { errors, isValid } = validatePaymentProvider(provider, params);\n        if (!isValid) {\n          reject(new Error(JSON.stringify(errors)));\n          return;\n        }\n        const topupStream = this.communicationMux.getStream(\"topup\") as Substream;\n        const topupHandler = (chunk) => {\n          if (chunk.name === \"topup_response\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n          }\n        };\n        handleStream(topupStream, \"data\", topupHandler);\n        const preopenInstanceId = getPreopenInstanceId();\n        this._handleWindow(preopenInstanceId);\n        topupStream.write({ name: \"topup_request\", data: { provider, params, preopenInstanceId } });\n      } else reject(new Error(\"Torus is not initialized yet\"));\n    });\n  }\n\n  async loginWithPrivateKey(loginParams: { privateKey: string; userInfo: Omit<UserInfo, \"isNewUser\"> }): Promise<void> {\n    const { privateKey, userInfo } = loginParams;\n    return new Promise((resolve, reject) => {\n      if (this.isInitialized) {\n        if (Buffer.from(privateKey, \"hex\").length !== 32) {\n          reject(new Error(\"Invalid private key, Please provide a 32 byte valid secp25k1 private key\"));\n          return;\n        }\n        const loginPrivKeyStream = this.communicationMux.getStream(\"login_with_private_key\") as Substream;\n        const loginHandler = (chunk) => {\n          if (chunk.name === \"login_with_private_key_response\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n          }\n        };\n        handleStream(loginPrivKeyStream, \"data\", loginHandler);\n        loginPrivKeyStream.write({ name: \"login_with_private_key_request\", data: { privateKey, userInfo } });\n      } else reject(new Error(\"Torus is not initialized yet\"));\n    });\n  }\n\n  async showWalletConnectScanner(): Promise<void> {\n    if (!this.useWalletConnect) throw new Error(\"Set `useWalletConnect` as true in init function options to use wallet connect scanner\");\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const walletConnectStream = this.communicationMux.getStream(\"wallet_connect_stream\") as Substream;\n        const walletConnectHandler = (chunk) => {\n          if (chunk.name === \"wallet_connect_stream_res\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n            this._displayIframe();\n          }\n        };\n        handleStream(walletConnectStream, \"data\", walletConnectHandler);\n        walletConnectStream.write({ name: \"wallet_connect_stream_req\" });\n        this._displayIframe(true);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n\n  protected _handleWindow(preopenInstanceId: string, { url, target, features }: { url?: string; target?: string; features?: string } = {}): void {\n    if (preopenInstanceId) {\n      const windowStream = this.communicationMux.getStream(\"window\") as Substream;\n      const finalUrl = new URL(url || `${this.torusUrl}/redirect?preopenInstanceId=${preopenInstanceId}`);\n      if (finalUrl.hash) finalUrl.hash += `&isCustomLogin=${this.isCustomLogin}`;\n      else finalUrl.hash = `#isCustomLogin=${this.isCustomLogin}`;\n\n      const handledWindow = new PopupHandler({ url: finalUrl, target, features });\n      handledWindow.open();\n      if (!handledWindow.window) {\n        this._createPopupBlockAlert(preopenInstanceId, finalUrl.href);\n        return;\n      }\n      windowStream.write({\n        name: \"opened_window\",\n        data: {\n          preopenInstanceId,\n        },\n      });\n      const closeHandler = ({ preopenInstanceId: receivedId, close }) => {\n        if (receivedId === preopenInstanceId && close) {\n          handledWindow.close();\n          windowStream.removeListener(\"data\", closeHandler);\n        }\n      };\n      windowStream.on(\"data\", closeHandler);\n      handledWindow.once(\"close\", () => {\n        windowStream.write({\n          data: {\n            preopenInstanceId,\n            closed: true,\n          },\n        });\n        windowStream.removeListener(\"data\", closeHandler);\n      });\n    }\n  }\n\n  protected _setEmbedWhiteLabel(element: HTMLElement): void {\n    // Set whitelabel\n    const { theme } = this.whiteLabel || {};\n    if (theme) {\n      const { isDark = false, colors = {} } = theme;\n      if (isDark) element.classList.add(\"torus-dark\");\n\n      if (colors.torusBrand1) element.style.setProperty(\"--torus-brand-1\", colors.torusBrand1);\n      if (colors.torusGray2) element.style.setProperty(\"--torus-gray-2\", colors.torusGray2);\n    }\n  }\n\n  protected _getLogoUrl(): string {\n    let logoUrl = `${this.torusUrl}/images/torus_icon-blue.svg`;\n    if (this.whiteLabel?.theme?.isDark) {\n      logoUrl = this.whiteLabel?.logoLight || logoUrl;\n    } else {\n      logoUrl = this.whiteLabel?.logoDark || logoUrl;\n    }\n\n    return logoUrl;\n  }\n\n  protected _sendWidgetVisibilityStatus(status: boolean): void {\n    const torusWidgetVisibilityStream = this.communicationMux.getStream(\"torus-widget-visibility\") as Substream;\n    torusWidgetVisibilityStream.write({\n      data: status,\n    });\n  }\n\n  protected _displayIframe(isFull = false): void {\n    const style: Partial<CSSStyleDeclaration> = {};\n    const size = this.buttonSize + 14; // 15px padding\n    // set phase\n    if (!isFull) {\n      style.display = this.torusWidgetVisibility ? \"block\" : \"none\";\n      style.height = `${size}px`;\n      style.width = `${size}px`;\n      switch (this.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n    Object.assign(this.torusIframe.style, style);\n    this.isIframeFullScreen = isFull;\n  }\n\n  protected _setupWeb3(): void {\n    log.info(\"setupWeb3 running\");\n    // setup background connection\n    const metamaskStream = new BasePostMessageStream({\n      name: \"embed_metamask\",\n      target: \"iframe_metamask\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin,\n    });\n\n    // Due to compatibility reasons, we should not set up multiplexing on window.metamaskstream\n    // because the MetamaskInpageProvider also attempts to do so.\n    // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_comm\",\n      target: \"iframe_comm\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin,\n    });\n\n    // Backward compatibility with Gotchi :)\n    // window.metamaskStream = this.communicationStream\n\n    // compose the inpage provider\n    const inpageProvider = new TorusInpageProvider(metamaskStream);\n\n    // detect eth_requestAccounts and pipe to enable for now\n    const detectAccountRequestPrototypeModifier = (m) => {\n      const originalMethod = inpageProvider[m];\n      inpageProvider[m] = function providerFunc(method, ...args) {\n        if (method && method === \"eth_requestAccounts\") {\n          return inpageProvider.enable();\n        }\n        return originalMethod.apply(this, [method, ...args]);\n      };\n    };\n\n    detectAccountRequestPrototypeModifier(\"send\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n\n    inpageProvider.enable = () => {\n      return new Promise((resolve, reject) => {\n        // If user is already logged in, we assume they have given access to the website\n        inpageProvider.sendAsync({ jsonrpc: \"2.0\", id: getPreopenInstanceId(), method: \"eth_requestAccounts\", params: [] }, (err, response) => {\n          const { result: res } = (response as { result: unknown }) || {};\n          if (err) {\n            setTimeout(() => {\n              reject(err);\n            }, 50);\n          } else if (Array.isArray(res) && res.length > 0) {\n            // If user is already rehydrated, resolve this\n            // else wait for something to be written to status stream\n            const handleLoginCb = () => {\n              if (this.requestedVerifier !== \"\" && this.currentVerifier !== this.requestedVerifier) {\n                const { requestedVerifier } = this;\n                // eslint-disable-next-line promise/no-promise-in-callback\n                this.logout()\n                  // eslint-disable-next-line promise/always-return\n                  .then((_) => {\n                    this.requestedVerifier = requestedVerifier;\n                    this._showLoginPopup(true, resolve, reject);\n                  })\n                  .catch((error) => reject(error));\n              } else {\n                resolve(res);\n              }\n            };\n            if (this.isLoggedIn) {\n              handleLoginCb();\n            } else {\n              this.isLoginCallback = handleLoginCb;\n            }\n          } else {\n            // set up listener for login\n            this._showLoginPopup(true, resolve, reject);\n          }\n        });\n      });\n    };\n\n    inpageProvider.tryPreopenHandle = (payload: UnvalidatedJsonRpcRequest | UnvalidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => {\n      const _payload = payload;\n      if (!Array.isArray(_payload) && UNSAFE_METHODS.includes(_payload.method)) {\n        const preopenInstanceId = getPreopenInstanceId();\n        this._handleWindow(preopenInstanceId, {\n          target: \"_blank\",\n          features: FEATURES_CONFIRM_WINDOW,\n        });\n        _payload.preopenInstanceId = preopenInstanceId;\n      }\n      inpageProvider._rpcEngine.handle(_payload as JRPCRequest<unknown>[], cb);\n    };\n\n    // Work around for web3@1.0 deleting the bound `sendAsync` but not the unbound\n    // `sendAsync` method on the prototype, causing `this` reference issues with drizzle\n    const proxiedInpageProvider = new Proxy(inpageProvider, {\n      // straight up lie that we deleted the property so that it doesnt\n      // throw an error in strict mode\n      deleteProperty: () => true,\n    });\n\n    this.ethereum = proxiedInpageProvider;\n    const communicationMux = setupMultiplex(communicationStream);\n\n    this.communicationMux = communicationMux;\n\n    const windowStream = communicationMux.getStream(\"window\") as Substream;\n    windowStream.on(\"data\", (chunk) => {\n      if (chunk.name === \"create_window\") {\n        // url is the url we need to open\n        // we can pass the final url upfront so that it removes the step of redirecting to /redirect and waiting for finalUrl\n        this._createPopupBlockAlert(chunk.data.preopenInstanceId, chunk.data.url);\n      }\n    });\n\n    // show torus widget if button clicked\n    const widgetStream = communicationMux.getStream(\"widget\") as Substream;\n    widgetStream.on(\"data\", (chunk) => {\n      const { data } = chunk;\n      this._displayIframe(data);\n    });\n\n    // Show torus button if wallet has been hydrated/detected\n    const statusStream = communicationMux.getStream(\"status\") as Substream;\n    statusStream.on(\"data\", (status) => {\n      // login\n      if (status.loggedIn) {\n        this.isLoggedIn = status.loggedIn;\n        this.currentVerifier = status.verifier;\n      } // logout\n      else this._displayIframe();\n      if (this.isLoginCallback) {\n        this.isLoginCallback();\n        delete this.isLoginCallback;\n      }\n    });\n\n    this.provider = proxiedInpageProvider;\n\n    if (this.provider.shouldSendMetadata) sendSiteMetadata(this.provider._rpcEngine);\n    inpageProvider._initializeState();\n    log.debug(\"Torus - injected provider\");\n  }\n\n  protected _showLoginPopup(calledFromEmbed: boolean, resolve: (a: string[]) => void, reject: (err: Error) => void): void {\n    const loginHandler = (data) => {\n      const { err, selectedAddress } = data;\n      if (err) {\n        log.error(err);\n        if (reject) reject(err);\n      }\n      // returns an array (cause accounts expects it)\n      else if (resolve) resolve([selectedAddress]);\n      if (this.isIframeFullScreen) this._displayIframe();\n    };\n    const oauthStream = this.communicationMux.getStream(\"oauth\") as Substream;\n    if (!this.requestedVerifier) {\n      this._displayIframe(true);\n      handleStream(oauthStream, \"data\", loginHandler);\n      oauthStream.write({ name: \"oauth_modal\", data: { calledFromEmbed } });\n    } else {\n      handleStream(oauthStream, \"data\", loginHandler);\n      const preopenInstanceId = getPreopenInstanceId();\n      this._handleWindow(preopenInstanceId);\n      oauthStream.write({\n        name: \"oauth\",\n        data: { calledFromEmbed, verifier: this.requestedVerifier, preopenInstanceId, login_hint: this.loginHint },\n      });\n    }\n  }\n\n  protected _createPopupBlockAlert(preopenInstanceId: string, url: string): void {\n    const logoUrl = this._getLogoUrl();\n    const torusAlert = htmlToElement<HTMLDivElement>(\n      '<div id=\"torusAlert\" class=\"torus-alert--v2\">' +\n        `<div id=\"torusAlert__logo\"><img src=\"${logoUrl}\" /></div>` +\n        \"<div>\" +\n        `<h1 id=\"torusAlert__title\">${this.embedTranslations.actionRequired}</h1>` +\n        `<p id=\"torusAlert__desc\">${this.embedTranslations.pendingAction}</p>` +\n        \"</div>\" +\n        \"</div>\"\n    );\n\n    const successAlert = htmlToElement(`<div><a id=\"torusAlert__btn\">${this.embedTranslations.continue}</a></div>`);\n    const btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n    btnContainer.appendChild(successAlert);\n    torusAlert.appendChild(btnContainer);\n    this._setEmbedWhiteLabel(torusAlert);\n\n    this.torusAlertContainer.style.display = \"block\";\n    this.torusAlertContainer.appendChild(torusAlert);\n\n    successAlert.addEventListener(\"click\", () => {\n      this._handleWindow(preopenInstanceId, {\n        url,\n        target: \"_blank\",\n        features: FEATURES_CONFIRM_WINDOW,\n      });\n      torusAlert.remove();\n\n      if (this.torusAlertContainer.children.length === 0) this.torusAlertContainer.style.display = \"none\";\n    });\n  }\n}\n\nexport default Torus;\n"],"mappings":";;;;;;;;;;;;AAGO,MAAMA,gBAAgB,GAAG;EAC9BC,MAAM,EAAE,QAAQ;EAChBC,QAAQ,EAAE,UAAU;EACpBC,MAAM,EAAE,QAAQ;EAChBC,MAAM,EAAE,QAAQ;EAChBC,OAAO,EAAE,SAAS;EAClBC,kBAAkB,EAAE;;AAGf,MAAMC,6BAA6B,GAAG;EAC3C,CAACP,gBAAgB,CAACC,MAAM,GAAG,aAAa;EACxC,CAACD,gBAAgB,CAACE,QAAQ,GAAG,eAAe;EAC5C,CAACF,gBAAgB,CAACG,MAAM,GAAG,aAAa;EACxC,CAACH,gBAAgB,CAACI,MAAM,GAAG,aAAa;EACxC,CAACJ,gBAAgB,CAACK,OAAO,GAAG,cAAc;EAC1C,CAACL,gBAAgB,CAACM,kBAAkB,GAAG;;AAGlC,MAAME,gBAAgB,GAAG;EAC9BC,OAAO,EAAE,SAAS;EAClBC,IAAI,EAAE,MAAM;EACZC,WAAW,EAAE,aAAa;EAC1BC,OAAO,EAAE,SAAS;EAClBC,QAAQ,EAAE,UAAU;EACpBC,OAAO,EAAE,SAAS;EAClBC,KAAK,EAAE;;AAGF,MAAMC,yBAAyB,GAAG;EACvCC,OAAO,EAAE,SAAS;EAClBC,KAAK,EAAE,OAAO;EACdC,WAAW,EAAE,aAAa;EAC1BC,iBAAiB,EAAE,mBAAmB;EACtCC,IAAI,EAAE,MAAM;EACZC,gBAAgB,EAAE,kBAAkB;EACpCC,gBAAgB,EAAE;;AAGb,MAAMC,eAAe,GAAG;EAC7BC,UAAU,EAAE,YAAY;EACxBC,WAAW,EAAE,aAAa;EAC1BC,OAAO,EAAE,SAAS;EAClBC,OAAO,EAAE,SAAS;EAClBC,GAAG,EAAE,KAAK;EACVC,IAAI,EAAE,MAAM;EACZC,GAAG,EAAE,KAAK;EACVC,OAAO,EAAE,SAAS;EAClBC,KAAK,EAAE;;AAuBF,MAAMC,eAAe,GAAG;EAC7BC,WAAW,EAAE,aAAa;EAC1BC,QAAQ,EAAE,UAAU;EACpBC,YAAY,EAAE,cAAc;EAC5BC,SAAS,EAAE;;;AC5Eb;;;;;;AAMG;AACI,MAAMC,yBAAyB,GAAG,CACvkCAAkC,GAAG;EACzC;EACA;EACA,CAAChC,gBAAgB,CAACC,OAAO,GAAG,CAC1B,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACN;EACD;;;AAGG;EACH,CAACD,gBAAgB,CAACE,IAAI,GAAG,CACvB,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACN;EACD;EACA,CAACF,gBAAgB,CAACG,WAAW,GAAG,CAC9B,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}