{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { CHAIN_NAMESPACES } from '@web3auth/base';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nconst PLUGIN_NAMESPACES = _objectSpread(_objectSpread({}, CHAIN_NAMESPACES), {}, {\n  MULTICHAIN: \"multichain\"\n});\nexport { PLUGIN_NAMESPACES };","map":{"version":3,"names":["PLUGIN_NAMESPACES","_objectSpread","CHAIN_NAMESPACES","MULTICHAIN"],"sources":["/Users/Einpunk Community/Documents/Brownie/brownie_gamex_vault/node_modules/@web3auth/base-plugin/src/IPlugin.ts"],"sourcesContent":["import { CHAIN_NAMESPACES, IWeb3Auth, SafeEventEmitterProvider, UserInfo, WALLET_ADAPTER_TYPE } from \"@web3auth/base\";\n\nexport const PLUGIN_NAMESPACES = {\n  ...CHAIN_NAMESPACES,\n  MULTICHAIN: \"multichain\",\n} as const;\n\nexport type PluginNamespace = (typeof PLUGIN_NAMESPACES)[keyof typeof PLUGIN_NAMESPACES];\n\nexport interface IPlugin {\n  name: string;\n  SUPPORTED_ADAPTERS: WALLET_ADAPTER_TYPE[];\n  pluginNamespace: PluginNamespace;\n  initWithProvider(provider: SafeEventEmitterProvider, userInfo: UserInfo): Promise<void>;\n  initWithWeb3Auth(web3auth: IWeb3Auth): Promise<void>;\n  connect(): Promise<void>;\n  disconnect(): Promise<void>;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;MAEaA,iBAAiB,GAAAC,aAAA,CAAAA,aAAA,KACzBC,gBAAgB;EACnBC,UAAU,EAAE;AAAY,CAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}