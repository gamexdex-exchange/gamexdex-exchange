{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { SafeEventEmitter } from '@toruslabs/openlogin-jrpc';\nimport { OPENLOGIN_NETWORK } from '@toruslabs/openlogin-utils';\nimport { CustomError } from 'ts-custom-error';\nimport { post } from '@toruslabs/http-helpers';\nimport JwtDecode from 'jwt-decode';\nimport loglevel from 'loglevel';\nconst CHAIN_NAMESPACES = {\n  EIP155: \"eip155\",\n  SOLANA: \"solana\",\n  OTHER: \"other\"\n};\nconst ADAPTER_NAMESPACES = {\n  EIP155: \"eip155\",\n  SOLANA: \"solana\",\n  XRPL: \"xrpl\",\n  MULTICHAIN: \"multichain\"\n};\nconst getDefaultNetworkId = chainNamespace => {\n  if (chainNamespace === CHAIN_NAMESPACES.EIP155) {\n    return 1;\n  } else if (chainNamespace === CHAIN_NAMESPACES.SOLANA) {\n    return 1;\n  }\n  throw new Error(`Chain namespace ${chainNamespace} is not supported`);\n};\nconst getEvmChainConfig = chainId => {\n  const chainNamespace = CHAIN_NAMESPACES.EIP155;\n  if (chainId === 1) {\n    return {\n      chainNamespace,\n      chainId: \"0x1\",\n      rpcTarget: `https://rpc.ankr.com/eth`,\n      displayName: \"Ethereum Mainnet\",\n      blockExplorer: \"https://etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\",\n      decimals: 18\n    };\n  }\n  if (chainId === 5) {\n    return {\n      chainNamespace,\n      chainId: \"0x5\",\n      rpcTarget: `https://rpc.ankr.com/eth_goerli`,\n      displayName: \"Goerli Testnet\",\n      blockExplorer: \"https://goerli.etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\",\n      decimals: 18\n    };\n  }\n  if (chainId === 11155111) {\n    return {\n      chainNamespace,\n      chainId: \"0xaa36a7\",\n      rpcTarget: `https://rpc.ankr.com/eth_sepolia`,\n      displayName: \"Sepolia Testnet\",\n      blockExplorer: \"https://sepolia.etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\",\n      decimals: 18\n    };\n  }\n  if (chainId === 137) {\n    return {\n      chainNamespace,\n      chainId: \"0x89\",\n      rpcTarget: \"https://rpc.ankr.com/polygon\",\n      displayName: \"Polygon Mainnet\",\n      blockExplorer: \"https://polygonscan.com\",\n      ticker: \"MATIC\",\n      tickerName: \"Polygon\"\n    };\n  }\n  if (chainId === 80001) {\n    return {\n      chainNamespace,\n      chainId: \"0x13881\",\n      rpcTarget: \"https://rpc.ankr.com/polygon_mumbai\",\n      displayName: \"Polygon Mumbai Testnet\",\n      blockExplorer: \"https://mumbai.polygonscan.com/\",\n      ticker: \"MATIC\",\n      tickerName: \"Polygon\",\n      decimals: 18\n    };\n  }\n  if (chainId === 56) {\n    return {\n      chainNamespace,\n      chainId: \"0x38\",\n      rpcTarget: \"https://rpc.ankr.com/bsc\",\n      displayName: \"Binance SmartChain Mainnet\",\n      blockExplorer: \"https://bscscan.com\",\n      ticker: \"BNB\",\n      tickerName: \"Binance SmartChain\",\n      decimals: 18\n    };\n  }\n  if (chainId === 97) {\n    return {\n      chainNamespace,\n      chainId: \"0x61\",\n      rpcTarget: \"https://rpc.ankr.com/bsc_testnet_chapel\",\n      displayName: \"Binance SmartChain Testnet\",\n      blockExplorer: \"https://testnet.bscscan.com\",\n      ticker: \"BNB\",\n      tickerName: \"Binance SmartChain\",\n      decimals: 18\n    };\n  }\n  if (chainId === 25) {\n    return {\n      chainNamespace,\n      chainId: \"0x19\",\n      rpcTarget: \"https://rpc.cronos.org\",\n      displayName: \"Cronos Mainnet\",\n      blockExplorer: \"https://cronoscan.com/\",\n      ticker: \"CRO\",\n      tickerName: \"Cronos\"\n    };\n  }\n  if (chainId === 338) {\n    return {\n      chainNamespace,\n      chainId: \"0x152\",\n      rpcTarget: \"https://rpc-t3.cronos.org/\",\n      displayName: \"Cronos Testnet\",\n      blockExplorer: \"https://cronoscan.com/\",\n      ticker: \"CRO\",\n      tickerName: \"Cronos\",\n      decimals: 18\n    };\n  }\n  if (chainId === 8217) {\n    return {\n      chainNamespace,\n      chainId: \"0x2019\",\n      rpcTarget: \"https://public-node-api.klaytnapi.com/v1/cypress\",\n      displayName: \"Klaytn Mainnet\",\n      blockExplorer: \"https://scope.klaytn.com\",\n      ticker: \"KLAY\",\n      tickerName: \"Klaytn\",\n      decimals: 18\n    };\n  }\n  return null;\n};\nconst getSolanaChainConfig = chainId => {\n  const chainNamespace = CHAIN_NAMESPACES.SOLANA;\n  if (chainId === 1) {\n    return {\n      chainNamespace,\n      chainId: \"0x1\",\n      rpcTarget: \"https://rpc.ankr.com/solana\",\n      displayName: \"Solana Mainnet\",\n      blockExplorer: \"https://explorer.solana.com\",\n      ticker: \"SOL\",\n      tickerName: \"Solana\",\n      decimals: 9\n    };\n  } else if (chainId === 2) {\n    return {\n      chainNamespace,\n      chainId: \"0x2\",\n      rpcTarget: \"https://api.testnet.solana.com\",\n      displayName: \"Solana Testnet\",\n      blockExplorer: \"https://explorer.solana.com?cluster=testnet\",\n      ticker: \"SOL\",\n      tickerName: \"Solana\",\n      decimals: 9\n    };\n  } else if (chainId === 3) {\n    return {\n      chainNamespace,\n      chainId: \"0x3\",\n      rpcTarget: \"https://api.devnet.solana.com\",\n      displayName: \"Solana Devnet\",\n      blockExplorer: \"https://explorer.solana.com?cluster=devnet\",\n      ticker: \"SOL\",\n      tickerName: \"Solana\",\n      decimals: 9\n    };\n  }\n  return null;\n};\nconst getChainConfig = (chainNamespace, chainId) => {\n  if (chainNamespace === CHAIN_NAMESPACES.OTHER) return null;\n  const finalChainId = chainId ? typeof chainId === \"number\" ? chainId : parseInt(chainId, 16) : getDefaultNetworkId(chainNamespace);\n  if (chainNamespace === CHAIN_NAMESPACES.EIP155) {\n    return getEvmChainConfig(finalChainId);\n  } else if (chainNamespace === CHAIN_NAMESPACES.SOLANA) {\n    return getSolanaChainConfig(finalChainId);\n  }\n  return null;\n};\nclass Web3AuthError extends CustomError {\n  constructor(code, message) {\n    // takes care of stack and proto\n    super(message);\n    _defineProperty(this, \"code\", void 0);\n    _defineProperty(this, \"message\", void 0);\n    this.code = code;\n    this.message = message || \"\";\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", {\n      value: \"Web3AuthError\"\n    });\n  }\n  toJSON() {\n    return {\n      name: this.name,\n      code: this.code,\n      message: this.message\n    };\n  }\n  toString() {\n    return JSON.stringify(this.toJSON());\n  }\n}\nclass WalletInitializationError extends Web3AuthError {\n  constructor(code, message) {\n    // takes care of stack and proto\n    super(code, message);\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", {\n      value: \"WalletInitializationError\"\n    });\n  }\n  static fromCode(code) {\n    let extraMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    return new WalletInitializationError(code, `${WalletInitializationError.messages[code]}, ${extraMessage}`);\n  }\n  // Custom methods\n  static notFound() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5001, extraMessage);\n  }\n  static notInstalled() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5002, extraMessage);\n  }\n  static notReady() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5003, extraMessage);\n  }\n  static windowBlocked() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5004, extraMessage);\n  }\n  static windowClosed() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5005, extraMessage);\n  }\n  static incompatibleChainNameSpace() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5006, extraMessage);\n  }\n  static duplicateAdapterError() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5007, extraMessage);\n  }\n  static invalidProviderConfigError() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5008, extraMessage);\n  }\n  static providerNotReadyError() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5009, extraMessage);\n  }\n  static rpcConnectionError() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5010, extraMessage);\n  }\n  static invalidParams() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5011, extraMessage);\n  }\n  static invalidNetwork() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5013, extraMessage);\n  }\n}\n/**\n * wallet login errors\n */\n_defineProperty(WalletInitializationError, \"messages\", {\n  5000: \"Custom\",\n  5001: \"Wallet is not found\",\n  5002: \"Wallet is not installed\",\n  5003: \"Wallet is not ready yet\",\n  5004: \"Wallet window is blocked\",\n  5005: \"Wallet window has been closed by the user\",\n  5006: \"Incompatible chain namespace provided\",\n  5007: \"Adapter has already been included\",\n  5008: \"Invalid provider Config\",\n  5009: \"Provider is not ready yet\",\n  5010: \"Failed to connect with rpc url\",\n  5011: \"Invalid params passed in\",\n  5013: \"Invalid network provided\"\n});\nclass WalletLoginError extends Web3AuthError {\n  constructor(code, message) {\n    // takes care of stack and proto\n    super(code, message);\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", {\n      value: \"WalletLoginError\"\n    });\n  }\n  static fromCode(code) {\n    let extraMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    return new WalletLoginError(code, `${WalletLoginError.messages[code]}. ${extraMessage}`);\n  }\n  static connectionError() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletLoginError.fromCode(5111, extraMessage);\n  }\n  static disconnectionError() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletLoginError.fromCode(5112, extraMessage);\n  }\n  static notConnectedError() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletLoginError.fromCode(5113, extraMessage);\n  }\n  static popupClosed() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletLoginError.fromCode(5114, extraMessage);\n  }\n  static mfaEnabled() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletLoginError.fromCode(5115, extraMessage);\n  }\n  static chainConfigNotAdded() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletLoginError.fromCode(5116, extraMessage);\n  }\n  static unsupportedOperation() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletLoginError.fromCode(5117, extraMessage);\n  }\n  static coreKitKeyNotFound() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletLoginError.fromCode(5118, extraMessage);\n  }\n  static userNotLoggedIn() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletLoginError.fromCode(5119, extraMessage);\n  }\n}\n_defineProperty(WalletLoginError, \"messages\", {\n  5000: \"Custom\",\n  5111: \"Failed to connect with wallet\",\n  5112: \"Failed to disconnect from wallet\",\n  5113: \"Wallet is not connected\",\n  5114: \"Wallet popup has been closed by the user\",\n  5115: \"User has already enabled mfa, please use the @web3auth/web3auth-web sdk for login with mfa\",\n  5116: \"Chain config has not been added. Please add the chain config before calling switchChain\",\n  5117: \"Unsupported operation\",\n  5118: \"useCoreKitKey flag is enabled but coreKitKey is not available\",\n  5119: \"User not logged in.\"\n});\nclass WalletOperationsError extends Web3AuthError {\n  constructor(code, message) {\n    // takes care of stack and proto\n    super(code, message);\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", {\n      value: \"WalletOperationsError\"\n    });\n  }\n  static fromCode(code) {\n    let extraMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    return new WalletOperationsError(code, `${WalletOperationsError.messages[code]}, ${extraMessage}`);\n  }\n  // Custom methods\n  static chainIDNotAllowed() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletOperationsError.fromCode(5201, extraMessage);\n  }\n  static operationNotAllowed() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletOperationsError.fromCode(5202, extraMessage);\n  }\n  static chainNamespaceNotAllowed() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletOperationsError.fromCode(5203, extraMessage);\n  }\n}\n_defineProperty(WalletOperationsError, \"messages\", {\n  5000: \"Custom\",\n  5201: \"Provided chainId is not allowed\",\n  5202: \"This operation is not allowed\"\n});\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nconst MULTI_CHAIN_ADAPTERS = {\n  OPENLOGIN: \"openlogin\",\n  WALLET_CONNECT_V1: \"wallet-connect-v1\",\n  WALLET_CONNECT_V2: \"wallet-connect-v2\"\n};\nconst SOLANA_ADAPTERS = _objectSpread$1({\n  TORUS_SOLANA: \"torus-solana\",\n  PHANTOM: \"phantom\",\n  SOLFLARE: \"solflare\",\n  SLOPE: \"slope\"\n}, MULTI_CHAIN_ADAPTERS);\nconst EVM_ADAPTERS = _objectSpread$1({\n  TORUS_EVM: \"torus-evm\",\n  METAMASK: \"metamask\",\n  COINBASE: \"coinbase\"\n}, MULTI_CHAIN_ADAPTERS);\nconst WALLET_ADAPTERS = _objectSpread$1(_objectSpread$1({}, EVM_ADAPTERS), SOLANA_ADAPTERS);\nconst ADAPTER_NAMES = {\n  [MULTI_CHAIN_ADAPTERS.OPENLOGIN]: \"OpenLogin\",\n  [MULTI_CHAIN_ADAPTERS.WALLET_CONNECT_V1]: \"Wallet Connect v1\",\n  [MULTI_CHAIN_ADAPTERS.WALLET_CONNECT_V2]: \"Wallet Connect v2\",\n  [SOLANA_ADAPTERS.TORUS_SOLANA]: \"Torus\",\n  [SOLANA_ADAPTERS.PHANTOM]: \"Phantom\",\n  [SOLANA_ADAPTERS.SOLFLARE]: \"Solflare\",\n  [SOLANA_ADAPTERS.SLOPE]: \"Slope\",\n  [EVM_ADAPTERS.TORUS_EVM]: \"Torus\",\n  [EVM_ADAPTERS.METAMASK]: \"Metamask\",\n  [EVM_ADAPTERS.COINBASE]: \"Coinbase\"\n};\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nconst ADAPTER_CATEGORY = {\n  EXTERNAL: \"external\",\n  IN_APP: \"in_app\"\n};\nconst ADAPTER_STATUS = {\n  NOT_READY: \"not_ready\",\n  READY: \"ready\",\n  CONNECTING: \"connecting\",\n  CONNECTED: \"connected\",\n  DISCONNECTED: \"disconnected\",\n  ERRORED: \"errored\"\n};\nconst ADAPTER_EVENTS = _objectSpread(_objectSpread({}, ADAPTER_STATUS), {}, {\n  ADAPTER_DATA_UPDATED: \"adapter_data_updated\",\n  CACHE_CLEAR: \"cache_clear\"\n});\nclass BaseAdapter extends SafeEventEmitter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n    _defineProperty(this, \"adapterData\", {});\n    _defineProperty(this, \"sessionTime\", 86400);\n    _defineProperty(this, \"clientId\", void 0);\n    _defineProperty(this, \"web3AuthNetwork\", OPENLOGIN_NETWORK.MAINNET);\n    _defineProperty(this, \"rehydrated\", false);\n    // should be added in constructor or from setAdapterSettings function\n    // before calling init function.\n    _defineProperty(this, \"chainConfig\", null);\n    _defineProperty(this, \"knownChainConfigs\", {});\n    this.setAdapterSettings(options);\n  }\n  get chainConfigProxy() {\n    return this.chainConfig ? _objectSpread({}, this.chainConfig) : null;\n  }\n  get connnected() {\n    return this.status === ADAPTER_STATUS.CONNECTED;\n  }\n  setAdapterSettings(options) {\n    if (this.status === ADAPTER_STATUS.READY) return;\n    if (options !== null && options !== void 0 && options.sessionTime) {\n      this.sessionTime = options.sessionTime;\n    }\n    if (options !== null && options !== void 0 && options.clientId) {\n      this.clientId = options.clientId;\n    }\n    if (options !== null && options !== void 0 && options.web3AuthNetwork) {\n      this.web3AuthNetwork = options.web3AuthNetwork;\n    }\n    const customChainConfig = options.chainConfig;\n    if (customChainConfig) {\n      if (!customChainConfig.chainNamespace) throw WalletInitializationError.notReady(\"ChainNamespace is required while setting chainConfig\");\n      this.currentChainNamespace = customChainConfig.chainNamespace;\n      // chainId is optional in this function.\n      // we go with mainnet chainId by default.\n      const defaultChainConfig = getChainConfig(customChainConfig.chainNamespace, customChainConfig.chainId);\n      // NOTE: It is being forced casted to CustomChainConfig to handle OTHER Chainnamespace\n      // where chainConfig is not required.\n      const finalChainConfig = _objectSpread(_objectSpread({}, defaultChainConfig || {}), customChainConfig);\n      this.chainConfig = finalChainConfig;\n      this.addChainConfig(finalChainConfig);\n    }\n  }\n  checkConnectionRequirements() {\n    // we reconnect without killing existing wallet connect session on calling connect again.\n    if ((this.name === WALLET_ADAPTERS.WALLET_CONNECT_V1 || this.name === WALLET_ADAPTERS.WALLET_CONNECT_V2) && this.status === ADAPTER_STATUS.CONNECTING) return;else if (this.status === ADAPTER_STATUS.CONNECTING) throw WalletInitializationError.notReady(\"Already connecting\");\n    if (this.status === ADAPTER_STATUS.CONNECTED) throw WalletLoginError.connectionError(\"Already connected\");\n    if (this.status !== ADAPTER_STATUS.READY) throw WalletLoginError.connectionError(\"Wallet adapter is not ready yet, Please wait for init function to resolve before calling connect/connectTo function\");\n  }\n  checkInitializationRequirements() {\n    if (!this.clientId) throw WalletInitializationError.invalidParams(\"Please initialize Web3Auth with a valid clientId in constructor\");\n    if (!this.chainConfig) throw WalletInitializationError.invalidParams(\"rpcTarget is required in chainConfig\");\n    if (!this.chainConfig.rpcTarget && this.chainConfig.chainNamespace !== CHAIN_NAMESPACES.OTHER) {\n      throw WalletInitializationError.invalidParams(\"rpcTarget is required in chainConfig\");\n    }\n    if (!this.chainConfig.chainId && this.chainConfig.chainNamespace !== CHAIN_NAMESPACES.OTHER) {\n      throw WalletInitializationError.invalidParams(\"chainID is required in chainConfig\");\n    }\n    if (this.status === ADAPTER_STATUS.NOT_READY) return;\n    if (this.status === ADAPTER_STATUS.CONNECTED) throw WalletInitializationError.notReady(\"Already connected\");\n    if (this.status === ADAPTER_STATUS.READY) throw WalletInitializationError.notReady(\"Adapter is already initialized\");\n  }\n  checkDisconnectionRequirements() {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.disconnectionError(\"Not connected with wallet\");\n  }\n  checkAddChainRequirements(chainConfig) {\n    let init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (!init && !this.provider) throw WalletLoginError.notConnectedError(\"Not connected with wallet.\");\n    if (this.currentChainNamespace !== chainConfig.chainNamespace) {\n      throw WalletOperationsError.chainNamespaceNotAllowed(\"This adapter doesn't support this chainNamespace\");\n    }\n  }\n  checkSwitchChainRequirements(_ref) {\n    let {\n      chainId\n    } = _ref;\n    let init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (!init && !this.provider) throw WalletLoginError.notConnectedError(\"Not connected with wallet.\");\n    if (!this.knownChainConfigs[chainId]) throw WalletLoginError.chainConfigNotAdded(\"Invalid chainId\");\n  }\n  updateAdapterData(data) {\n    this.adapterData = data;\n    this.emit(ADAPTER_EVENTS.ADAPTER_DATA_UPDATED, {\n      adapterName: this.name,\n      data\n    });\n  }\n  addChainConfig(chainConfig) {\n    const currentConfig = this.knownChainConfigs[chainConfig.chainId];\n    this.knownChainConfigs[chainConfig.chainId] = _objectSpread(_objectSpread({}, currentConfig || {}), chainConfig);\n  }\n  getChainConfig(chainId) {\n    return this.knownChainConfigs[chainId] || null;\n  }\n}\nclass BaseNetworkSwitch {}\nconst authServer = \"https://authjs.web3auth.io\";\nvar log = loglevel.getLogger(\"web3auth-logger\");\nfunction storageAvailable(type) {\n  let storageExists = false;\n  let storageLength = 0;\n  let storage;\n  try {\n    storage = window[type];\n    storageExists = true;\n    storageLength = storage.length;\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (error) {\n    const _error = error;\n    return !!(_error && (\n    // everything except Firefox\n    _error.code === 22 ||\n    // Firefox\n    _error.code === 1014 ||\n    // test name field too, because code might not be present\n    // everything except Firefox\n    _error.name === \"QuotaExceededError\" ||\n    // Firefox\n    _error.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n    // acknowledge QuotaExceededError only if there's something already stored\n    storageExists && storageLength !== 0);\n  }\n}\nconst isHexStrict = hex => {\n  return (typeof hex === \"string\" || typeof hex === \"number\") && /^(-)?0x[0-9a-f]*$/i.test(hex);\n};\nconst checkIfTokenIsExpired = token => {\n  const decoded = JwtDecode(token);\n  if (!decoded.exp) {\n    return true;\n  }\n  if (decoded.exp < Math.floor(Date.now() / 1000)) {\n    return true;\n  }\n  return false;\n};\nconst signChallenge = async (payload, chainNamespace) => {\n  const t = chainNamespace === \"solana\" ? \"sip99\" : \"eip191\";\n  const header = {\n    t\n  };\n  const network = chainNamespace === \"solana\" ? \"solana\" : \"ethereum\";\n  const data = {\n    payload,\n    header,\n    network\n  };\n  const res = await post(`${authServer}/siww/get`, data);\n  if (!res.success) {\n    throw new Error(\"Failed to authenticate user, Please reach out to Web3Auth Support team\");\n  }\n  return res.challenge;\n};\nconst verifySignedChallenge = async (chainNamespace, signedMessage, challenge, issuer, sessionTime, clientId, web3AuthNetwork) => {\n  const t = chainNamespace === \"solana\" ? \"sip99\" : \"eip191\";\n  const sigData = {\n    signature: {\n      s: signedMessage,\n      t\n    },\n    message: challenge,\n    issuer,\n    audience: window.location.hostname,\n    timeout: sessionTime\n  };\n  const idTokenRes = await post(`${authServer}/siww/verify`, sigData, {\n    headers: {\n      client_id: clientId,\n      wallet_provider: issuer,\n      web3auth_network: web3AuthNetwork\n    }\n  });\n  if (!idTokenRes.success) {\n    log.error(\"Failed to authenticate user, ,message verification failed\", idTokenRes.error);\n    throw new Error(\"Failed to authenticate user, ,message verification failed\");\n  }\n  return idTokenRes.token;\n};\nconst getSavedToken = (userAddress, issuer) => {\n  if (storageAvailable(\"localStorage\")) {\n    return localStorage.getItem(`${userAddress.toLowerCase()}_${issuer}`);\n  }\n  return null;\n};\nconst saveToken = (userAddress, issuer, token) => {\n  if (storageAvailable(\"localStorage\")) {\n    return localStorage.setItem(`${userAddress.toLowerCase()}_${issuer}`, token);\n  }\n  return null;\n};\nconst clearToken = (userAddress, issuer) => {\n  if (storageAvailable(\"localStorage\")) {\n    return localStorage.removeItem(`${userAddress.toLowerCase()}_${issuer}`);\n  }\n  return null;\n};\nconst PROVIDER_EVENTS = {\n  INITIALIZED: \"initialized\",\n  ERRORED: \"errored\"\n};\nexport { ADAPTER_CATEGORY, ADAPTER_EVENTS, ADAPTER_NAMES, ADAPTER_NAMESPACES, ADAPTER_STATUS, BaseAdapter, BaseNetworkSwitch, CHAIN_NAMESPACES, EVM_ADAPTERS, MULTI_CHAIN_ADAPTERS, PROVIDER_EVENTS, SOLANA_ADAPTERS, WALLET_ADAPTERS, WalletInitializationError, WalletLoginError, WalletOperationsError, Web3AuthError, authServer, checkIfTokenIsExpired, clearToken, getChainConfig, getEvmChainConfig, getSavedToken, getSolanaChainConfig, isHexStrict, log, saveToken, signChallenge, storageAvailable, verifySignedChallenge };","map":{"version":3,"names":["CHAIN_NAMESPACES","EIP155","SOLANA","OTHER","ADAPTER_NAMESPACES","XRPL","MULTICHAIN","getDefaultNetworkId","chainNamespace","Error","getEvmChainConfig","chainId","rpcTarget","displayName","blockExplorer","ticker","tickerName","decimals","getSolanaChainConfig","getChainConfig","finalChainId","parseInt","Web3AuthError","CustomError","constructor","code","message","_defineProperty","Object","defineProperty","value","toJSON","name","toString","JSON","stringify","WalletInitializationError","fromCode","extraMessage","arguments","length","undefined","messages","notFound","notInstalled","notReady","windowBlocked","windowClosed","incompatibleChainNameSpace","duplicateAdapterError","invalidProviderConfigError","providerNotReadyError","rpcConnectionError","invalidParams","invalidNetwork","WalletLoginError","connectionError","disconnectionError","notConnectedError","popupClosed","mfaEnabled","chainConfigNotAdded","unsupportedOperation","coreKitKeyNotFound","userNotLoggedIn","WalletOperationsError","chainIDNotAllowed","operationNotAllowed","chainNamespaceNotAllowed","MULTI_CHAIN_ADAPTERS","OPENLOGIN","WALLET_CONNECT_V1","WALLET_CONNECT_V2","SOLANA_ADAPTERS","_objectSpread$1","TORUS_SOLANA","PHANTOM","SOLFLARE","SLOPE","EVM_ADAPTERS","TORUS_EVM","METAMASK","COINBASE","WALLET_ADAPTERS","ADAPTER_NAMES","ADAPTER_CATEGORY","EXTERNAL","IN_APP","ADAPTER_STATUS","NOT_READY","READY","CONNECTING","CONNECTED","DISCONNECTED","ERRORED","ADAPTER_EVENTS","_objectSpread","ADAPTER_DATA_UPDATED","CACHE_CLEAR","BaseAdapter","SafeEventEmitter","options","OPENLOGIN_NETWORK","MAINNET","setAdapterSettings","chainConfigProxy","chainConfig","connnected","status","sessionTime","clientId","web3AuthNetwork","customChainConfig","currentChainNamespace","defaultChainConfig","finalChainConfig","addChainConfig","checkConnectionRequirements","checkInitializationRequirements","checkDisconnectionRequirements","checkAddChainRequirements","init","provider","checkSwitchChainRequirements","_ref","knownChainConfigs","updateAdapterData","data","adapterData","emit","adapterName","currentConfig","BaseNetworkSwitch","authServer","log","loglevel","getLogger","storageAvailable","type","storageExists","storageLength","storage","window","x","setItem","removeItem","error","_error","isHexStrict","hex","test","checkIfTokenIsExpired","token","decoded","JwtDecode","exp","Math","floor","Date","now","signChallenge","payload","t","header","network","res","post","success","challenge","verifySignedChallenge","signedMessage","issuer","sigData","signature","s","audience","location","hostname","timeout","idTokenRes","headers","client_id","wallet_provider","web3auth_network","getSavedToken","userAddress","localStorage","getItem","toLowerCase","saveToken","clearToken","PROVIDER_EVENTS","INITIALIZED"],"sources":["/Users/Einpunk Community/Documents/Brownie/brownie_gamex_vault/node_modules/@web3auth/base/src/chain/IChainInterface.ts","/Users/Einpunk Community/Documents/Brownie/brownie_gamex_vault/node_modules/@web3auth/base/src/chain/config.ts","/Users/Einpunk Community/Documents/Brownie/brownie_gamex_vault/node_modules/@web3auth/base/src/errors/index.ts","/Users/Einpunk Community/Documents/Brownie/brownie_gamex_vault/node_modules/@web3auth/base/src/wallet/index.ts","/Users/Einpunk Community/Documents/Brownie/brownie_gamex_vault/node_modules/@web3auth/base/src/adapter/IAdapter.ts","/Users/Einpunk Community/Documents/Brownie/brownie_gamex_vault/node_modules/@web3auth/base/src/constants.ts","/Users/Einpunk Community/Documents/Brownie/brownie_gamex_vault/node_modules/@web3auth/base/src/loglevel.ts","/Users/Einpunk Community/Documents/Brownie/brownie_gamex_vault/node_modules/@web3auth/base/src/utils.ts","/Users/Einpunk Community/Documents/Brownie/brownie_gamex_vault/node_modules/@web3auth/base/src/adapter/utils.ts","/Users/Einpunk Community/Documents/Brownie/brownie_gamex_vault/node_modules/@web3auth/base/src/provider/IProvider.ts"],"sourcesContent":["export const CHAIN_NAMESPACES = {\n  EIP155: \"eip155\",\n  SOLANA: \"solana\",\n  OTHER: \"other\",\n} as const;\n// eip155 for all evm chains\nexport type ChainNamespaceType = (typeof CHAIN_NAMESPACES)[keyof typeof CHAIN_NAMESPACES];\n\nexport const ADAPTER_NAMESPACES = {\n  EIP155: \"eip155\",\n  SOLANA: \"solana\",\n  XRPL: \"xrpl\",\n  MULTICHAIN: \"multichain\",\n} as const;\n// eip155 for all evm chains\nexport type AdapterNamespaceType = (typeof ADAPTER_NAMESPACES)[keyof typeof ADAPTER_NAMESPACES];\n\nexport type CustomChainConfig = {\n  chainNamespace: ChainNamespaceType;\n  /**\n   * The chain id of the chain\n   */\n  chainId: string;\n  /**\n   * RPC target Url for the chain\n   */\n  rpcTarget: string;\n\n  /**\n   * web socket target Url for the chain\n   */\n  wsTarget?: string;\n\n  /**\n   * Display Name for the chain\n   */\n  displayName: string;\n  /**\n   * Url of the block explorer\n   */\n  blockExplorer: string;\n  /**\n   * Default currency ticker of the network (e.g: ETH)\n   */\n  ticker: string;\n  /**\n   * Name for currency ticker (e.g: `Ethereum`)\n   */\n  tickerName: string;\n  /**\n   * Number of decimals for the currency ticker (e.g: 18)\n   */\n  decimals?: number;\n};\n","import { CHAIN_NAMESPACES, ChainNamespaceType, CustomChainConfig } from \"./IChainInterface\";\nconst getDefaultNetworkId = (chainNamespace: ChainNamespaceType): number => {\n  if (chainNamespace === CHAIN_NAMESPACES.EIP155) {\n    return 1;\n  } else if (chainNamespace === CHAIN_NAMESPACES.SOLANA) {\n    return 1;\n  }\n  throw new Error(`Chain namespace ${chainNamespace} is not supported`);\n};\n\nexport const getEvmChainConfig = (chainId: number): CustomChainConfig | null => {\n  const chainNamespace = CHAIN_NAMESPACES.EIP155;\n  if (chainId === 1) {\n    return {\n      chainNamespace,\n      chainId: \"0x1\",\n      rpcTarget: `https://rpc.ankr.com/eth`,\n      displayName: \"Ethereum Mainnet\",\n      blockExplorer: \"https://etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\",\n      decimals: 18,\n    };\n  }\n  if (chainId === 5) {\n    return {\n      chainNamespace,\n      chainId: \"0x5\",\n      rpcTarget: `https://rpc.ankr.com/eth_goerli`,\n      displayName: \"Goerli Testnet\",\n      blockExplorer: \"https://goerli.etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\",\n      decimals: 18,\n    };\n  }\n  if (chainId === 11155111) {\n    return {\n      chainNamespace,\n      chainId: \"0xaa36a7\",\n      rpcTarget: `https://rpc.ankr.com/eth_sepolia`,\n      displayName: \"Sepolia Testnet\",\n      blockExplorer: \"https://sepolia.etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\",\n      decimals: 18,\n    };\n  }\n  if (chainId === 137) {\n    return {\n      chainNamespace,\n      chainId: \"0x89\",\n      rpcTarget: \"https://rpc.ankr.com/polygon\",\n      displayName: \"Polygon Mainnet\",\n      blockExplorer: \"https://polygonscan.com\",\n      ticker: \"MATIC\",\n      tickerName: \"Polygon\",\n    };\n  }\n  if (chainId === 80001) {\n    return {\n      chainNamespace,\n      chainId: \"0x13881\",\n      rpcTarget: \"https://rpc.ankr.com/polygon_mumbai\",\n      displayName: \"Polygon Mumbai Testnet\",\n      blockExplorer: \"https://mumbai.polygonscan.com/\",\n      ticker: \"MATIC\",\n      tickerName: \"Polygon\",\n      decimals: 18,\n    };\n  }\n  if (chainId === 56) {\n    return {\n      chainNamespace,\n      chainId: \"0x38\",\n      rpcTarget: \"https://rpc.ankr.com/bsc\",\n      displayName: \"Binance SmartChain Mainnet\",\n      blockExplorer: \"https://bscscan.com\",\n      ticker: \"BNB\",\n      tickerName: \"Binance SmartChain\",\n      decimals: 18,\n    };\n  }\n  if (chainId === 97) {\n    return {\n      chainNamespace,\n      chainId: \"0x61\",\n      rpcTarget: \"https://rpc.ankr.com/bsc_testnet_chapel\",\n      displayName: \"Binance SmartChain Testnet\",\n      blockExplorer: \"https://testnet.bscscan.com\",\n      ticker: \"BNB\",\n      tickerName: \"Binance SmartChain\",\n      decimals: 18,\n    };\n  }\n  if (chainId === 25) {\n    return {\n      chainNamespace,\n      chainId: \"0x19\",\n      rpcTarget: \"https://rpc.cronos.org\",\n      displayName: \"Cronos Mainnet\",\n      blockExplorer: \"https://cronoscan.com/\",\n      ticker: \"CRO\",\n      tickerName: \"Cronos\",\n    };\n  }\n  if (chainId === 338) {\n    return {\n      chainNamespace,\n      chainId: \"0x152\",\n      rpcTarget: \"https://rpc-t3.cronos.org/\",\n      displayName: \"Cronos Testnet\",\n      blockExplorer: \"https://cronoscan.com/\",\n      ticker: \"CRO\",\n      tickerName: \"Cronos\",\n      decimals: 18,\n    };\n  }\n  if (chainId === 8217) {\n    return {\n      chainNamespace,\n      chainId: \"0x2019\",\n      rpcTarget: \"https://public-node-api.klaytnapi.com/v1/cypress\",\n      displayName: \"Klaytn Mainnet\",\n      blockExplorer: \"https://scope.klaytn.com\",\n      ticker: \"KLAY\",\n      tickerName: \"Klaytn\",\n      decimals: 18,\n    };\n  }\n\n  return null;\n};\n\nexport const getSolanaChainConfig = (chainId: number): CustomChainConfig | null => {\n  const chainNamespace = CHAIN_NAMESPACES.SOLANA;\n  if (chainId === 1) {\n    return {\n      chainNamespace,\n      chainId: \"0x1\",\n      rpcTarget: \"https://rpc.ankr.com/solana\",\n      displayName: \"Solana Mainnet\",\n      blockExplorer: \"https://explorer.solana.com\",\n      ticker: \"SOL\",\n      tickerName: \"Solana\",\n      decimals: 9,\n    };\n  } else if (chainId === 2) {\n    return {\n      chainNamespace,\n      chainId: \"0x2\",\n      rpcTarget: \"https://api.testnet.solana.com\",\n      displayName: \"Solana Testnet\",\n      blockExplorer: \"https://explorer.solana.com?cluster=testnet\",\n      ticker: \"SOL\",\n      tickerName: \"Solana\",\n      decimals: 9,\n    };\n  } else if (chainId === 3) {\n    return {\n      chainNamespace,\n      chainId: \"0x3\",\n      rpcTarget: \"https://api.devnet.solana.com\",\n      displayName: \"Solana Devnet\",\n      blockExplorer: \"https://explorer.solana.com?cluster=devnet\",\n      ticker: \"SOL\",\n      tickerName: \"Solana\",\n      decimals: 9,\n    };\n  }\n\n  return null;\n};\n\nexport const getChainConfig = (chainNamespace: ChainNamespaceType, chainId?: number | string): CustomChainConfig | null => {\n  if (chainNamespace === CHAIN_NAMESPACES.OTHER) return null;\n  const finalChainId = chainId ? (typeof chainId === \"number\" ? chainId : parseInt(chainId, 16)) : getDefaultNetworkId(chainNamespace);\n  if (chainNamespace === CHAIN_NAMESPACES.EIP155) {\n    return getEvmChainConfig(finalChainId);\n  } else if (chainNamespace === CHAIN_NAMESPACES.SOLANA) {\n    return getSolanaChainConfig(finalChainId);\n  }\n  return null;\n};\n","import { CustomError } from \"ts-custom-error\";\n\n// @flow\nexport interface IWeb3AuthError extends CustomError {\n  code: number;\n  message: string;\n  toString(): string;\n}\n\nexport type ErrorCodes = {\n  [key: number]: string;\n};\n\nexport abstract class Web3AuthError extends CustomError implements IWeb3AuthError {\n  code: number;\n\n  message: string;\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(message);\n\n    this.code = code;\n    this.message = message || \"\";\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"Web3AuthError\" });\n  }\n\n  toJSON(): IWeb3AuthError {\n    return {\n      name: this.name,\n      code: this.code,\n      message: this.message,\n    };\n  }\n\n  toString(): string {\n    return JSON.stringify(this.toJSON());\n  }\n}\n\nexport class WalletInitializationError extends Web3AuthError {\n  protected static messages: ErrorCodes = {\n    5000: \"Custom\",\n    5001: \"Wallet is not found\",\n    5002: \"Wallet is not installed\",\n    5003: \"Wallet is not ready yet\",\n    5004: \"Wallet window is blocked\",\n    5005: \"Wallet window has been closed by the user\",\n    5006: \"Incompatible chain namespace provided\",\n    5007: \"Adapter has already been included\",\n    5008: \"Invalid provider Config\",\n    5009: \"Provider is not ready yet\",\n    5010: \"Failed to connect with rpc url\",\n    5011: \"Invalid params passed in\",\n    5013: \"Invalid network provided\",\n  };\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(code, message);\n\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"WalletInitializationError\" });\n  }\n\n  public static fromCode(code: number, extraMessage = \"\"): IWeb3AuthError {\n    return new WalletInitializationError(code, `${WalletInitializationError.messages[code]}, ${extraMessage}`);\n  }\n\n  // Custom methods\n  public static notFound(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5001, extraMessage);\n  }\n\n  public static notInstalled(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5002, extraMessage);\n  }\n\n  public static notReady(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5003, extraMessage);\n  }\n\n  public static windowBlocked(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5004, extraMessage);\n  }\n\n  public static windowClosed(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5005, extraMessage);\n  }\n\n  public static incompatibleChainNameSpace(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5006, extraMessage);\n  }\n\n  public static duplicateAdapterError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5007, extraMessage);\n  }\n\n  public static invalidProviderConfigError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5008, extraMessage);\n  }\n\n  public static providerNotReadyError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5009, extraMessage);\n  }\n\n  public static rpcConnectionError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5010, extraMessage);\n  }\n\n  public static invalidParams(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5011, extraMessage);\n  }\n\n  public static invalidNetwork(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5013, extraMessage);\n  }\n}\n\n/**\n * wallet login errors\n */\n\nexport class WalletLoginError extends Web3AuthError {\n  protected static messages: ErrorCodes = {\n    5000: \"Custom\",\n    5111: \"Failed to connect with wallet\",\n    5112: \"Failed to disconnect from wallet\",\n    5113: \"Wallet is not connected\",\n    5114: \"Wallet popup has been closed by the user\",\n    5115: \"User has already enabled mfa, please use the @web3auth/web3auth-web sdk for login with mfa\",\n    5116: \"Chain config has not been added. Please add the chain config before calling switchChain\",\n    5117: \"Unsupported operation\",\n    5118: \"useCoreKitKey flag is enabled but coreKitKey is not available\",\n    5119: \"User not logged in.\",\n  };\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(code, message);\n\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"WalletLoginError\" });\n  }\n\n  public static fromCode(code: number, extraMessage = \"\"): IWeb3AuthError {\n    return new WalletLoginError(code, `${WalletLoginError.messages[code]}. ${extraMessage}`);\n  }\n\n  public static connectionError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5111, extraMessage);\n  }\n\n  public static disconnectionError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5112, extraMessage);\n  }\n\n  public static notConnectedError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5113, extraMessage);\n  }\n\n  public static popupClosed(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5114, extraMessage);\n  }\n\n  public static mfaEnabled(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5115, extraMessage);\n  }\n\n  public static chainConfigNotAdded(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5116, extraMessage);\n  }\n\n  public static unsupportedOperation(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5117, extraMessage);\n  }\n\n  public static coreKitKeyNotFound(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5118, extraMessage);\n  }\n\n  public static userNotLoggedIn(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5119, extraMessage);\n  }\n}\n\nexport class WalletOperationsError extends Web3AuthError {\n  protected static messages: ErrorCodes = {\n    5000: \"Custom\",\n    5201: \"Provided chainId is not allowed\",\n    5202: \"This operation is not allowed\",\n  };\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(code, message);\n\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"WalletOperationsError\" });\n  }\n\n  public static fromCode(code: number, extraMessage = \"\"): IWeb3AuthError {\n    return new WalletOperationsError(code, `${WalletOperationsError.messages[code]}, ${extraMessage}`);\n  }\n\n  // Custom methods\n  public static chainIDNotAllowed(extraMessage = \"\"): IWeb3AuthError {\n    return WalletOperationsError.fromCode(5201, extraMessage);\n  }\n\n  public static operationNotAllowed(extraMessage = \"\"): IWeb3AuthError {\n    return WalletOperationsError.fromCode(5202, extraMessage);\n  }\n\n  public static chainNamespaceNotAllowed(extraMessage = \"\"): IWeb3AuthError {\n    return WalletOperationsError.fromCode(5203, extraMessage);\n  }\n}\n","export const MULTI_CHAIN_ADAPTERS = {\n  OPENLOGIN: \"openlogin\",\n  WALLET_CONNECT_V1: \"wallet-connect-v1\",\n  WALLET_CONNECT_V2: \"wallet-connect-v2\",\n};\n\nexport const SOLANA_ADAPTERS = {\n  TORUS_SOLANA: \"torus-solana\",\n  PHANTOM: \"phantom\",\n  SOLFLARE: \"solflare\",\n  SLOPE: \"slope\",\n  ...MULTI_CHAIN_ADAPTERS,\n};\n\nexport const EVM_ADAPTERS = {\n  TORUS_EVM: \"torus-evm\",\n  METAMASK: \"metamask\",\n  COINBASE: \"coinbase\",\n  ...MULTI_CHAIN_ADAPTERS,\n};\n\nexport const WALLET_ADAPTERS = {\n  ...EVM_ADAPTERS,\n  ...SOLANA_ADAPTERS,\n};\nexport type WALLET_ADAPTER_TYPE = (typeof WALLET_ADAPTERS)[keyof typeof WALLET_ADAPTERS];\nexport type SOLANA_ADAPTER_TYPE = (typeof SOLANA_ADAPTERS)[keyof typeof SOLANA_ADAPTERS];\nexport type EVM_ADAPTER_TYPE = (typeof EVM_ADAPTERS)[keyof typeof EVM_ADAPTERS];\nexport type MULTI_CHAIN_ADAPTER_TYPE = (typeof MULTI_CHAIN_ADAPTERS)[keyof typeof MULTI_CHAIN_ADAPTERS];\n\nexport const ADAPTER_NAMES = {\n  [MULTI_CHAIN_ADAPTERS.OPENLOGIN]: \"OpenLogin\",\n  [MULTI_CHAIN_ADAPTERS.WALLET_CONNECT_V1]: \"Wallet Connect v1\",\n  [MULTI_CHAIN_ADAPTERS.WALLET_CONNECT_V2]: \"Wallet Connect v2\",\n  [SOLANA_ADAPTERS.TORUS_SOLANA]: \"Torus\",\n  [SOLANA_ADAPTERS.PHANTOM]: \"Phantom\",\n  [SOLANA_ADAPTERS.SOLFLARE]: \"Solflare\",\n  [SOLANA_ADAPTERS.SLOPE]: \"Slope\",\n  [EVM_ADAPTERS.TORUS_EVM]: \"Torus\",\n  [EVM_ADAPTERS.METAMASK]: \"Metamask\",\n  [EVM_ADAPTERS.COINBASE]: \"Coinbase\",\n};\n","import { SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\nimport { OPENLOGIN_NETWORK, OPENLOGIN_NETWORK_TYPE, OpenloginUserInfo } from \"@toruslabs/openlogin-utils\";\n\nimport { getChainConfig } from \"../chain/config\";\nimport { AdapterNamespaceType, CHAIN_NAMESPACES, ChainNamespaceType, CustomChainConfig } from \"../chain/IChainInterface\";\nimport { WalletInitializationError, WalletLoginError, WalletOperationsError } from \"../errors\";\nimport { SafeEventEmitterProvider } from \"../provider/IProvider\";\nimport { WALLET_ADAPTERS } from \"../wallet\";\n\nexport type UserInfo = OpenloginUserInfo;\n\nexport const ADAPTER_CATEGORY = {\n  EXTERNAL: \"external\",\n  IN_APP: \"in_app\",\n} as const;\nexport type ADAPTER_CATEGORY_TYPE = (typeof ADAPTER_CATEGORY)[keyof typeof ADAPTER_CATEGORY];\n\nexport interface AdapterInitOptions {\n  /**\n   * Whether to auto connect to the adapter based on redirect mode or saved adapters\n   */\n  autoConnect?: boolean;\n}\n\nexport const ADAPTER_STATUS = {\n  NOT_READY: \"not_ready\",\n  READY: \"ready\",\n  CONNECTING: \"connecting\",\n  CONNECTED: \"connected\",\n  DISCONNECTED: \"disconnected\",\n  ERRORED: \"errored\",\n} as const;\n\nexport const ADAPTER_EVENTS = {\n  ...ADAPTER_STATUS,\n  ADAPTER_DATA_UPDATED: \"adapter_data_updated\",\n  CACHE_CLEAR: \"cache_clear\",\n} as const;\nexport type ADAPTER_STATUS_TYPE = (typeof ADAPTER_STATUS)[keyof typeof ADAPTER_STATUS];\n\nexport type CONNECTED_EVENT_DATA = {\n  adapter: string;\n  reconnected: boolean;\n};\n\nexport type UserAuthInfo = { idToken: string };\n\nexport interface BaseAdapterSettings {\n  clientId?: string;\n  sessionTime?: number;\n  chainConfig?: Partial<CustomChainConfig> & Pick<CustomChainConfig, \"chainNamespace\">;\n  web3AuthNetwork?: OPENLOGIN_NETWORK_TYPE;\n  useCoreKitKey?: boolean;\n}\n\nexport interface IAdapter<T> extends SafeEventEmitter {\n  adapterNamespace: AdapterNamespaceType;\n  currentChainNamespace: ChainNamespaceType;\n  chainConfigProxy: CustomChainConfig | null;\n  type: ADAPTER_CATEGORY_TYPE;\n  name: string;\n  sessionTime: number;\n  web3AuthNetwork: OPENLOGIN_NETWORK_TYPE;\n  clientId: string;\n  status: ADAPTER_STATUS_TYPE;\n  provider: SafeEventEmitterProvider | null;\n  adapterData?: unknown;\n  connnected: boolean;\n  addChain(chainConfig: CustomChainConfig): Promise<void>;\n  init(options?: AdapterInitOptions): Promise<void>;\n  disconnect(options?: { cleanup: boolean }): Promise<void>;\n  connect(params?: T): Promise<SafeEventEmitterProvider | null>;\n  getUserInfo(): Promise<Partial<UserInfo>>;\n  setAdapterSettings(adapterSettings: BaseAdapterSettings): void;\n  switchChain(params: { chainId: string }): Promise<void>;\n  authenticateUser(): Promise<UserAuthInfo>;\n}\n\nexport abstract class BaseAdapter<T> extends SafeEventEmitter implements IAdapter<T> {\n  public adapterData?: unknown = {};\n\n  public sessionTime = 86400;\n\n  public clientId: string;\n\n  public web3AuthNetwork: OPENLOGIN_NETWORK_TYPE = OPENLOGIN_NETWORK.MAINNET;\n\n  protected rehydrated = false;\n\n  // should be added in constructor or from setAdapterSettings function\n  // before calling init function.\n  protected chainConfig: CustomChainConfig | null = null;\n\n  protected knownChainConfigs: Record<CustomChainConfig[\"chainId\"], CustomChainConfig> = {};\n\n  public abstract adapterNamespace: AdapterNamespaceType;\n\n  public abstract currentChainNamespace: ChainNamespaceType;\n\n  public abstract type: ADAPTER_CATEGORY_TYPE;\n\n  public abstract name: string;\n\n  public abstract status: ADAPTER_STATUS_TYPE;\n\n  constructor(options: BaseAdapterSettings = {}) {\n    super();\n    this.setAdapterSettings(options);\n  }\n\n  get chainConfigProxy(): CustomChainConfig | null {\n    return this.chainConfig ? { ...this.chainConfig } : null;\n  }\n\n  get connnected(): boolean {\n    return this.status === ADAPTER_STATUS.CONNECTED;\n  }\n\n  public abstract get provider(): SafeEventEmitterProvider | null;\n\n  public setAdapterSettings(options: BaseAdapterSettings): void {\n    if (this.status === ADAPTER_STATUS.READY) return;\n    if (options?.sessionTime) {\n      this.sessionTime = options.sessionTime;\n    }\n    if (options?.clientId) {\n      this.clientId = options.clientId;\n    }\n    if (options?.web3AuthNetwork) {\n      this.web3AuthNetwork = options.web3AuthNetwork;\n    }\n    const customChainConfig = options.chainConfig;\n    if (customChainConfig) {\n      if (!customChainConfig.chainNamespace) throw WalletInitializationError.notReady(\"ChainNamespace is required while setting chainConfig\");\n      this.currentChainNamespace = customChainConfig.chainNamespace;\n      // chainId is optional in this function.\n      // we go with mainnet chainId by default.\n      const defaultChainConfig = getChainConfig(customChainConfig.chainNamespace, customChainConfig.chainId);\n      // NOTE: It is being forced casted to CustomChainConfig to handle OTHER Chainnamespace\n      // where chainConfig is not required.\n      const finalChainConfig = { ...(defaultChainConfig || {}), ...customChainConfig } as CustomChainConfig;\n\n      this.chainConfig = finalChainConfig;\n      this.addChainConfig(finalChainConfig);\n    }\n  }\n\n  checkConnectionRequirements(): void {\n    // we reconnect without killing existing wallet connect session on calling connect again.\n    if (\n      (this.name === WALLET_ADAPTERS.WALLET_CONNECT_V1 || this.name === WALLET_ADAPTERS.WALLET_CONNECT_V2) &&\n      this.status === ADAPTER_STATUS.CONNECTING\n    )\n      return;\n    else if (this.status === ADAPTER_STATUS.CONNECTING) throw WalletInitializationError.notReady(\"Already connecting\");\n\n    if (this.status === ADAPTER_STATUS.CONNECTED) throw WalletLoginError.connectionError(\"Already connected\");\n    if (this.status !== ADAPTER_STATUS.READY)\n      throw WalletLoginError.connectionError(\n        \"Wallet adapter is not ready yet, Please wait for init function to resolve before calling connect/connectTo function\"\n      );\n  }\n\n  checkInitializationRequirements(): void {\n    if (!this.clientId) throw WalletInitializationError.invalidParams(\"Please initialize Web3Auth with a valid clientId in constructor\");\n    if (!this.chainConfig) throw WalletInitializationError.invalidParams(\"rpcTarget is required in chainConfig\");\n    if (!this.chainConfig.rpcTarget && this.chainConfig.chainNamespace !== CHAIN_NAMESPACES.OTHER) {\n      throw WalletInitializationError.invalidParams(\"rpcTarget is required in chainConfig\");\n    }\n\n    if (!this.chainConfig.chainId && this.chainConfig.chainNamespace !== CHAIN_NAMESPACES.OTHER) {\n      throw WalletInitializationError.invalidParams(\"chainID is required in chainConfig\");\n    }\n    if (this.status === ADAPTER_STATUS.NOT_READY) return;\n    if (this.status === ADAPTER_STATUS.CONNECTED) throw WalletInitializationError.notReady(\"Already connected\");\n    if (this.status === ADAPTER_STATUS.READY) throw WalletInitializationError.notReady(\"Adapter is already initialized\");\n  }\n\n  checkDisconnectionRequirements(): void {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.disconnectionError(\"Not connected with wallet\");\n  }\n\n  checkAddChainRequirements(chainConfig: CustomChainConfig, init = false): void {\n    if (!init && !this.provider) throw WalletLoginError.notConnectedError(\"Not connected with wallet.\");\n    if (this.currentChainNamespace !== chainConfig.chainNamespace) {\n      throw WalletOperationsError.chainNamespaceNotAllowed(\"This adapter doesn't support this chainNamespace\");\n    }\n  }\n\n  checkSwitchChainRequirements({ chainId }: { chainId: string }, init = false): void {\n    if (!init && !this.provider) throw WalletLoginError.notConnectedError(\"Not connected with wallet.\");\n    if (!this.knownChainConfigs[chainId]) throw WalletLoginError.chainConfigNotAdded(\"Invalid chainId\");\n  }\n\n  updateAdapterData(data: unknown): void {\n    this.adapterData = data;\n    this.emit(ADAPTER_EVENTS.ADAPTER_DATA_UPDATED, { adapterName: this.name, data });\n  }\n\n  protected addChainConfig(chainConfig: CustomChainConfig): void {\n    const currentConfig = this.knownChainConfigs[chainConfig.chainId];\n    this.knownChainConfigs[chainConfig.chainId] = {\n      ...(currentConfig || {}),\n      ...chainConfig,\n    };\n  }\n\n  protected getChainConfig(chainId: string): CustomChainConfig | null {\n    return this.knownChainConfigs[chainId] || null;\n  }\n\n  abstract init(options?: AdapterInitOptions): Promise<void>;\n  abstract connect(params?: T): Promise<SafeEventEmitterProvider | null>;\n  abstract disconnect(): Promise<void>;\n  abstract getUserInfo(): Promise<Partial<UserInfo>>;\n  abstract authenticateUser(): Promise<UserAuthInfo>;\n  abstract addChain(chainConfig: CustomChainConfig): Promise<void>;\n  abstract switchChain(params: { chainId: string }): Promise<void>;\n}\n\nexport interface BaseAdapterConfig {\n  label: string;\n  showOnModal?: boolean;\n  showOnMobile?: boolean;\n  showOnDesktop?: boolean;\n}\n\nexport type LoginMethodConfig = Record<\n  string,\n  {\n    /**\n     * Display Name. If not provided, we use the default for openlogin app\n     */\n    name: string;\n    /**\n     * Description for button. If provided, it renders as a full length button. else, icon button\n     */\n    description?: string;\n    /**\n     * Logo to be shown on mouse hover. If not provided, we use the default for openlogin app\n     */\n    logoHover?: string;\n    /**\n     * Logo to be shown on dark background (dark theme). If not provided, we use the default for openlogin app\n     */\n    logoLight?: string;\n    /**\n     * Logo to be shown on light background (light theme). If not provided, we use the default for openlogin app\n     */\n    logoDark?: string;\n    /**\n     * Show login button on the main list\n     */\n    mainOption?: boolean;\n    /**\n     * Whether to show the login button on modal or not\n     */\n    showOnModal?: boolean;\n    /**\n     * Whether to show the login button on desktop\n     */\n    showOnDesktop?: boolean;\n    /**\n     * Whether to show the login button on mobile\n     */\n    showOnMobile?: boolean;\n  }\n>;\n\nexport interface IWalletConnectExtensionAdapter {\n  name: string;\n  chains: ChainNamespaceType[];\n  logo: string;\n  mobile: {\n    native: string;\n    universal: string;\n  };\n  desktop: {\n    native: string;\n    universal: string;\n  };\n}\n\nexport interface WalletConnectV1Data {\n  uri: string;\n  extensionAdapters: IWalletConnectExtensionAdapter[];\n}\n\nexport type WalletConnectV2Data = WalletConnectV1Data;\nexport interface IAdapterDataEvent {\n  adapterName: string;\n  data: unknown;\n}\n\nexport interface INetworkSwitchProvider {\n  addChain(chainConfig: CustomChainConfig): Promise<void>;\n  switchChain(chainId: string): Promise<void>;\n}\nexport interface INetworkSwitch {\n  addNetwork(params: { chainConfig: CustomChainConfig; appOrigin: string }): Promise<boolean>;\n  switchNetwork(params: { currentChainConfig: CustomChainConfig; newChainConfig: Partial<CustomChainConfig>; appOrigin: string }): Promise<boolean>;\n}\n\nexport abstract class BaseNetworkSwitch implements INetworkSwitch {\n  abstract switchNetwork(params: {\n    currentChainConfig: CustomChainConfig;\n    newChainConfig: Partial<CustomChainConfig>;\n    appOrigin: string;\n  }): Promise<boolean>;\n\n  abstract addNetwork(params: { chainConfig: CustomChainConfig; appOrigin: string }): Promise<boolean>;\n}\n","export const authServer = \"https://authjs.web3auth.io\";\n","import loglevel from \"loglevel\";\n\nexport default loglevel.getLogger(\"web3auth-logger\");\n","export function storageAvailable(type: \"sessionStorage\" | \"localStorage\"): boolean {\n  let storageExists = false;\n  let storageLength = 0;\n  let storage: Storage;\n  try {\n    storage = (window as any)[type];\n    storageExists = true;\n    storageLength = storage.length;\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (error: unknown) {\n    const _error = error as DOMException;\n    return !!(\n      _error &&\n      // everything except Firefox\n      (_error.code === 22 ||\n        // Firefox\n        _error.code === 1014 ||\n        // test name field too, because code might not be present\n        // everything except Firefox\n        _error.name === \"QuotaExceededError\" ||\n        // Firefox\n        _error.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n      // acknowledge QuotaExceededError only if there's something already stored\n      storageExists &&\n      storageLength !== 0\n    );\n  }\n}\n\nexport const isHexStrict = (hex: string): boolean => {\n  return (typeof hex === \"string\" || typeof hex === \"number\") && /^(-)?0x[0-9a-f]*$/i.test(hex);\n};\n","import { post } from \"@toruslabs/http-helpers\";\nimport { OPENLOGIN_NETWORK_TYPE } from \"@toruslabs/openlogin-utils\";\nimport JwtDecode from \"jwt-decode\";\n\nimport { ChainNamespaceType } from \"../chain/IChainInterface\";\nimport { authServer } from \"../constants\";\nimport log from \"../loglevel\";\nimport { storageAvailable } from \"../utils\";\n\nexport const checkIfTokenIsExpired = (token: string) => {\n  const decoded = JwtDecode<{ exp: number }>(token);\n  if (!decoded.exp) {\n    return true;\n  }\n  if (decoded.exp < Math.floor(Date.now() / 1000)) {\n    return true;\n  }\n  return false;\n};\n\nexport const signChallenge = async (payload: Record<string, string | number>, chainNamespace: ChainNamespaceType): Promise<string> => {\n  const t = chainNamespace === \"solana\" ? \"sip99\" : \"eip191\";\n  const header = {\n    t,\n  };\n\n  const network = chainNamespace === \"solana\" ? \"solana\" : \"ethereum\";\n  const data = {\n    payload,\n    header,\n    network,\n  };\n  const res = await post<{ success: boolean; challenge: string }>(`${authServer}/siww/get`, data);\n  if (!res.success) {\n    throw new Error(\"Failed to authenticate user, Please reach out to Web3Auth Support team\");\n  }\n\n  return res.challenge;\n};\n\nexport const verifySignedChallenge = async (\n  chainNamespace: ChainNamespaceType,\n  signedMessage: string,\n  challenge: string,\n  issuer: string,\n  sessionTime: number,\n  clientId?: string,\n  web3AuthNetwork?: OPENLOGIN_NETWORK_TYPE\n): Promise<string> => {\n  const t = chainNamespace === \"solana\" ? \"sip99\" : \"eip191\";\n  const sigData = {\n    signature: {\n      s: signedMessage,\n      t,\n    },\n    message: challenge,\n    issuer,\n    audience: window.location.hostname,\n    timeout: sessionTime,\n  };\n\n  const idTokenRes = await post<{ success: boolean; token: string; error?: string }>(`${authServer}/siww/verify`, sigData, {\n    headers: {\n      client_id: clientId,\n      wallet_provider: issuer,\n      web3auth_network: web3AuthNetwork,\n    },\n  });\n  if (!idTokenRes.success) {\n    log.error(\"Failed to authenticate user, ,message verification failed\", idTokenRes.error);\n    throw new Error(\"Failed to authenticate user, ,message verification failed\");\n  }\n  return idTokenRes.token;\n};\n\nexport const getSavedToken = (userAddress: string, issuer: string) => {\n  if (storageAvailable(\"localStorage\")) {\n    return localStorage.getItem(`${userAddress.toLowerCase()}_${issuer}`);\n  }\n  return null;\n};\n\nexport const saveToken = (userAddress: string, issuer: string, token: string) => {\n  if (storageAvailable(\"localStorage\")) {\n    return localStorage.setItem(`${userAddress.toLowerCase()}_${issuer}`, token);\n  }\n  return null;\n};\n\nexport const clearToken = (userAddress: string, issuer: string) => {\n  if (storageAvailable(\"localStorage\")) {\n    return localStorage.removeItem(`${userAddress.toLowerCase()}_${issuer}`);\n  }\n  return null;\n};\n","import { JRPCRequest, SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\n\nexport type SendCallBack<U> = (err: unknown, providerRes: U) => void;\nexport interface RequestArguments {\n  method: string;\n  params?: unknown[] | object;\n}\n\nexport type Maybe<T> = T | Partial<T> | null | undefined;\n\nexport interface SafeEventEmitterProvider extends SafeEventEmitter {\n  sendAsync: <T, U>(req: JRPCRequest<T>) => Promise<U>;\n  send: <T, U>(req: JRPCRequest<T>, callback: SendCallBack<U>) => void;\n  request: <T>(args: RequestArguments) => Promise<Maybe<T>>;\n}\n\nexport const PROVIDER_EVENTS = {\n  INITIALIZED: \"initialized\",\n  ERRORED: \"errored\",\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}